{"id":"e4cfc767270a7fe350b8dab90bd01dc5","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"contracts/Aggregator.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport {IDexHandlerFactory} from \"./interfaces/IDexHandlerFactory.sol\";\r\nimport {SwapMultiHop} from \"./structs/SAggregator.sol\";\r\nimport {Address} from \"./libraries/Address.sol\";\r\nimport {SafeERC20} from \"./libraries/SafeERC20.sol\";\r\n\r\n\r\ncontract Aggregator {\r\n    using Address for address;\r\n    using SafeERC20 for IERC20;\r\n\r\n    IDexHandlerFactory public factory;\r\n    address public owner;\r\n\r\n    address public immutable WETH;\r\n    address private constant ETH_ADDRESS = address(0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE);\r\n\r\n    struct SwapStep {\r\n        address router;\r\n        address tokenIn;\r\n        address tokenOut;\r\n        uint8 dexType; \r\n        uint24 fee; // only for V3 \r\n    } // optimize struct storage slots\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner, \"Only owner\");\r\n        _;\r\n    }\r\n\r\n    constructor(address _factory) {\r\n        require(_factory != address(0), \"Invalid factory address\");\r\n        factory = IDexHandlerFactory(_factory);\r\n        owner = msg.sender;\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function getBalance(IERC20 token, address account) internal view returns(uint256) {\r\n        if (isETH(token)) {\r\n            return account.balance;\r\n        } else {\r\n            return token.balanceOf(account);\r\n        }\r\n    }\r\n\r\n    function isETH(IERC20 token) internal view returns (bool iseth) {\r\n        iseth = address(token) == ETH_ADDRESS ? true : false;\r\n    }\r\n\r\n\r\n\r\n    function swapMultiHop(\r\n        SwapMultiHop calldata params\r\n    ) public returns(uint256 amountOut) {\r\n        require(params.amountIn != 0, \"The amount for swap is zero\");\r\n        address dexHandler;\r\n        uint256 amountIn;\r\n\r\n        IERC20(params.tokenIn[0]).transferFrom(msg.sender, address(this), params.amountIn);\r\n\r\n        for (uint8 i = 0; i < params.routers.length; i++) {\r\n            address _tokenIn = params.tokenIn[i];\r\n            // address tokenOut = params[i].tokenOut; \r\n            dexHandler = factory.dexHandlers(params.dexHandlerIds[i]);\r\n            IERC20(_tokenIn).approve(params.routers[i], params.amountIn);\r\n            // bytes memory dataSend = abi.encode(address(params.routers[i]), bytes(params.data[i]));\r\n            bytes memory result = address(dexHandler).functionDelegateCall(abi.encodeWithSignature(\"executeSwap(address,bytes)\", params.routers[i], params.data[i]));\r\n            // (bool success, bytes memory result) = dexHandler.delegatecall(\r\n            //     abi.encodeWithSignature(\"executeSwap(address,bytes)\", params.routers[i], params.data[i])\r\n            // );\r\n            amountOut = abi.decode(result, (uint256));\r\n            amountIn = amountOut;\r\n        }\r\n    }\r\n\r\n    function swapMultiRoute(\r\n        SwapMultiHop[] calldata params\r\n    ) external returns(uint256 amountOut) {\r\n        for (uint256 i = 0; i < params.length; i++) {\r\n            amountOut += swapMultiHop(params[i]);\r\n        }\r\n    }\r\n    \r\n\r\n\r\n}"},"contracts/interfaces/IDexHandlerFactory.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\ninterface IDexHandlerFactory {\r\n    // Các hàm public/external cần expose ra ngoài\r\n    function dexHandlers(uint8) external view returns (address);  // Mapping tự động tạo getter public\r\n    function owner() external view returns (address);             // State variable public\r\n    function id() external view returns (uint8);                 // State variable public\r\n    \r\n    function setDexHandler(address dexHandler) external returns (uint8);\r\n}"},"contracts/libraries/Address.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}"},"contracts/libraries/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport {Address} from \"./Address.sol\";\r\nlibrary SafeERC20 {\r\n    using Address for address;\r\n\r\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(\r\n            token,\r\n            abi.encodeWithSelector(token.transfer.selector, to, value)\r\n        );\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        IERC20 token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(\r\n            token,\r\n            abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(\r\n            token,\r\n            abi.encodeWithSelector(token.approve.selector, spender, value)\r\n        );\r\n    }\r\n\r\n    function safeIncreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\r\n        _callOptionalReturn(\r\n            token,\r\n            abi.encodeWithSelector(\r\n                token.approve.selector,\r\n                spender,\r\n                newAllowance\r\n            )\r\n        );\r\n    }\r\n\r\n    function safeDecreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        unchecked {\r\n            uint256 oldAllowance = token.allowance(address(this), spender);\r\n            require(\r\n                oldAllowance >= value,\r\n                \"SafeERC20: decreased allowance below zero\"\r\n            );\r\n            uint256 newAllowance = oldAllowance - value;\r\n            _callOptionalReturn(\r\n                token,\r\n                abi.encodeWithSelector(\r\n                    token.approve.selector,\r\n                    spender,\r\n                    newAllowance\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(\r\n            data,\r\n            \"SafeERC20: low-level call failed\"\r\n        );\r\n        if (returndata.length > 0) {\r\n            // Return data is optional\r\n            require(\r\n                abi.decode(returndata, (bool)),\r\n                \"SafeERC20: ERC20 operation did not succeed\"\r\n            );\r\n        }\r\n    }\r\n}\r\n"},"contracts/libraries/UniERC20.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"./SafeERC20.sol\";\r\n\r\n\r\nlibrary UniERC20 {\r\n    using Math for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    IERC20 private constant _ETH_ADDRESS = IERC20(0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE);\r\n    IERC20 private constant _ZERO_ADDRESS = IERC20(address(0));\r\n\r\n    function isETH(IERC20 token) internal pure returns (bool) {\r\n        return (token == _ZERO_ADDRESS || token == _ETH_ADDRESS);\r\n    }\r\n\r\n    function uniBalanceOf(IERC20 token, address account) internal view returns (uint256) {\r\n        if (isETH(token)) {\r\n            return account.balance;\r\n        } else {\r\n            return token.balanceOf(account);\r\n        }\r\n    }\r\n\r\n    function uniTransfer(IERC20 token, address payable to, uint256 amount) internal {\r\n        if (amount > 0) {\r\n            if (isETH(token)) {\r\n                to.transfer(amount);\r\n            } else {\r\n                token.safeTransfer(to, amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    function uniApprove(IERC20 token, address to, uint256 amount) internal {\r\n        require(!isETH(token), \"Approve called on ETH\");\r\n\r\n        if (amount == 0) {\r\n            token.safeApprove(to, 0);\r\n        } else {\r\n            uint256 allowance = token.allowance(address(this), to);\r\n            if (allowance < amount) {\r\n                if (allowance > 0) {\r\n                    token.safeApprove(to, 0);\r\n                }\r\n                token.safeApprove(to, amount);\r\n            }\r\n        }\r\n    }\r\n}"},"contracts/structs/SAggregator.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nstruct UniswapV3SwapData{\r\n    address router;\r\n    uint256 tokenIn;\r\n    uint256 tokenOut;\r\n    uint24 fee;\r\n    uint256 dealine;\r\n    uint256 amountIn;\r\n    uint256 amountOutMin;\r\n    uint160 sqrtPriceLimitX96;\r\n}\r\n\r\nstruct SwapMultiHop {\r\n    address[] routers; \r\n    uint8[] dexHandlerIds;\r\n    address[] tokenIn;\r\n    uint256 amountIn;\r\n    bytes[] data;\r\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n  --> contracts/Aggregator.sol:51:5:\n   |\n51 |     function isETH(IERC20 token) internal view returns (bool iseth) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":1648,"file":"contracts/Aggregator.sol","start":1513},"type":"Warning"}],"sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[136],"IERC20Errors":[41],"IERC721Errors":[89]},"id":137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"138:141:0","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":41,"linearizedBaseContracts":[41],"name":"IERC20Errors","nameLocation":"290:12:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"309:309:0","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":11,"name":"ERC20InsufficientBalance","nameLocation":"629:24:0","nodeType":"ErrorDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"sender","nameLocation":"662:6:0","nodeType":"VariableDeclaration","scope":11,"src":"654:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"balance","nameLocation":"678:7:0","nodeType":"VariableDeclaration","scope":11,"src":"670:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9,"mutability":"mutable","name":"needed","nameLocation":"695:6:0","nodeType":"VariableDeclaration","scope":11,"src":"687:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:0"},"src":"623:80:0"},{"documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"709:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":16,"name":"ERC20InvalidSender","nameLocation":"872:18:0","nodeType":"ErrorDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"sender","nameLocation":"899:6:0","nodeType":"VariableDeclaration","scope":16,"src":"891:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:0"},"src":"866:41:0"},{"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"913:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":21,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:0","nodeType":"ErrorDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:0","nodeType":"VariableDeclaration","scope":21,"src":"1104:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:0"},"src":"1077:45:0"},{"documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"1128:345:0","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":30,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"spender","nameLocation":"1519:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1511:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":26,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:0","nodeType":"VariableDeclaration","scope":30,"src":"1528:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28,"mutability":"mutable","name":"needed","nameLocation":"1555:6:0","nodeType":"VariableDeclaration","scope":30,"src":"1547:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:0"},"src":"1478:85:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1569:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":35,"name":"ERC20InvalidApprover","nameLocation":"1754:20:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"approver","nameLocation":"1783:8:0","nodeType":"VariableDeclaration","scope":35,"src":"1775:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:0"},"src":"1748:45:0"},{"documentation":{"id":36,"nodeType":"StructuredDocumentation","src":"1799:195:0","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":40,"name":"ERC20InvalidSpender","nameLocation":"2005:19:0","nodeType":"ErrorDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"mutability":"mutable","name":"spender","nameLocation":"2033:7:0","nodeType":"VariableDeclaration","scope":40,"src":"2025:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:0"},"src":"1999:43:0"}],"scope":137,"src":"280:1764:0","usedErrors":[11,16,21,30,35,40],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"2046:143:0","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":89,"linearizedBaseContracts":[89],"name":"IERC721Errors","nameLocation":"2200:13:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":43,"nodeType":"StructuredDocumentation","src":"2220:219:0","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":47,"name":"ERC721InvalidOwner","nameLocation":"2450:18:0","nodeType":"ErrorDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"owner","nameLocation":"2477:5:0","nodeType":"VariableDeclaration","scope":47,"src":"2469:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":44,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:0"},"src":"2444:40:0"},{"documentation":{"id":48,"nodeType":"StructuredDocumentation","src":"2490:132:0","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":52,"name":"ERC721NonexistentToken","nameLocation":"2633:22:0","nodeType":"ErrorDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:0","nodeType":"VariableDeclaration","scope":52,"src":"2656:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:0"},"src":"2627:46:0"},{"documentation":{"id":53,"nodeType":"StructuredDocumentation","src":"2679:289:0","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":61,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:0","nodeType":"ErrorDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55,"mutability":"mutable","name":"sender","nameLocation":"3008:6:0","nodeType":"VariableDeclaration","scope":61,"src":"3000:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":54,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":57,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:0","nodeType":"VariableDeclaration","scope":61,"src":"3016:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":56,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":59,"mutability":"mutable","name":"owner","nameLocation":"3041:5:0","nodeType":"VariableDeclaration","scope":61,"src":"3033:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:0"},"src":"2973:75:0"},{"documentation":{"id":62,"nodeType":"StructuredDocumentation","src":"3054:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":66,"name":"ERC721InvalidSender","nameLocation":"3217:19:0","nodeType":"ErrorDefinition","parameters":{"id":65,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"mutability":"mutable","name":"sender","nameLocation":"3245:6:0","nodeType":"VariableDeclaration","scope":66,"src":"3237:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:0"},"src":"3211:42:0"},{"documentation":{"id":67,"nodeType":"StructuredDocumentation","src":"3259:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":71,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:0","nodeType":"ErrorDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:0","nodeType":"VariableDeclaration","scope":71,"src":"3451:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:0"},"src":"3423:46:0"},{"documentation":{"id":72,"nodeType":"StructuredDocumentation","src":"3475:247:0","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":78,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:0","nodeType":"ErrorDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"operator","nameLocation":"3768:8:0","nodeType":"VariableDeclaration","scope":78,"src":"3760:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":73,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":76,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:0","nodeType":"VariableDeclaration","scope":78,"src":"3778:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:0"},"src":"3727:68:0"},{"documentation":{"id":79,"nodeType":"StructuredDocumentation","src":"3801:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":83,"name":"ERC721InvalidApprover","nameLocation":"3986:21:0","nodeType":"ErrorDefinition","parameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"mutability":"mutable","name":"approver","nameLocation":"4016:8:0","nodeType":"VariableDeclaration","scope":83,"src":"4008:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":80,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:0"},"src":"3980:46:0"},{"documentation":{"id":84,"nodeType":"StructuredDocumentation","src":"4032:197:0","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":88,"name":"ERC721InvalidOperator","nameLocation":"4240:21:0","nodeType":"ErrorDefinition","parameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"operator","nameLocation":"4270:8:0","nodeType":"VariableDeclaration","scope":88,"src":"4262:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":85,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:0"},"src":"4234:46:0"}],"scope":137,"src":"2190:2092:0","usedErrors":[47,52,61,66,71,78,83,88],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"4284:145:0","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":136,"linearizedBaseContracts":[136],"name":"IERC1155Errors","nameLocation":"4440:14:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":91,"nodeType":"StructuredDocumentation","src":"4461:361:0","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":101,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:0","nodeType":"ErrorDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"sender","nameLocation":"4868:6:0","nodeType":"VariableDeclaration","scope":101,"src":"4860:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"balance","nameLocation":"4884:7:0","nodeType":"VariableDeclaration","scope":101,"src":"4876:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":94,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"needed","nameLocation":"4901:6:0","nodeType":"VariableDeclaration","scope":101,"src":"4893:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":96,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:0","nodeType":"VariableDeclaration","scope":101,"src":"4909:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":98,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:0"},"src":"4827:99:0"},{"documentation":{"id":102,"nodeType":"StructuredDocumentation","src":"4932:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":106,"name":"ERC1155InvalidSender","nameLocation":"5095:20:0","nodeType":"ErrorDefinition","parameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104,"mutability":"mutable","name":"sender","nameLocation":"5124:6:0","nodeType":"VariableDeclaration","scope":106,"src":"5116:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:0"},"src":"5089:43:0"},{"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"5138:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":111,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:0","nodeType":"ErrorDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:0","nodeType":"VariableDeclaration","scope":111,"src":"5331:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:0"},"src":"5302:47:0"},{"documentation":{"id":112,"nodeType":"StructuredDocumentation","src":"5355:256:0","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":118,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:0","nodeType":"ErrorDefinition","parameters":{"id":117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":114,"mutability":"mutable","name":"operator","nameLocation":"5659:8:0","nodeType":"VariableDeclaration","scope":118,"src":"5651:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":116,"mutability":"mutable","name":"owner","nameLocation":"5677:5:0","nodeType":"VariableDeclaration","scope":118,"src":"5669:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":115,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:0"},"src":"5616:68:0"},{"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"5690:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":123,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:0","nodeType":"ErrorDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"approver","nameLocation":"5906:8:0","nodeType":"VariableDeclaration","scope":123,"src":"5898:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:0"},"src":"5869:47:0"},{"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"5922:197:0","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":128,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:0","nodeType":"ErrorDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"mutability":"mutable","name":"operator","nameLocation":"6161:8:0","nodeType":"VariableDeclaration","scope":128,"src":"6153:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:0"},"src":"6124:47:0"},{"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"6177:280:0","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":135,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:0","nodeType":"ErrorDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:0","nodeType":"VariableDeclaration","scope":135,"src":"6494:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:0","nodeType":"VariableDeclaration","scope":135,"src":"6513:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":132,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:0"},"src":"6462:73:0"}],"scope":137,"src":"4430:2107:0","usedErrors":[101,106,111,118,123,128,135],"usedEvents":[]}],"src":"112:6426:0"},"id":0},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[785],"ERC20":[651],"IERC20":[729],"IERC20Errors":[41],"IERC20Metadata":[755]},"id":652,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":138,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":730,"src":"131:36:1","symbolAliases":[{"foreign":{"id":139,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"139:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":756,"src":"168:63:1","symbolAliases":[{"foreign":{"id":141,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"176:14:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":786,"src":"232:48:1","symbolAliases":[{"foreign":{"id":143,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"240:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":137,"src":"281:65:1","symbolAliases":[{"foreign":{"id":145,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"289:12:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":148,"name":"Context","nameLocations":["1133:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":785,"src":"1133:7:1"},"id":149,"nodeType":"InheritanceSpecifier","src":"1133:7:1"},{"baseName":{"id":150,"name":"IERC20","nameLocations":["1142:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"1142:6:1"},"id":151,"nodeType":"InheritanceSpecifier","src":"1142:6:1"},{"baseName":{"id":152,"name":"IERC20Metadata","nameLocations":["1150:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":755,"src":"1150:14:1"},"id":153,"nodeType":"InheritanceSpecifier","src":"1150:14:1"},{"baseName":{"id":154,"name":"IERC20Errors","nameLocations":["1166:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"1166:12:1"},"id":155,"nodeType":"InheritanceSpecifier","src":"1166:12:1"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"348:757:1","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":651,"linearizedBaseContracts":[651,41,755,729,785],"name":"ERC20","nameLocation":"1124:5:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":159,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:1","nodeType":"VariableDeclaration","scope":651,"src":"1185:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":158,"keyName":"account","keyNameLocation":"1201:7:1","keyType":{"id":156,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":157,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":165,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:1","nodeType":"VariableDeclaration","scope":651,"src":"1245:83:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":164,"keyName":"account","keyNameLocation":"1261:7:1","keyType":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":163,"keyName":"spender","keyNameLocation":"1288:7:1","keyType":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":167,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:1","nodeType":"VariableDeclaration","scope":651,"src":"1335:28:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":169,"mutability":"mutable","name":"_name","nameLocation":"1385:5:1","nodeType":"VariableDeclaration","scope":651,"src":"1370:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":168,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":171,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:1","nodeType":"VariableDeclaration","scope":651,"src":"1396:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":170,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":187,"nodeType":"Block","src":"1638:57:1","statements":[{"expression":{"id":181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":179,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"1648:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":180,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"1656:5:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1648:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":182,"nodeType":"ExpressionStatement","src":"1648:13:1"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":183,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"1671:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"1681:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1671:17:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":186,"nodeType":"ExpressionStatement","src":"1671:17:1"}]},"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"1425:152:1","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":188,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"name_","nameLocation":"1608:5:1","nodeType":"VariableDeclaration","scope":188,"src":"1594:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":173,"name":"string","nodeType":"ElementaryTypeName","src":"1594:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"symbol_","nameLocation":"1629:7:1","nodeType":"VariableDeclaration","scope":188,"src":"1615:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":175,"name":"string","nodeType":"ElementaryTypeName","src":"1615:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1593:44:1"},"returnParameters":{"id":178,"nodeType":"ParameterList","parameters":[],"src":"1638:0:1"},"scope":651,"src":"1582:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[742],"body":{"id":196,"nodeType":"Block","src":"1820:29:1","statements":[{"expression":{"id":194,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"1837:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":193,"id":195,"nodeType":"Return","src":"1830:12:1"}]},"documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"1701:54:1","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":197,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1769:4:1","nodeType":"FunctionDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[],"src":"1773:2:1"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":197,"src":"1805:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":191,"name":"string","nodeType":"ElementaryTypeName","src":"1805:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1804:15:1"},"scope":651,"src":"1760:89:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[748],"body":{"id":205,"nodeType":"Block","src":"2024:31:1","statements":[{"expression":{"id":203,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"2041:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":202,"id":204,"nodeType":"Return","src":"2034:14:1"}]},"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"1855:102:1","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":206,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1971:6:1","nodeType":"FunctionDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[],"src":"1977:2:1"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"2009:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":200,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2008:15:1"},"scope":651,"src":"1962:93:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[754],"body":{"id":214,"nodeType":"Block","src":"2744:26:1","statements":[{"expression":{"hexValue":"3138","id":212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2761:2:1","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":211,"id":213,"nodeType":"Return","src":"2754:9:1"}]},"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"2061:622:1","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":215,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2697:8:1","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[],"src":"2705:2:1"},"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":215,"src":"2737:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":209,"name":"uint8","nodeType":"ElementaryTypeName","src":"2737:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2736:7:1"},"scope":651,"src":"2688:82:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[678],"body":{"id":223,"nodeType":"Block","src":"2891:36:1","statements":[{"expression":{"id":221,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2908:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":220,"id":222,"nodeType":"Return","src":"2901:19:1"}]},"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"2776:49:1","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":224,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2839:11:1","nodeType":"FunctionDefinition","parameters":{"id":217,"nodeType":"ParameterList","parameters":[],"src":"2850:2:1"},"returnParameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":224,"src":"2882:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"2882:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2881:9:1"},"scope":651,"src":"2830:97:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[686],"body":{"id":236,"nodeType":"Block","src":"3059:42:1","statements":[{"expression":{"baseExpression":{"id":232,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"3076:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":234,"indexExpression":{"id":233,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3086:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3076:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":231,"id":235,"nodeType":"Return","src":"3069:25:1"}]},"documentation":{"id":225,"nodeType":"StructuredDocumentation","src":"2933:47:1","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":237,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2994:9:1","nodeType":"FunctionDefinition","parameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"account","nameLocation":"3012:7:1","nodeType":"VariableDeclaration","scope":237,"src":"3004:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":226,"name":"address","nodeType":"ElementaryTypeName","src":"3004:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3003:17:1"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":237,"src":"3050:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3050:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3049:9:1"},"scope":651,"src":"2985:116:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[696],"body":{"id":260,"nodeType":"Block","src":"3371:103:1","statements":[{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"owner","nameLocation":"3389:5:1","nodeType":"VariableDeclaration","scope":260,"src":"3381:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"3381:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":251,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":249,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"3397:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3397:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3381:28:1"},{"expression":{"arguments":[{"id":253,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"3429:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":254,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"3436:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"3440:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":252,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"3419:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3419:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":257,"nodeType":"ExpressionStatement","src":"3419:27:1"},{"expression":{"hexValue":"74727565","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3463:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":246,"id":259,"nodeType":"Return","src":"3456:11:1"}]},"documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"3107:184:1","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":261,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3305:8:1","nodeType":"FunctionDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"to","nameLocation":"3322:2:1","nodeType":"VariableDeclaration","scope":261,"src":"3314:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"3314:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":242,"mutability":"mutable","name":"value","nameLocation":"3334:5:1","nodeType":"VariableDeclaration","scope":261,"src":"3326:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":241,"name":"uint256","nodeType":"ElementaryTypeName","src":"3326:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3313:27:1"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":261,"src":"3365:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":244,"name":"bool","nodeType":"ElementaryTypeName","src":"3365:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3364:6:1"},"scope":651,"src":"3296:178:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[706],"body":{"id":277,"nodeType":"Block","src":"3621:51:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":271,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"3638:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":273,"indexExpression":{"id":272,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3650:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3638:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":275,"indexExpression":{"id":274,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"3657:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3638:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":270,"id":276,"nodeType":"Return","src":"3631:34:1"}]},"documentation":{"id":262,"nodeType":"StructuredDocumentation","src":"3480:47:1","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":278,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3541:9:1","nodeType":"FunctionDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"3559:5:1","nodeType":"VariableDeclaration","scope":278,"src":"3551:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"3551:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":266,"mutability":"mutable","name":"spender","nameLocation":"3574:7:1","nodeType":"VariableDeclaration","scope":278,"src":"3566:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"3566:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3550:32:1"},"returnParameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":278,"src":"3612:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":268,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:9:1"},"scope":651,"src":"3532:140:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[716],"body":{"id":301,"nodeType":"Block","src":"4058:107:1","statements":[{"assignments":[289],"declarations":[{"constant":false,"id":289,"mutability":"mutable","name":"owner","nameLocation":"4076:5:1","nodeType":"VariableDeclaration","scope":301,"src":"4068:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"4068:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":292,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":290,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"4084:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4084:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4068:28:1"},{"expression":{"arguments":[{"id":294,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"4115:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":295,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"4122:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"4131:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":293,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":542,"src":"4106:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4106:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"ExpressionStatement","src":"4106:31:1"},{"expression":{"hexValue":"74727565","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4154:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":287,"id":300,"nodeType":"Return","src":"4147:11:1"}]},"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"3678:296:1","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":302,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3988:7:1","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"mutability":"mutable","name":"spender","nameLocation":"4004:7:1","nodeType":"VariableDeclaration","scope":302,"src":"3996:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":280,"name":"address","nodeType":"ElementaryTypeName","src":"3996:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"value","nameLocation":"4021:5:1","nodeType":"VariableDeclaration","scope":302,"src":"4013:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":282,"name":"uint256","nodeType":"ElementaryTypeName","src":"4013:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3995:32:1"},"returnParameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":302,"src":"4052:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":285,"name":"bool","nodeType":"ElementaryTypeName","src":"4052:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4051:6:1"},"scope":651,"src":"3979:186:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[728],"body":{"id":333,"nodeType":"Block","src":"4850:151:1","statements":[{"assignments":[315],"declarations":[{"constant":false,"id":315,"mutability":"mutable","name":"spender","nameLocation":"4868:7:1","nodeType":"VariableDeclaration","scope":333,"src":"4860:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":318,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":316,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"4878:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4878:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4860:30:1"},{"expression":{"arguments":[{"id":320,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"4916:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":321,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"4922:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"4931:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":319,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"4900:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4900:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":324,"nodeType":"ExpressionStatement","src":"4900:37:1"},{"expression":{"arguments":[{"id":326,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"4957:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":327,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"4963:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"4967:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":325,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"4947:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4947:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":330,"nodeType":"ExpressionStatement","src":"4947:26:1"},{"expression":{"hexValue":"74727565","id":331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4990:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":313,"id":332,"nodeType":"Return","src":"4983:11:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"4171:581:1","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":334,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4766:12:1","nodeType":"FunctionDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"from","nameLocation":"4787:4:1","nodeType":"VariableDeclaration","scope":334,"src":"4779:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"4779:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":307,"mutability":"mutable","name":"to","nameLocation":"4801:2:1","nodeType":"VariableDeclaration","scope":334,"src":"4793:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"4793:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":309,"mutability":"mutable","name":"value","nameLocation":"4813:5:1","nodeType":"VariableDeclaration","scope":334,"src":"4805:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"4805:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4778:41:1"},"returnParameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":334,"src":"4844:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":311,"name":"bool","nodeType":"ElementaryTypeName","src":"4844:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4843:6:1"},"scope":651,"src":"4757:244:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":380,"nodeType":"Block","src":"5443:231:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":344,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5457:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5473:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5465:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"5465:7:1","typeDescriptions":{}}},"id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5465:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5457:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":358,"nodeType":"IfStatement","src":"5453:86:1","trueBody":{"id":357,"nodeType":"Block","src":"5477:62:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5525:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5517:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"5517:7:1","typeDescriptions":{}}},"id":354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":350,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"5498:18:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":356,"nodeType":"RevertStatement","src":"5491:37:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":359,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5552:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5566:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5558:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"5558:7:1","typeDescriptions":{}}},"id":363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5558:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5552:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":373,"nodeType":"IfStatement","src":"5548:86:1","trueBody":{"id":372,"nodeType":"Block","src":"5570:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5620:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"5612:7:1","typeDescriptions":{}}},"id":369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5612:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":365,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"5591:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5591:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":371,"nodeType":"RevertStatement","src":"5584:39:1"}]}},{"expression":{"arguments":[{"id":375,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5651:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":376,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5657:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5661:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":374,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"5643:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":379,"nodeType":"ExpressionStatement","src":"5643:24:1"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"5007:362:1","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":381,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5383:9:1","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"from","nameLocation":"5401:4:1","nodeType":"VariableDeclaration","scope":381,"src":"5393:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"5393:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"to","nameLocation":"5415:2:1","nodeType":"VariableDeclaration","scope":381,"src":"5407:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"5407:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"value","nameLocation":"5427:5:1","nodeType":"VariableDeclaration","scope":381,"src":"5419:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5419:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5392:41:1"},"returnParameters":{"id":343,"nodeType":"ParameterList","parameters":[],"src":"5443:0:1"},"scope":651,"src":"5374:300:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":457,"nodeType":"Block","src":"6064:1032:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":391,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6078:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6094:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6086:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"6086:7:1","typeDescriptions":{}}},"id":395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6086:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6078:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":428,"nodeType":"Block","src":"6252:362:1","statements":[{"assignments":[403],"declarations":[{"constant":false,"id":403,"mutability":"mutable","name":"fromBalance","nameLocation":"6274:11:1","nodeType":"VariableDeclaration","scope":428,"src":"6266:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"6266:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":407,"initialValue":{"baseExpression":{"id":404,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6288:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":406,"indexExpression":{"id":405,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6298:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6288:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6266:37:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":408,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6321:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6335:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6321:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":418,"nodeType":"IfStatement","src":"6317:115:1","trueBody":{"id":417,"nodeType":"Block","src":"6342:90:1","statements":[{"errorCall":{"arguments":[{"id":412,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6392:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":413,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6398:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6411:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":411,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"6367:24:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6367:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":416,"nodeType":"RevertStatement","src":"6360:57:1"}]}},{"id":427,"nodeType":"UncheckedBlock","src":"6445:159:1","statements":[{"expression":{"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":419,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6552:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":421,"indexExpression":{"id":420,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6562:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6552:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":422,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6570:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6584:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6570:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6552:37:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":426,"nodeType":"ExpressionStatement","src":"6552:37:1"}]}]},"id":429,"nodeType":"IfStatement","src":"6074:540:1","trueBody":{"id":401,"nodeType":"Block","src":"6098:148:1","statements":[{"expression":{"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":397,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"6214:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6230:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6214:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":400,"nodeType":"ExpressionStatement","src":"6214:21:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":430,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"6628:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6642:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6634:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":431,"name":"address","nodeType":"ElementaryTypeName","src":"6634:7:1","typeDescriptions":{}}},"id":434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6634:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6628:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":449,"nodeType":"Block","src":"6843:206:1","statements":[{"id":448,"nodeType":"UncheckedBlock","src":"6857:182:1","statements":[{"expression":{"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":442,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"7002:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":444,"indexExpression":{"id":443,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7012:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7002:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7019:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7002:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":447,"nodeType":"ExpressionStatement","src":"7002:22:1"}]}]},"id":450,"nodeType":"IfStatement","src":"6624:425:1","trueBody":{"id":441,"nodeType":"Block","src":"6646:191:1","statements":[{"id":440,"nodeType":"UncheckedBlock","src":"6660:167:1","statements":[{"expression":{"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":436,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"6791:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6807:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6791:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":439,"nodeType":"ExpressionStatement","src":"6791:21:1"}]}]}},{"eventCall":{"arguments":[{"id":452,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"7073:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":453,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7079:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7083:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":451,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"7064:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7064:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":456,"nodeType":"EmitStatement","src":"7059:30:1"}]},"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"5680:304:1","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":458,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5998:7:1","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"from","nameLocation":"6014:4:1","nodeType":"VariableDeclaration","scope":458,"src":"6006:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"6006:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"to","nameLocation":"6028:2:1","nodeType":"VariableDeclaration","scope":458,"src":"6020:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"6020:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"value","nameLocation":"6040:5:1","nodeType":"VariableDeclaration","scope":458,"src":"6032:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"6032:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6005:41:1"},"returnParameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"6064:0:1"},"scope":651,"src":"5989:1107:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":490,"nodeType":"Block","src":"7495:152:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7509:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7528:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7520:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"7520:7:1","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7520:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7509:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":480,"nodeType":"IfStatement","src":"7505:91:1","trueBody":{"id":479,"nodeType":"Block","src":"7532:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7582:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7574:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":473,"name":"address","nodeType":"ElementaryTypeName","src":"7574:7:1","typeDescriptions":{}}},"id":476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7574:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":472,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"7553:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7553:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"RevertStatement","src":"7546:39:1"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7621:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7613:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"7613:7:1","typeDescriptions":{}}},"id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7613:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":486,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7625:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"7634:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":481,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"7605:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7605:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":489,"nodeType":"ExpressionStatement","src":"7605:35:1"}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"7102:332:1","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":491,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7448:5:1","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"account","nameLocation":"7462:7:1","nodeType":"VariableDeclaration","scope":491,"src":"7454:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"7454:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"value","nameLocation":"7479:5:1","nodeType":"VariableDeclaration","scope":491,"src":"7471:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":462,"name":"uint256","nodeType":"ElementaryTypeName","src":"7471:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7453:32:1"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"7495:0:1"},"scope":651,"src":"7439:208:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":523,"nodeType":"Block","src":"8021:150:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":499,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"8035:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8054:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8046:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"8046:7:1","typeDescriptions":{}}},"id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8046:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8035:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":513,"nodeType":"IfStatement","src":"8031:89:1","trueBody":{"id":512,"nodeType":"Block","src":"8058:62:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8106:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8098:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":506,"name":"address","nodeType":"ElementaryTypeName","src":"8098:7:1","typeDescriptions":{}}},"id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":505,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"8079:18:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8079:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":511,"nodeType":"RevertStatement","src":"8072:37:1"}]}},{"expression":{"arguments":[{"id":515,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"8137:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8146:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"8146:7:1","typeDescriptions":{}}},"id":519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8146:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"8158:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":514,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"8129:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8129:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":522,"nodeType":"ExpressionStatement","src":"8129:35:1"}]},"documentation":{"id":492,"nodeType":"StructuredDocumentation","src":"7653:307:1","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":524,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7974:5:1","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":494,"mutability":"mutable","name":"account","nameLocation":"7988:7:1","nodeType":"VariableDeclaration","scope":524,"src":"7980:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"7980:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":496,"mutability":"mutable","name":"value","nameLocation":"8005:5:1","nodeType":"VariableDeclaration","scope":524,"src":"7997:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":495,"name":"uint256","nodeType":"ElementaryTypeName","src":"7997:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7979:32:1"},"returnParameters":{"id":498,"nodeType":"ParameterList","parameters":[],"src":"8021:0:1"},"scope":651,"src":"7965:206:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":541,"nodeType":"Block","src":"8781:54:1","statements":[{"expression":{"arguments":[{"id":535,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"8800:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"8807:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"8816:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8823:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":534,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":602,"src":"8791:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8791:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":540,"nodeType":"ExpressionStatement","src":"8791:37:1"}]},"documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"8177:525:1","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":542,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8716:8:1","nodeType":"FunctionDefinition","parameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"owner","nameLocation":"8733:5:1","nodeType":"VariableDeclaration","scope":542,"src":"8725:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"8725:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":529,"mutability":"mutable","name":"spender","nameLocation":"8748:7:1","nodeType":"VariableDeclaration","scope":542,"src":"8740:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"8740:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":531,"mutability":"mutable","name":"value","nameLocation":"8765:5:1","nodeType":"VariableDeclaration","scope":542,"src":"8757:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"8757:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8724:47:1"},"returnParameters":{"id":533,"nodeType":"ParameterList","parameters":[],"src":"8781:0:1"},"scope":651,"src":"8707:128:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":601,"nodeType":"Block","src":"9780:334:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":554,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"9794:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9811:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"9803:7:1","typeDescriptions":{}}},"id":558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9794:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":568,"nodeType":"IfStatement","src":"9790:89:1","trueBody":{"id":567,"nodeType":"Block","src":"9815:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9865:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9857:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"9857:7:1","typeDescriptions":{}}},"id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9857:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":560,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"9836:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9836:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":566,"nodeType":"RevertStatement","src":"9829:39:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":569,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"9892:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9911:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9903:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":570,"name":"address","nodeType":"ElementaryTypeName","src":"9903:7:1","typeDescriptions":{}}},"id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9892:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":583,"nodeType":"IfStatement","src":"9888:90:1","trueBody":{"id":582,"nodeType":"Block","src":"9915:63:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9964:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9956:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"9956:7:1","typeDescriptions":{}}},"id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9956:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":575,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"9936:19:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9936:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":581,"nodeType":"RevertStatement","src":"9929:38:1"}]}},{"expression":{"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":584,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"9987:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":587,"indexExpression":{"id":585,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"9999:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9987:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":588,"indexExpression":{"id":586,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10006:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9987:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"10017:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9987:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":591,"nodeType":"ExpressionStatement","src":"9987:35:1"},{"condition":{"id":592,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"10036:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":600,"nodeType":"IfStatement","src":"10032:76:1","trueBody":{"id":599,"nodeType":"Block","src":"10047:61:1","statements":[{"eventCall":{"arguments":[{"id":594,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10075:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":595,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10082:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"10091:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":593,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"10066:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10066:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":598,"nodeType":"EmitStatement","src":"10061:36:1"}]}}]},"documentation":{"id":543,"nodeType":"StructuredDocumentation","src":"8841:836:1","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":602,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9691:8:1","nodeType":"FunctionDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"owner","nameLocation":"9708:5:1","nodeType":"VariableDeclaration","scope":602,"src":"9700:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"9700:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"spender","nameLocation":"9723:7:1","nodeType":"VariableDeclaration","scope":602,"src":"9715:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"9715:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":549,"mutability":"mutable","name":"value","nameLocation":"9740:5:1","nodeType":"VariableDeclaration","scope":602,"src":"9732:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":548,"name":"uint256","nodeType":"ElementaryTypeName","src":"9732:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":551,"mutability":"mutable","name":"emitEvent","nameLocation":"9752:9:1","nodeType":"VariableDeclaration","scope":602,"src":"9747:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":550,"name":"bool","nodeType":"ElementaryTypeName","src":"9747:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9699:63:1"},"returnParameters":{"id":553,"nodeType":"ParameterList","parameters":[],"src":"9780:0:1"},"scope":651,"src":"9682:432:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":649,"nodeType":"Block","src":"10485:387:1","statements":[{"assignments":[613],"declarations":[{"constant":false,"id":613,"mutability":"mutable","name":"currentAllowance","nameLocation":"10503:16:1","nodeType":"VariableDeclaration","scope":649,"src":"10495:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":612,"name":"uint256","nodeType":"ElementaryTypeName","src":"10495:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":618,"initialValue":{"arguments":[{"id":615,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"10532:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":616,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10539:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":614,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"10522:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10522:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10495:52:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":619,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10561:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10585:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":621,"name":"uint256","nodeType":"ElementaryTypeName","src":"10585:7:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":620,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10580:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10580:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10594:3:1","memberName":"max","nodeType":"MemberAccess","src":"10580:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10561:36:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":648,"nodeType":"IfStatement","src":"10557:309:1","trueBody":{"id":647,"nodeType":"Block","src":"10599:267:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":626,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10617:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"10636:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10617:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":636,"nodeType":"IfStatement","src":"10613:130:1","trueBody":{"id":635,"nodeType":"Block","src":"10643:100:1","statements":[{"errorCall":{"arguments":[{"id":630,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10695:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":631,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10704:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"10722:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":629,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"10668:26:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10668:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":634,"nodeType":"RevertStatement","src":"10661:67:1"}]}},{"id":646,"nodeType":"UncheckedBlock","src":"10756:100:1","statements":[{"expression":{"arguments":[{"id":638,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"10793:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10800:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":640,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10809:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"10828:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10809:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10835:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":637,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":602,"src":"10784:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10784:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":645,"nodeType":"ExpressionStatement","src":"10784:57:1"}]}]}}]},"documentation":{"id":603,"nodeType":"StructuredDocumentation","src":"10120:271:1","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":650,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10405:15:1","nodeType":"FunctionDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"owner","nameLocation":"10429:5:1","nodeType":"VariableDeclaration","scope":650,"src":"10421:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"10421:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":607,"mutability":"mutable","name":"spender","nameLocation":"10444:7:1","nodeType":"VariableDeclaration","scope":650,"src":"10436:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"10436:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"value","nameLocation":"10461:5:1","nodeType":"VariableDeclaration","scope":650,"src":"10453:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"10453:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10420:47:1"},"returnParameters":{"id":611,"nodeType":"ParameterList","parameters":[],"src":"10485:0:1"},"scope":651,"src":"10396:476:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":652,"src":"1106:9768:1","usedErrors":[11,16,21,30,35,40],"usedEvents":[663,672]}],"src":"105:10770:1"},"id":1},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[729]},"id":730,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":653,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"132:71:2","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":729,"linearizedBaseContracts":[729],"name":"IERC20","nameLocation":"214:6:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"227:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":663,"name":"Transfer","nameLocation":"396:8:2","nodeType":"EventDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:2","nodeType":"VariableDeclaration","scope":663,"src":"405:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":659,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:2","nodeType":"VariableDeclaration","scope":663,"src":"427:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":661,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:2","nodeType":"VariableDeclaration","scope":663,"src":"447:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:2"},"src":"390:72:2"},{"anonymous":false,"documentation":{"id":664,"nodeType":"StructuredDocumentation","src":"468:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":672,"name":"Approval","nameLocation":"627:8:2","nodeType":"EventDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:2","nodeType":"VariableDeclaration","scope":672,"src":"636:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":665,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":668,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:2","nodeType":"VariableDeclaration","scope":672,"src":"659:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":670,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:2","nodeType":"VariableDeclaration","scope":672,"src":"684:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:2"},"src":"621:78:2"},{"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"705:65:2","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":678,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:2","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[],"src":"795:2:2"},"returnParameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":678,"src":"821:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":675,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:2"},"scope":729,"src":"775:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"836:71:2","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":686,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:2","nodeType":"FunctionDefinition","parameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"account","nameLocation":"939:7:2","nodeType":"VariableDeclaration","scope":686,"src":"931:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:2"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":686,"src":"971:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":683,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:2"},"scope":729,"src":"912:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":687,"nodeType":"StructuredDocumentation","src":"986:213:2","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":696,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:2","nodeType":"FunctionDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"to","nameLocation":"1230:2:2","nodeType":"VariableDeclaration","scope":696,"src":"1222:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":691,"mutability":"mutable","name":"value","nameLocation":"1242:5:2","nodeType":"VariableDeclaration","scope":696,"src":"1234:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:2"},"returnParameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":696,"src":"1267:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":693,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:2"},"scope":729,"src":"1204:69:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"1279:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":706,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:2","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"owner","nameLocation":"1575:5:2","nodeType":"VariableDeclaration","scope":706,"src":"1567:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"spender","nameLocation":"1590:7:2","nodeType":"VariableDeclaration","scope":706,"src":"1582:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:2"},"returnParameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":706,"src":"1622:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:2"},"scope":729,"src":"1548:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":707,"nodeType":"StructuredDocumentation","src":"1637:667:2","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":716,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:2","nodeType":"FunctionDefinition","parameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"spender","nameLocation":"2334:7:2","nodeType":"VariableDeclaration","scope":716,"src":"2326:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":711,"mutability":"mutable","name":"value","nameLocation":"2351:5:2","nodeType":"VariableDeclaration","scope":716,"src":"2343:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":710,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:2"},"returnParameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":716,"src":"2376:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":713,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:2"},"scope":729,"src":"2309:73:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"2388:297:2","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":728,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:2","nodeType":"FunctionDefinition","parameters":{"id":724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"from","nameLocation":"2720:4:2","nodeType":"VariableDeclaration","scope":728,"src":"2712:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":721,"mutability":"mutable","name":"to","nameLocation":"2734:2:2","nodeType":"VariableDeclaration","scope":728,"src":"2726:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":723,"mutability":"mutable","name":"value","nameLocation":"2746:5:2","nodeType":"VariableDeclaration","scope":728,"src":"2738:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":722,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:2"},"returnParameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":728,"src":"2771:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":725,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:2"},"scope":729,"src":"2690:87:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":730,"src":"204:2575:2","usedErrors":[],"usedEvents":[663,672]}],"src":"106:2674:2"},"id":2},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[729],"IERC20Metadata":[755]},"id":756,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":731,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":733,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":756,"sourceUnit":730,"src":"151:37:3","symbolAliases":[{"foreign":{"id":732,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"159:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":735,"name":"IERC20","nameLocations":["306:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"306:6:3"},"id":736,"nodeType":"InheritanceSpecifier","src":"306:6:3"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":734,"nodeType":"StructuredDocumentation","src":"190:87:3","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":755,"linearizedBaseContracts":[755,729],"name":"IERC20Metadata","nameLocation":"288:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":737,"nodeType":"StructuredDocumentation","src":"319:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":742,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:3","nodeType":"FunctionDefinition","parameters":{"id":738,"nodeType":"ParameterList","parameters":[],"src":"391:2:3"},"returnParameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":742,"src":"417:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":739,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:3"},"scope":755,"src":"378:54:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":743,"nodeType":"StructuredDocumentation","src":"438:56:3","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":748,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:3","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[],"src":"514:2:3"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":748,"src":"540:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":745,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:3"},"scope":755,"src":"499:56:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"561:65:3","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":754,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:3","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[],"src":"648:2:3"},"returnParameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":754,"src":"674:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":751,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:3"},"scope":755,"src":"631:50:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":756,"src":"278:405:3","usedErrors":[],"usedEvents":[663,672]}],"src":"125:559:3"},"id":3},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[785]},"id":786,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":757,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:4"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":758,"nodeType":"StructuredDocumentation","src":"127:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":785,"linearizedBaseContracts":[785],"name":"Context","nameLocation":"642:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":766,"nodeType":"Block","src":"718:34:4","statements":[{"expression":{"expression":{"id":763,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:4","memberName":"sender","nodeType":"MemberAccess","src":"735:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":762,"id":765,"nodeType":"Return","src":"728:17:4"}]},"id":767,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:4","nodeType":"FunctionDefinition","parameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"675:2:4"},"returnParameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":767,"src":"709:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:4"},"scope":785,"src":"656:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":775,"nodeType":"Block","src":"825:32:4","statements":[{"expression":{"expression":{"id":772,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:4","memberName":"data","nodeType":"MemberAccess","src":"842:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":771,"id":774,"nodeType":"Return","src":"835:15:4"}]},"id":776,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:4","nodeType":"FunctionDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[],"src":"775:2:4"},"returnParameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":776,"src":"809:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":769,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:4"},"scope":785,"src":"758:99:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":783,"nodeType":"Block","src":"935:25:4","statements":[{"expression":{"hexValue":"30","id":781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":780,"id":782,"nodeType":"Return","src":"945:8:4"}]},"id":784,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:4","nodeType":"FunctionDefinition","parameters":{"id":777,"nodeType":"ParameterList","parameters":[],"src":"892:2:4"},"returnParameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":784,"src":"926:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":778,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:4"},"scope":785,"src":"863:97:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":786,"src":"624:338:4","usedErrors":[],"usedEvents":[]}],"src":"101:862:4"},"id":4},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[837]},"id":838,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":787,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":788,"nodeType":"StructuredDocumentation","src":"125:489:5","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":837,"linearizedBaseContracts":[837],"name":"Panic","nameLocation":"665:5:5","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"677:36:5","text":"@dev generic / unspecified error"},"id":792,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:5","nodeType":"VariableDeclaration","scope":837,"src":"718:40:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":790,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":793,"nodeType":"StructuredDocumentation","src":"764:37:5","text":"@dev used by the assert() builtin"},"id":796,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:5","nodeType":"VariableDeclaration","scope":837,"src":"806:39:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":794,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":797,"nodeType":"StructuredDocumentation","src":"851:41:5","text":"@dev arithmetic underflow or overflow"},"id":800,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:5","nodeType":"VariableDeclaration","scope":837,"src":"897:47:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":798,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:5","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":801,"nodeType":"StructuredDocumentation","src":"950:35:5","text":"@dev division or modulo by zero"},"id":804,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:5","nodeType":"VariableDeclaration","scope":837,"src":"990:49:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":802,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:5","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":805,"nodeType":"StructuredDocumentation","src":"1045:30:5","text":"@dev enum conversion error"},"id":808,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:5","nodeType":"VariableDeclaration","scope":837,"src":"1080:54:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":806,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:5","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":809,"nodeType":"StructuredDocumentation","src":"1140:36:5","text":"@dev invalid encoding in storage"},"id":812,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:5","nodeType":"VariableDeclaration","scope":837,"src":"1181:55:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":810,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:5","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":813,"nodeType":"StructuredDocumentation","src":"1242:24:5","text":"@dev empty array pop"},"id":816,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:5","nodeType":"VariableDeclaration","scope":837,"src":"1271:48:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":814,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:5","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":817,"nodeType":"StructuredDocumentation","src":"1325:35:5","text":"@dev array out of bounds access"},"id":820,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:5","nodeType":"VariableDeclaration","scope":837,"src":"1365:52:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":818,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:5","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"1423:65:5","text":"@dev resource error (too large allocation or too large array)"},"id":824,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:5","nodeType":"VariableDeclaration","scope":837,"src":"1493:47:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":822,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:5","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":825,"nodeType":"StructuredDocumentation","src":"1546:42:5","text":"@dev calling invalid internal function"},"id":828,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:5","nodeType":"VariableDeclaration","scope":837,"src":"1593:58:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":826,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:5","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":835,"nodeType":"Block","src":"1819:151:5","statements":[{"AST":{"nativeSrc":"1854:110:5","nodeType":"YulBlock","src":"1854:110:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:5","nodeType":"YulLiteral","src":"1875:4:5","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:5","nodeType":"YulLiteral","src":"1881:10:5","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:5","nodeType":"YulIdentifier","src":"1868:6:5"},"nativeSrc":"1868:24:5","nodeType":"YulFunctionCall","src":"1868:24:5"},"nativeSrc":"1868:24:5","nodeType":"YulExpressionStatement","src":"1868:24:5"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:5","nodeType":"YulLiteral","src":"1912:4:5","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:5","nodeType":"YulIdentifier","src":"1918:4:5"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:5","nodeType":"YulIdentifier","src":"1905:6:5"},"nativeSrc":"1905:18:5","nodeType":"YulFunctionCall","src":"1905:18:5"},"nativeSrc":"1905:18:5","nodeType":"YulExpressionStatement","src":"1905:18:5"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:5","nodeType":"YulLiteral","src":"1943:4:5","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:5","nodeType":"YulLiteral","src":"1949:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:5","nodeType":"YulIdentifier","src":"1936:6:5"},"nativeSrc":"1936:18:5","nodeType":"YulFunctionCall","src":"1936:18:5"},"nativeSrc":"1936:18:5","nodeType":"YulExpressionStatement","src":"1936:18:5"}]},"evmVersion":"paris","externalReferences":[{"declaration":831,"isOffset":false,"isSlot":false,"src":"1918:4:5","valueSize":1}],"flags":["memory-safe"],"id":834,"nodeType":"InlineAssembly","src":"1829:135:5"}]},"documentation":{"id":829,"nodeType":"StructuredDocumentation","src":"1658:113:5","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":836,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:5","nodeType":"FunctionDefinition","parameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"code","nameLocation":"1799:4:5","nodeType":"VariableDeclaration","scope":836,"src":"1791:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":830,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:5"},"returnParameters":{"id":833,"nodeType":"ParameterList","parameters":[],"src":"1819:0:5"},"scope":837,"src":"1776:194:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":838,"src":"657:1315:5","usedErrors":[],"usedEvents":[]}],"src":"99:1874:5"},"id":5},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2458],"Panic":[837],"SafeCast":[4223]},"id":2459,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":839,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":841,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2459,"sourceUnit":838,"src":"129:35:6","symbolAliases":[{"foreign":{"id":840,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"137:5:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":843,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2459,"sourceUnit":4224,"src":"165:40:6","symbolAliases":[{"foreign":{"id":842,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"173:8:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":844,"nodeType":"StructuredDocumentation","src":"207:73:6","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2458,"linearizedBaseContracts":[2458],"name":"Math","nameLocation":"289:4:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":849,"members":[{"id":845,"name":"Floor","nameLocation":"324:5:6","nodeType":"EnumValue","src":"324:5:6"},{"id":846,"name":"Ceil","nameLocation":"367:4:6","nodeType":"EnumValue","src":"367:4:6"},{"id":847,"name":"Trunc","nameLocation":"409:5:6","nodeType":"EnumValue","src":"409:5:6"},{"id":848,"name":"Expand","nameLocation":"439:6:6","nodeType":"EnumValue","src":"439:6:6"}],"name":"Rounding","nameLocation":"305:8:6","nodeType":"EnumDefinition","src":"300:169:6"},{"body":{"id":862,"nodeType":"Block","src":"731:112:6","statements":[{"AST":{"nativeSrc":"766:71:6","nodeType":"YulBlock","src":"766:71:6","statements":[{"nativeSrc":"780:16:6","nodeType":"YulAssignment","src":"780:16:6","value":{"arguments":[{"name":"a","nativeSrc":"791:1:6","nodeType":"YulIdentifier","src":"791:1:6"},{"name":"b","nativeSrc":"794:1:6","nodeType":"YulIdentifier","src":"794:1:6"}],"functionName":{"name":"add","nativeSrc":"787:3:6","nodeType":"YulIdentifier","src":"787:3:6"},"nativeSrc":"787:9:6","nodeType":"YulFunctionCall","src":"787:9:6"},"variableNames":[{"name":"low","nativeSrc":"780:3:6","nodeType":"YulIdentifier","src":"780:3:6"}]},{"nativeSrc":"809:18:6","nodeType":"YulAssignment","src":"809:18:6","value":{"arguments":[{"name":"low","nativeSrc":"820:3:6","nodeType":"YulIdentifier","src":"820:3:6"},{"name":"a","nativeSrc":"825:1:6","nodeType":"YulIdentifier","src":"825:1:6"}],"functionName":{"name":"lt","nativeSrc":"817:2:6","nodeType":"YulIdentifier","src":"817:2:6"},"nativeSrc":"817:10:6","nodeType":"YulFunctionCall","src":"817:10:6"},"variableNames":[{"name":"high","nativeSrc":"809:4:6","nodeType":"YulIdentifier","src":"809:4:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":852,"isOffset":false,"isSlot":false,"src":"791:1:6","valueSize":1},{"declaration":852,"isOffset":false,"isSlot":false,"src":"825:1:6","valueSize":1},{"declaration":854,"isOffset":false,"isSlot":false,"src":"794:1:6","valueSize":1},{"declaration":857,"isOffset":false,"isSlot":false,"src":"809:4:6","valueSize":1},{"declaration":859,"isOffset":false,"isSlot":false,"src":"780:3:6","valueSize":1},{"declaration":859,"isOffset":false,"isSlot":false,"src":"820:3:6","valueSize":1}],"flags":["memory-safe"],"id":861,"nodeType":"InlineAssembly","src":"741:96:6"}]},"documentation":{"id":850,"nodeType":"StructuredDocumentation","src":"475:163:6","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":863,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:6","nodeType":"FunctionDefinition","parameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"a","nameLocation":"667:1:6","nodeType":"VariableDeclaration","scope":863,"src":"659:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":854,"mutability":"mutable","name":"b","nameLocation":"678:1:6","nodeType":"VariableDeclaration","scope":863,"src":"670:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":853,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:6"},"returnParameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"high","nameLocation":"712:4:6","nodeType":"VariableDeclaration","scope":863,"src":"704:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":856,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"low","nameLocation":"726:3:6","nodeType":"VariableDeclaration","scope":863,"src":"718:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:6"},"scope":2458,"src":"643:200:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":876,"nodeType":"Block","src":"1115:462:6","statements":[{"AST":{"nativeSrc":"1437:134:6","nodeType":"YulBlock","src":"1437:134:6","statements":[{"nativeSrc":"1451:30:6","nodeType":"YulVariableDeclaration","src":"1451:30:6","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:6","nodeType":"YulIdentifier","src":"1468:1:6"},{"name":"b","nativeSrc":"1471:1:6","nodeType":"YulIdentifier","src":"1471:1:6"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:6","nodeType":"YulLiteral","src":"1478:1:6","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:6","nodeType":"YulIdentifier","src":"1474:3:6"},"nativeSrc":"1474:6:6","nodeType":"YulFunctionCall","src":"1474:6:6"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:6","nodeType":"YulIdentifier","src":"1461:6:6"},"nativeSrc":"1461:20:6","nodeType":"YulFunctionCall","src":"1461:20:6"},"variables":[{"name":"mm","nativeSrc":"1455:2:6","nodeType":"YulTypedName","src":"1455:2:6","type":""}]},{"nativeSrc":"1494:16:6","nodeType":"YulAssignment","src":"1494:16:6","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:6","nodeType":"YulIdentifier","src":"1505:1:6"},{"name":"b","nativeSrc":"1508:1:6","nodeType":"YulIdentifier","src":"1508:1:6"}],"functionName":{"name":"mul","nativeSrc":"1501:3:6","nodeType":"YulIdentifier","src":"1501:3:6"},"nativeSrc":"1501:9:6","nodeType":"YulFunctionCall","src":"1501:9:6"},"variableNames":[{"name":"low","nativeSrc":"1494:3:6","nodeType":"YulIdentifier","src":"1494:3:6"}]},{"nativeSrc":"1523:38:6","nodeType":"YulAssignment","src":"1523:38:6","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:6","nodeType":"YulIdentifier","src":"1539:2:6"},{"name":"low","nativeSrc":"1543:3:6","nodeType":"YulIdentifier","src":"1543:3:6"}],"functionName":{"name":"sub","nativeSrc":"1535:3:6","nodeType":"YulIdentifier","src":"1535:3:6"},"nativeSrc":"1535:12:6","nodeType":"YulFunctionCall","src":"1535:12:6"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:6","nodeType":"YulIdentifier","src":"1552:2:6"},{"name":"low","nativeSrc":"1556:3:6","nodeType":"YulIdentifier","src":"1556:3:6"}],"functionName":{"name":"lt","nativeSrc":"1549:2:6","nodeType":"YulIdentifier","src":"1549:2:6"},"nativeSrc":"1549:11:6","nodeType":"YulFunctionCall","src":"1549:11:6"}],"functionName":{"name":"sub","nativeSrc":"1531:3:6","nodeType":"YulIdentifier","src":"1531:3:6"},"nativeSrc":"1531:30:6","nodeType":"YulFunctionCall","src":"1531:30:6"},"variableNames":[{"name":"high","nativeSrc":"1523:4:6","nodeType":"YulIdentifier","src":"1523:4:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":866,"isOffset":false,"isSlot":false,"src":"1468:1:6","valueSize":1},{"declaration":866,"isOffset":false,"isSlot":false,"src":"1505:1:6","valueSize":1},{"declaration":868,"isOffset":false,"isSlot":false,"src":"1471:1:6","valueSize":1},{"declaration":868,"isOffset":false,"isSlot":false,"src":"1508:1:6","valueSize":1},{"declaration":871,"isOffset":false,"isSlot":false,"src":"1523:4:6","valueSize":1},{"declaration":873,"isOffset":false,"isSlot":false,"src":"1494:3:6","valueSize":1},{"declaration":873,"isOffset":false,"isSlot":false,"src":"1543:3:6","valueSize":1},{"declaration":873,"isOffset":false,"isSlot":false,"src":"1556:3:6","valueSize":1}],"flags":["memory-safe"],"id":875,"nodeType":"InlineAssembly","src":"1412:159:6"}]},"documentation":{"id":864,"nodeType":"StructuredDocumentation","src":"849:173:6","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":877,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:6","nodeType":"FunctionDefinition","parameters":{"id":869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"a","nameLocation":"1051:1:6","nodeType":"VariableDeclaration","scope":877,"src":"1043:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":865,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":868,"mutability":"mutable","name":"b","nameLocation":"1062:1:6","nodeType":"VariableDeclaration","scope":877,"src":"1054:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":867,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:6"},"returnParameters":{"id":874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":871,"mutability":"mutable","name":"high","nameLocation":"1096:4:6","nodeType":"VariableDeclaration","scope":877,"src":"1088:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":870,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":873,"mutability":"mutable","name":"low","nameLocation":"1110:3:6","nodeType":"VariableDeclaration","scope":877,"src":"1102:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":872,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:6"},"scope":2458,"src":"1027:550:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":911,"nodeType":"Block","src":"1784:149:6","statements":[{"id":910,"nodeType":"UncheckedBlock","src":"1794:133:6","statements":[{"assignments":[890],"declarations":[{"constant":false,"id":890,"mutability":"mutable","name":"c","nameLocation":"1826:1:6","nodeType":"VariableDeclaration","scope":910,"src":"1818:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":889,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":894,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":891,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"1830:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":892,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"1834:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:6"},{"expression":{"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":895,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"1849:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":896,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"1859:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":897,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"1864:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":900,"nodeType":"ExpressionStatement","src":"1849:16:6"},{"expression":{"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":901,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"1879:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":902,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"1888:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":905,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"1908:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":903,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"1892:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4223_$","typeString":"type(library SafeCast)"}},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4222,"src":"1892:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":909,"nodeType":"ExpressionStatement","src":"1879:37:6"}]}]},"documentation":{"id":878,"nodeType":"StructuredDocumentation","src":"1583:105:6","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":912,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:6","nodeType":"FunctionDefinition","parameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":880,"mutability":"mutable","name":"a","nameLocation":"1717:1:6","nodeType":"VariableDeclaration","scope":912,"src":"1709:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":879,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":882,"mutability":"mutable","name":"b","nameLocation":"1728:1:6","nodeType":"VariableDeclaration","scope":912,"src":"1720:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":881,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:6"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"success","nameLocation":"1759:7:6","nodeType":"VariableDeclaration","scope":912,"src":"1754:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":884,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":887,"mutability":"mutable","name":"result","nameLocation":"1776:6:6","nodeType":"VariableDeclaration","scope":912,"src":"1768:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":886,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:6"},"scope":2458,"src":"1693:240:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":946,"nodeType":"Block","src":"2143:149:6","statements":[{"id":945,"nodeType":"UncheckedBlock","src":"2153:133:6","statements":[{"assignments":[925],"declarations":[{"constant":false,"id":925,"mutability":"mutable","name":"c","nameLocation":"2185:1:6","nodeType":"VariableDeclaration","scope":945,"src":"2177:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":924,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":929,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":926,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"2189:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":927,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"2193:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:6"},{"expression":{"id":934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":930,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"2208:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":931,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"2218:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":932,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"2223:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":935,"nodeType":"ExpressionStatement","src":"2208:16:6"},{"expression":{"id":943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":936,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"2238:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":937,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"2247:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":940,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"2267:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":938,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"2251:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4223_$","typeString":"type(library SafeCast)"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4222,"src":"2251:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":944,"nodeType":"ExpressionStatement","src":"2238:37:6"}]}]},"documentation":{"id":913,"nodeType":"StructuredDocumentation","src":"1939:108:6","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":947,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:6","nodeType":"FunctionDefinition","parameters":{"id":918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":915,"mutability":"mutable","name":"a","nameLocation":"2076:1:6","nodeType":"VariableDeclaration","scope":947,"src":"2068:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":914,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":917,"mutability":"mutable","name":"b","nameLocation":"2087:1:6","nodeType":"VariableDeclaration","scope":947,"src":"2079:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":916,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:6"},"returnParameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":920,"mutability":"mutable","name":"success","nameLocation":"2118:7:6","nodeType":"VariableDeclaration","scope":947,"src":"2113:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":919,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"result","nameLocation":"2135:6:6","nodeType":"VariableDeclaration","scope":947,"src":"2127:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:6"},"scope":2458,"src":"2052:240:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":976,"nodeType":"Block","src":"2505:391:6","statements":[{"id":975,"nodeType":"UncheckedBlock","src":"2515:375:6","statements":[{"assignments":[960],"declarations":[{"constant":false,"id":960,"mutability":"mutable","name":"c","nameLocation":"2547:1:6","nodeType":"VariableDeclaration","scope":975,"src":"2539:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":959,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":964,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":961,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"2551:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":962,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"2555:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:6"},{"AST":{"nativeSrc":"2595:188:6","nodeType":"YulBlock","src":"2595:188:6","statements":[{"nativeSrc":"2727:42:6","nodeType":"YulAssignment","src":"2727:42:6","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:6","nodeType":"YulIdentifier","src":"2748:1:6"},{"name":"a","nativeSrc":"2751:1:6","nodeType":"YulIdentifier","src":"2751:1:6"}],"functionName":{"name":"div","nativeSrc":"2744:3:6","nodeType":"YulIdentifier","src":"2744:3:6"},"nativeSrc":"2744:9:6","nodeType":"YulFunctionCall","src":"2744:9:6"},{"name":"b","nativeSrc":"2755:1:6","nodeType":"YulIdentifier","src":"2755:1:6"}],"functionName":{"name":"eq","nativeSrc":"2741:2:6","nodeType":"YulIdentifier","src":"2741:2:6"},"nativeSrc":"2741:16:6","nodeType":"YulFunctionCall","src":"2741:16:6"},{"arguments":[{"name":"a","nativeSrc":"2766:1:6","nodeType":"YulIdentifier","src":"2766:1:6"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:6","nodeType":"YulIdentifier","src":"2759:6:6"},"nativeSrc":"2759:9:6","nodeType":"YulFunctionCall","src":"2759:9:6"}],"functionName":{"name":"or","nativeSrc":"2738:2:6","nodeType":"YulIdentifier","src":"2738:2:6"},"nativeSrc":"2738:31:6","nodeType":"YulFunctionCall","src":"2738:31:6"},"variableNames":[{"name":"success","nativeSrc":"2727:7:6","nodeType":"YulIdentifier","src":"2727:7:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":950,"isOffset":false,"isSlot":false,"src":"2751:1:6","valueSize":1},{"declaration":950,"isOffset":false,"isSlot":false,"src":"2766:1:6","valueSize":1},{"declaration":952,"isOffset":false,"isSlot":false,"src":"2755:1:6","valueSize":1},{"declaration":960,"isOffset":false,"isSlot":false,"src":"2748:1:6","valueSize":1},{"declaration":955,"isOffset":false,"isSlot":false,"src":"2727:7:6","valueSize":1}],"flags":["memory-safe"],"id":965,"nodeType":"InlineAssembly","src":"2570:213:6"},{"expression":{"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":966,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"2842:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":967,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"2851:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":970,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"2871:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":968,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"2855:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4223_$","typeString":"type(library SafeCast)"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4222,"src":"2855:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":974,"nodeType":"ExpressionStatement","src":"2842:37:6"}]}]},"documentation":{"id":948,"nodeType":"StructuredDocumentation","src":"2298:111:6","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":977,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:6","nodeType":"FunctionDefinition","parameters":{"id":953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":950,"mutability":"mutable","name":"a","nameLocation":"2438:1:6","nodeType":"VariableDeclaration","scope":977,"src":"2430:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":949,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":952,"mutability":"mutable","name":"b","nameLocation":"2449:1:6","nodeType":"VariableDeclaration","scope":977,"src":"2441:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":951,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:6"},"returnParameters":{"id":958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":955,"mutability":"mutable","name":"success","nameLocation":"2480:7:6","nodeType":"VariableDeclaration","scope":977,"src":"2475:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":954,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":957,"mutability":"mutable","name":"result","nameLocation":"2497:6:6","nodeType":"VariableDeclaration","scope":977,"src":"2489:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":956,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:6"},"scope":2458,"src":"2414:482:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":997,"nodeType":"Block","src":"3111:231:6","statements":[{"id":996,"nodeType":"UncheckedBlock","src":"3121:215:6","statements":[{"expression":{"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":989,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"3145:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":990,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"3155:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":994,"nodeType":"ExpressionStatement","src":"3145:15:6"},{"AST":{"nativeSrc":"3199:127:6","nodeType":"YulBlock","src":"3199:127:6","statements":[{"nativeSrc":"3293:19:6","nodeType":"YulAssignment","src":"3293:19:6","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:6","nodeType":"YulIdentifier","src":"3307:1:6"},{"name":"b","nativeSrc":"3310:1:6","nodeType":"YulIdentifier","src":"3310:1:6"}],"functionName":{"name":"div","nativeSrc":"3303:3:6","nodeType":"YulIdentifier","src":"3303:3:6"},"nativeSrc":"3303:9:6","nodeType":"YulFunctionCall","src":"3303:9:6"},"variableNames":[{"name":"result","nativeSrc":"3293:6:6","nodeType":"YulIdentifier","src":"3293:6:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":980,"isOffset":false,"isSlot":false,"src":"3307:1:6","valueSize":1},{"declaration":982,"isOffset":false,"isSlot":false,"src":"3310:1:6","valueSize":1},{"declaration":987,"isOffset":false,"isSlot":false,"src":"3293:6:6","valueSize":1}],"flags":["memory-safe"],"id":995,"nodeType":"InlineAssembly","src":"3174:152:6"}]}]},"documentation":{"id":978,"nodeType":"StructuredDocumentation","src":"2902:113:6","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":998,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:6","nodeType":"FunctionDefinition","parameters":{"id":983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":980,"mutability":"mutable","name":"a","nameLocation":"3044:1:6","nodeType":"VariableDeclaration","scope":998,"src":"3036:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":979,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":982,"mutability":"mutable","name":"b","nameLocation":"3055:1:6","nodeType":"VariableDeclaration","scope":998,"src":"3047:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":981,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:6"},"returnParameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"success","nameLocation":"3086:7:6","nodeType":"VariableDeclaration","scope":998,"src":"3081:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":984,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"result","nameLocation":"3103:6:6","nodeType":"VariableDeclaration","scope":998,"src":"3095:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":986,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:6"},"scope":2458,"src":"3020:322:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1018,"nodeType":"Block","src":"3567:231:6","statements":[{"id":1017,"nodeType":"UncheckedBlock","src":"3577:215:6","statements":[{"expression":{"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1010,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"3601:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1011,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"3611:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1015,"nodeType":"ExpressionStatement","src":"3601:15:6"},{"AST":{"nativeSrc":"3655:127:6","nodeType":"YulBlock","src":"3655:127:6","statements":[{"nativeSrc":"3749:19:6","nodeType":"YulAssignment","src":"3749:19:6","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:6","nodeType":"YulIdentifier","src":"3763:1:6"},{"name":"b","nativeSrc":"3766:1:6","nodeType":"YulIdentifier","src":"3766:1:6"}],"functionName":{"name":"mod","nativeSrc":"3759:3:6","nodeType":"YulIdentifier","src":"3759:3:6"},"nativeSrc":"3759:9:6","nodeType":"YulFunctionCall","src":"3759:9:6"},"variableNames":[{"name":"result","nativeSrc":"3749:6:6","nodeType":"YulIdentifier","src":"3749:6:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1001,"isOffset":false,"isSlot":false,"src":"3763:1:6","valueSize":1},{"declaration":1003,"isOffset":false,"isSlot":false,"src":"3766:1:6","valueSize":1},{"declaration":1008,"isOffset":false,"isSlot":false,"src":"3749:6:6","valueSize":1}],"flags":["memory-safe"],"id":1016,"nodeType":"InlineAssembly","src":"3630:152:6"}]}]},"documentation":{"id":999,"nodeType":"StructuredDocumentation","src":"3348:123:6","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":1019,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:6","nodeType":"FunctionDefinition","parameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1001,"mutability":"mutable","name":"a","nameLocation":"3500:1:6","nodeType":"VariableDeclaration","scope":1019,"src":"3492:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1000,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1003,"mutability":"mutable","name":"b","nameLocation":"3511:1:6","nodeType":"VariableDeclaration","scope":1019,"src":"3503:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1002,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:6"},"returnParameters":{"id":1009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1006,"mutability":"mutable","name":"success","nameLocation":"3542:7:6","nodeType":"VariableDeclaration","scope":1019,"src":"3537:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1005,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1008,"mutability":"mutable","name":"result","nameLocation":"3559:6:6","nodeType":"VariableDeclaration","scope":1019,"src":"3551:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1007,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:6"},"scope":2458,"src":"3476:322:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1048,"nodeType":"Block","src":"3989:122:6","statements":[{"assignments":[1030,1032],"declarations":[{"constant":false,"id":1030,"mutability":"mutable","name":"success","nameLocation":"4005:7:6","nodeType":"VariableDeclaration","scope":1048,"src":"4000:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1029,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1032,"mutability":"mutable","name":"result","nameLocation":"4022:6:6","nodeType":"VariableDeclaration","scope":1048,"src":"4014:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1031,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1037,"initialValue":{"arguments":[{"id":1034,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"4039:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1035,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"4042:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1033,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"4032:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:6"},{"expression":{"arguments":[{"id":1039,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"4069:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1040,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"4078:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":1043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1042,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1041,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:6","memberName":"max","nodeType":"MemberAccess","src":"4086:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1038,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"4061:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1028,"id":1047,"nodeType":"Return","src":"4054:50:6"}]},"documentation":{"id":1020,"nodeType":"StructuredDocumentation","src":"3804:103:6","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":1049,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:6","nodeType":"FunctionDefinition","parameters":{"id":1025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1022,"mutability":"mutable","name":"a","nameLocation":"3943:1:6","nodeType":"VariableDeclaration","scope":1049,"src":"3935:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1021,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1024,"mutability":"mutable","name":"b","nameLocation":"3954:1:6","nodeType":"VariableDeclaration","scope":1049,"src":"3946:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1023,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:6"},"returnParameters":{"id":1028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1049,"src":"3980:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1026,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:6"},"scope":2458,"src":"3912:199:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1068,"nodeType":"Block","src":"4294:73:6","statements":[{"assignments":[null,1060],"declarations":[null,{"constant":false,"id":1060,"mutability":"mutable","name":"result","nameLocation":"4315:6:6","nodeType":"VariableDeclaration","scope":1068,"src":"4307:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1059,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1065,"initialValue":{"arguments":[{"id":1062,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"4332:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1063,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"4335:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1061,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"4325:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:6"},{"expression":{"id":1066,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"4354:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1058,"id":1067,"nodeType":"Return","src":"4347:13:6"}]},"documentation":{"id":1050,"nodeType":"StructuredDocumentation","src":"4117:95:6","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":1069,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:6","nodeType":"FunctionDefinition","parameters":{"id":1055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1052,"mutability":"mutable","name":"a","nameLocation":"4248:1:6","nodeType":"VariableDeclaration","scope":1069,"src":"4240:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1051,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1054,"mutability":"mutable","name":"b","nameLocation":"4259:1:6","nodeType":"VariableDeclaration","scope":1069,"src":"4251:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1053,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:6"},"returnParameters":{"id":1058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1069,"src":"4285:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1056,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:6"},"scope":2458,"src":"4217:150:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1098,"nodeType":"Block","src":"4564:122:6","statements":[{"assignments":[1080,1082],"declarations":[{"constant":false,"id":1080,"mutability":"mutable","name":"success","nameLocation":"4580:7:6","nodeType":"VariableDeclaration","scope":1098,"src":"4575:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1079,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1082,"mutability":"mutable","name":"result","nameLocation":"4597:6:6","nodeType":"VariableDeclaration","scope":1098,"src":"4589:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1081,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1087,"initialValue":{"arguments":[{"id":1084,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"4614:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1085,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"4617:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1083,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"4607:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:6"},{"expression":{"arguments":[{"id":1089,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"4644:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1090,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"4653:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":1093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1092,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1091,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:6","memberName":"max","nodeType":"MemberAccess","src":"4661:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1088,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"4636:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1078,"id":1097,"nodeType":"Return","src":"4629:50:6"}]},"documentation":{"id":1070,"nodeType":"StructuredDocumentation","src":"4373:109:6","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":1099,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:6","nodeType":"FunctionDefinition","parameters":{"id":1075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1072,"mutability":"mutable","name":"a","nameLocation":"4518:1:6","nodeType":"VariableDeclaration","scope":1099,"src":"4510:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1071,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1074,"mutability":"mutable","name":"b","nameLocation":"4529:1:6","nodeType":"VariableDeclaration","scope":1099,"src":"4521:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1073,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:6"},"returnParameters":{"id":1078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1077,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1099,"src":"4555:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1076,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:6"},"scope":2458,"src":"4487:199:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1125,"nodeType":"Block","src":"5158:207:6","statements":[{"id":1124,"nodeType":"UncheckedBlock","src":"5168:191:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1111,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"5306:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1112,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"5312:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1113,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"5316:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1115,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1118,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"5337:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1116,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"5321:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4223_$","typeString":"type(library SafeCast)"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4222,"src":"5321:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1121,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1110,"id":1123,"nodeType":"Return","src":"5299:49:6"}]}]},"documentation":{"id":1100,"nodeType":"StructuredDocumentation","src":"4692:374:6","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":1126,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:6","nodeType":"FunctionDefinition","parameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1102,"mutability":"mutable","name":"condition","nameLocation":"5093:9:6","nodeType":"VariableDeclaration","scope":1126,"src":"5088:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1101,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1104,"mutability":"mutable","name":"a","nameLocation":"5112:1:6","nodeType":"VariableDeclaration","scope":1126,"src":"5104:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1103,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1106,"mutability":"mutable","name":"b","nameLocation":"5123:1:6","nodeType":"VariableDeclaration","scope":1126,"src":"5115:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1105,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:6"},"returnParameters":{"id":1110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1126,"src":"5149:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1108,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:6"},"scope":2458,"src":"5071:294:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1144,"nodeType":"Block","src":"5502:44:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1137,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"5527:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1138,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"5531:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1140,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"5534:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1141,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"5537:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1136,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"5519:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1135,"id":1143,"nodeType":"Return","src":"5512:27:6"}]},"documentation":{"id":1127,"nodeType":"StructuredDocumentation","src":"5371:59:6","text":" @dev Returns the largest of two numbers."},"id":1145,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:6","nodeType":"FunctionDefinition","parameters":{"id":1132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"mutability":"mutable","name":"a","nameLocation":"5456:1:6","nodeType":"VariableDeclaration","scope":1145,"src":"5448:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1128,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1131,"mutability":"mutable","name":"b","nameLocation":"5467:1:6","nodeType":"VariableDeclaration","scope":1145,"src":"5459:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1130,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:6"},"returnParameters":{"id":1135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1145,"src":"5493:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1133,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:6"},"scope":2458,"src":"5435:111:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1163,"nodeType":"Block","src":"5684:44:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1156,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"5709:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1157,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"5713:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1159,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"5716:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1160,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"5719:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1155,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"5701:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1154,"id":1162,"nodeType":"Return","src":"5694:27:6"}]},"documentation":{"id":1146,"nodeType":"StructuredDocumentation","src":"5552:60:6","text":" @dev Returns the smallest of two numbers."},"id":1164,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:6","nodeType":"FunctionDefinition","parameters":{"id":1151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1148,"mutability":"mutable","name":"a","nameLocation":"5638:1:6","nodeType":"VariableDeclaration","scope":1164,"src":"5630:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1147,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1150,"mutability":"mutable","name":"b","nameLocation":"5649:1:6","nodeType":"VariableDeclaration","scope":1164,"src":"5641:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1149,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:6"},"returnParameters":{"id":1154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1164,"src":"5675:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1152,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:6"},"scope":2458,"src":"5617:111:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1186,"nodeType":"Block","src":"5912:82:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1174,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"5967:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1175,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"5971:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1177,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1178,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"5977:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1179,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"5981:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1181,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1173,"id":1185,"nodeType":"Return","src":"5959:28:6"}]},"documentation":{"id":1165,"nodeType":"StructuredDocumentation","src":"5734:102:6","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1187,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:6","nodeType":"FunctionDefinition","parameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1167,"mutability":"mutable","name":"a","nameLocation":"5866:1:6","nodeType":"VariableDeclaration","scope":1187,"src":"5858:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"b","nameLocation":"5877:1:6","nodeType":"VariableDeclaration","scope":1187,"src":"5869:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1168,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:6"},"returnParameters":{"id":1173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1187,"src":"5903:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1171,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:6"},"scope":2458,"src":"5841:153:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1227,"nodeType":"Block","src":"6286:633:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1197,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"6300:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1208,"nodeType":"IfStatement","src":"6296:150:6","trueBody":{"id":1207,"nodeType":"Block","src":"6308:138:6","statements":[{"expression":{"arguments":[{"expression":{"id":1203,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"6412:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$837_$","typeString":"type(library Panic)"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:6","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":804,"src":"6412:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1200,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"6400:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$837_$","typeString":"type(library Panic)"}},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:6","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":836,"src":"6400:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1206,"nodeType":"ExpressionStatement","src":"6400:35:6"}]}},{"id":1226,"nodeType":"UncheckedBlock","src":"6829:84:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1211,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"6876:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1209,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"6860:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4223_$","typeString":"type(library SafeCast)"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4222,"src":"6860:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1215,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"6887:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1218,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1219,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"6896:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1223,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1196,"id":1225,"nodeType":"Return","src":"6853:49:6"}]}]},"documentation":{"id":1188,"nodeType":"StructuredDocumentation","src":"6000:210:6","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":1228,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:6","nodeType":"FunctionDefinition","parameters":{"id":1193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1190,"mutability":"mutable","name":"a","nameLocation":"6240:1:6","nodeType":"VariableDeclaration","scope":1228,"src":"6232:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1189,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1192,"mutability":"mutable","name":"b","nameLocation":"6251:1:6","nodeType":"VariableDeclaration","scope":1228,"src":"6243:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1191,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:6"},"returnParameters":{"id":1196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1228,"src":"6277:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1194,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:6"},"scope":2458,"src":"6215:704:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1363,"nodeType":"Block","src":"7340:3585:6","statements":[{"id":1362,"nodeType":"UncheckedBlock","src":"7350:3569:6","statements":[{"assignments":[1241,1243],"declarations":[{"constant":false,"id":1241,"mutability":"mutable","name":"high","nameLocation":"7383:4:6","nodeType":"VariableDeclaration","scope":1362,"src":"7375:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1240,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1243,"mutability":"mutable","name":"low","nameLocation":"7397:3:6","nodeType":"VariableDeclaration","scope":1362,"src":"7389:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1242,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1248,"initialValue":{"arguments":[{"id":1245,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"7411:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1246,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"7414:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1244,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"7404:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1249,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"7498:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1257,"nodeType":"IfStatement","src":"7494:365:6","trueBody":{"id":1256,"nodeType":"Block","src":"7509:350:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1252,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"7827:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1253,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"7833:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1239,"id":1255,"nodeType":"Return","src":"7820:24:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1258,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"7969:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1259,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"7984:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1276,"nodeType":"IfStatement","src":"7965:142:6","trueBody":{"id":1275,"nodeType":"Block","src":"7990:117:6","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1265,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"8028:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1268,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"8046:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$837_$","typeString":"type(library Panic)"}},"id":1269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:6","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":804,"src":"8046:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1270,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"8070:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$837_$","typeString":"type(library Panic)"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:6","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":800,"src":"8070:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1264,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"8020:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1261,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"8008:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$837_$","typeString":"type(library Panic)"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:6","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":836,"src":"8008:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1274,"nodeType":"ExpressionStatement","src":"8008:84:6"}]}},{"assignments":[1278],"declarations":[{"constant":false,"id":1278,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:6","nodeType":"VariableDeclaration","scope":1362,"src":"8359:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1277,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1279,"nodeType":"VariableDeclarationStatement","src":"8359:17:6"},{"AST":{"nativeSrc":"8415:283:6","nodeType":"YulBlock","src":"8415:283:6","statements":[{"nativeSrc":"8484:38:6","nodeType":"YulAssignment","src":"8484:38:6","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:6","nodeType":"YulIdentifier","src":"8504:1:6"},{"name":"y","nativeSrc":"8507:1:6","nodeType":"YulIdentifier","src":"8507:1:6"},{"name":"denominator","nativeSrc":"8510:11:6","nodeType":"YulIdentifier","src":"8510:11:6"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:6","nodeType":"YulIdentifier","src":"8497:6:6"},"nativeSrc":"8497:25:6","nodeType":"YulFunctionCall","src":"8497:25:6"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:6","nodeType":"YulIdentifier","src":"8484:9:6"}]},{"nativeSrc":"8604:37:6","nodeType":"YulAssignment","src":"8604:37:6","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:6","nodeType":"YulIdentifier","src":"8616:4:6"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:6","nodeType":"YulIdentifier","src":"8625:9:6"},{"name":"low","nativeSrc":"8636:3:6","nodeType":"YulIdentifier","src":"8636:3:6"}],"functionName":{"name":"gt","nativeSrc":"8622:2:6","nodeType":"YulIdentifier","src":"8622:2:6"},"nativeSrc":"8622:18:6","nodeType":"YulFunctionCall","src":"8622:18:6"}],"functionName":{"name":"sub","nativeSrc":"8612:3:6","nodeType":"YulIdentifier","src":"8612:3:6"},"nativeSrc":"8612:29:6","nodeType":"YulFunctionCall","src":"8612:29:6"},"variableNames":[{"name":"high","nativeSrc":"8604:4:6","nodeType":"YulIdentifier","src":"8604:4:6"}]},{"nativeSrc":"8658:26:6","nodeType":"YulAssignment","src":"8658:26:6","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:6","nodeType":"YulIdentifier","src":"8669:3:6"},{"name":"remainder","nativeSrc":"8674:9:6","nodeType":"YulIdentifier","src":"8674:9:6"}],"functionName":{"name":"sub","nativeSrc":"8665:3:6","nodeType":"YulIdentifier","src":"8665:3:6"},"nativeSrc":"8665:19:6","nodeType":"YulFunctionCall","src":"8665:19:6"},"variableNames":[{"name":"low","nativeSrc":"8658:3:6","nodeType":"YulIdentifier","src":"8658:3:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1235,"isOffset":false,"isSlot":false,"src":"8510:11:6","valueSize":1},{"declaration":1241,"isOffset":false,"isSlot":false,"src":"8604:4:6","valueSize":1},{"declaration":1241,"isOffset":false,"isSlot":false,"src":"8616:4:6","valueSize":1},{"declaration":1243,"isOffset":false,"isSlot":false,"src":"8636:3:6","valueSize":1},{"declaration":1243,"isOffset":false,"isSlot":false,"src":"8658:3:6","valueSize":1},{"declaration":1243,"isOffset":false,"isSlot":false,"src":"8669:3:6","valueSize":1},{"declaration":1278,"isOffset":false,"isSlot":false,"src":"8484:9:6","valueSize":1},{"declaration":1278,"isOffset":false,"isSlot":false,"src":"8625:9:6","valueSize":1},{"declaration":1278,"isOffset":false,"isSlot":false,"src":"8674:9:6","valueSize":1},{"declaration":1231,"isOffset":false,"isSlot":false,"src":"8504:1:6","valueSize":1},{"declaration":1233,"isOffset":false,"isSlot":false,"src":"8507:1:6","valueSize":1}],"flags":["memory-safe"],"id":1280,"nodeType":"InlineAssembly","src":"8390:308:6"},{"assignments":[1282],"declarations":[{"constant":false,"id":1282,"mutability":"mutable","name":"twos","nameLocation":"8910:4:6","nodeType":"VariableDeclaration","scope":1362,"src":"8902:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1281,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1289,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1283,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"8917:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":1284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1285,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"8936:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1287,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:6"},{"AST":{"nativeSrc":"8987:359:6","nodeType":"YulBlock","src":"8987:359:6","statements":[{"nativeSrc":"9052:37:6","nodeType":"YulAssignment","src":"9052:37:6","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:6","nodeType":"YulIdentifier","src":"9071:11:6"},{"name":"twos","nativeSrc":"9084:4:6","nodeType":"YulIdentifier","src":"9084:4:6"}],"functionName":{"name":"div","nativeSrc":"9067:3:6","nodeType":"YulIdentifier","src":"9067:3:6"},"nativeSrc":"9067:22:6","nodeType":"YulFunctionCall","src":"9067:22:6"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:6","nodeType":"YulIdentifier","src":"9052:11:6"}]},{"nativeSrc":"9153:21:6","nodeType":"YulAssignment","src":"9153:21:6","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:6","nodeType":"YulIdentifier","src":"9164:3:6"},{"name":"twos","nativeSrc":"9169:4:6","nodeType":"YulIdentifier","src":"9169:4:6"}],"functionName":{"name":"div","nativeSrc":"9160:3:6","nodeType":"YulIdentifier","src":"9160:3:6"},"nativeSrc":"9160:14:6","nodeType":"YulFunctionCall","src":"9160:14:6"},"variableNames":[{"name":"low","nativeSrc":"9153:3:6","nodeType":"YulIdentifier","src":"9153:3:6"}]},{"nativeSrc":"9293:39:6","nodeType":"YulAssignment","src":"9293:39:6","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:6","nodeType":"YulLiteral","src":"9313:1:6","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:6","nodeType":"YulIdentifier","src":"9316:4:6"}],"functionName":{"name":"sub","nativeSrc":"9309:3:6","nodeType":"YulIdentifier","src":"9309:3:6"},"nativeSrc":"9309:12:6","nodeType":"YulFunctionCall","src":"9309:12:6"},{"name":"twos","nativeSrc":"9323:4:6","nodeType":"YulIdentifier","src":"9323:4:6"}],"functionName":{"name":"div","nativeSrc":"9305:3:6","nodeType":"YulIdentifier","src":"9305:3:6"},"nativeSrc":"9305:23:6","nodeType":"YulFunctionCall","src":"9305:23:6"},{"kind":"number","nativeSrc":"9330:1:6","nodeType":"YulLiteral","src":"9330:1:6","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:6","nodeType":"YulIdentifier","src":"9301:3:6"},"nativeSrc":"9301:31:6","nodeType":"YulFunctionCall","src":"9301:31:6"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:6","nodeType":"YulIdentifier","src":"9293:4:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1235,"isOffset":false,"isSlot":false,"src":"9052:11:6","valueSize":1},{"declaration":1235,"isOffset":false,"isSlot":false,"src":"9071:11:6","valueSize":1},{"declaration":1243,"isOffset":false,"isSlot":false,"src":"9153:3:6","valueSize":1},{"declaration":1243,"isOffset":false,"isSlot":false,"src":"9164:3:6","valueSize":1},{"declaration":1282,"isOffset":false,"isSlot":false,"src":"9084:4:6","valueSize":1},{"declaration":1282,"isOffset":false,"isSlot":false,"src":"9169:4:6","valueSize":1},{"declaration":1282,"isOffset":false,"isSlot":false,"src":"9293:4:6","valueSize":1},{"declaration":1282,"isOffset":false,"isSlot":false,"src":"9316:4:6","valueSize":1},{"declaration":1282,"isOffset":false,"isSlot":false,"src":"9323:4:6","valueSize":1}],"flags":["memory-safe"],"id":1290,"nodeType":"InlineAssembly","src":"8962:384:6"},{"expression":{"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1291,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"9409:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1292,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"9416:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1293,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"9423:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1296,"nodeType":"ExpressionStatement","src":"9409:18:6"},{"assignments":[1298],"declarations":[{"constant":false,"id":1298,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:6","nodeType":"VariableDeclaration","scope":1362,"src":"9762:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1297,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1305,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:6","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1300,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"9785:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1302,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:6"},{"expression":{"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1306,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"10018:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1308,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"10033:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1309,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"10047:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1313,"nodeType":"ExpressionStatement","src":"10018:36:6"},{"expression":{"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1314,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"10088:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1316,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"10103:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1317,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"10117:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1321,"nodeType":"ExpressionStatement","src":"10088:36:6"},{"expression":{"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1322,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"10160:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1324,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"10175:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1325,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"10189:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1329,"nodeType":"ExpressionStatement","src":"10160:36:6"},{"expression":{"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1330,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"10231:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1332,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"10246:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1333,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"10260:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1337,"nodeType":"ExpressionStatement","src":"10231:36:6"},{"expression":{"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1338,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"10304:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1340,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"10319:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1341,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"10333:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1345,"nodeType":"ExpressionStatement","src":"10304:36:6"},{"expression":{"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1346,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"10378:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1348,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"10393:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1349,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"10407:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1353,"nodeType":"ExpressionStatement","src":"10378:36:6"},{"expression":{"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1354,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"10859:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1355,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"10868:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1356,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"10874:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1359,"nodeType":"ExpressionStatement","src":"10859:22:6"},{"expression":{"id":1360,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"10902:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1239,"id":1361,"nodeType":"Return","src":"10895:13:6"}]}]},"documentation":{"id":1229,"nodeType":"StructuredDocumentation","src":"6925:312:6","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":1364,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:6","nodeType":"FunctionDefinition","parameters":{"id":1236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1231,"mutability":"mutable","name":"x","nameLocation":"7266:1:6","nodeType":"VariableDeclaration","scope":1364,"src":"7258:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1230,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1233,"mutability":"mutable","name":"y","nameLocation":"7277:1:6","nodeType":"VariableDeclaration","scope":1364,"src":"7269:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1232,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1235,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:6","nodeType":"VariableDeclaration","scope":1364,"src":"7280:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1234,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:6"},"returnParameters":{"id":1239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1238,"mutability":"mutable","name":"result","nameLocation":"7332:6:6","nodeType":"VariableDeclaration","scope":1364,"src":"7324:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1237,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:6"},"scope":2458,"src":"7242:3683:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1400,"nodeType":"Block","src":"11164:128:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1380,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"11188:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1381,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"11191:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1382,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"11194:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1379,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1364,1401],"referencedDeclaration":1364,"src":"11181:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1387,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"11242:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$849","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$849","typeString":"enum Math.Rounding"}],"id":1386,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"11225:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$849_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1390,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"11262:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1391,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"11265:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1392,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"11268:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1389,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:6","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1384,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"11209:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4223_$","typeString":"type(library SafeCast)"}},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4222,"src":"11209:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1378,"id":1399,"nodeType":"Return","src":"11174:111:6"}]},"documentation":{"id":1365,"nodeType":"StructuredDocumentation","src":"10931:118:6","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1401,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:6","nodeType":"FunctionDefinition","parameters":{"id":1375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1367,"mutability":"mutable","name":"x","nameLocation":"11078:1:6","nodeType":"VariableDeclaration","scope":1401,"src":"11070:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1366,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1369,"mutability":"mutable","name":"y","nameLocation":"11089:1:6","nodeType":"VariableDeclaration","scope":1401,"src":"11081:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1368,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1371,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:6","nodeType":"VariableDeclaration","scope":1401,"src":"11092:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1370,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1374,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:6","nodeType":"VariableDeclaration","scope":1401,"src":"11113:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$849","typeString":"enum Math.Rounding"},"typeName":{"id":1373,"nodeType":"UserDefinedTypeName","pathNode":{"id":1372,"name":"Rounding","nameLocations":["11113:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":849,"src":"11113:8:6"},"referencedDeclaration":849,"src":"11113:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$849","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:6"},"returnParameters":{"id":1378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1401,"src":"11155:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1376,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:6"},"scope":2458,"src":"11054:238:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1450,"nodeType":"Block","src":"11500:245:6","statements":[{"id":1449,"nodeType":"UncheckedBlock","src":"11510:229:6","statements":[{"assignments":[1414,1416],"declarations":[{"constant":false,"id":1414,"mutability":"mutable","name":"high","nameLocation":"11543:4:6","nodeType":"VariableDeclaration","scope":1449,"src":"11535:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1413,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1416,"mutability":"mutable","name":"low","nameLocation":"11557:3:6","nodeType":"VariableDeclaration","scope":1449,"src":"11549:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1415,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1421,"initialValue":{"arguments":[{"id":1418,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"11571:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1419,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"11574:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1417,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"11564:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1422,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"11594:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1424,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"11607:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1435,"nodeType":"IfStatement","src":"11590:86:6","trueBody":{"id":1434,"nodeType":"Block","src":"11610:66:6","statements":[{"expression":{"arguments":[{"expression":{"id":1430,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"11640:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$837_$","typeString":"type(library Panic)"}},"id":1431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:6","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":800,"src":"11640:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1427,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"11628:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$837_$","typeString":"type(library Panic)"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:6","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":836,"src":"11628:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1433,"nodeType":"ExpressionStatement","src":"11628:33:6"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1436,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"11697:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":1437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:6","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1438,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"11712:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":1440,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1442,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1443,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"11719:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":1444,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"11726:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1446,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1412,"id":1448,"nodeType":"Return","src":"11689:39:6"}]}]},"documentation":{"id":1402,"nodeType":"StructuredDocumentation","src":"11298:111:6","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":1451,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:6","nodeType":"FunctionDefinition","parameters":{"id":1409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1404,"mutability":"mutable","name":"x","nameLocation":"11438:1:6","nodeType":"VariableDeclaration","scope":1451,"src":"11430:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1403,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1406,"mutability":"mutable","name":"y","nameLocation":"11449:1:6","nodeType":"VariableDeclaration","scope":1451,"src":"11441:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1405,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1408,"mutability":"mutable","name":"n","nameLocation":"11458:1:6","nodeType":"VariableDeclaration","scope":1451,"src":"11452:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1407,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:6"},"returnParameters":{"id":1412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1411,"mutability":"mutable","name":"result","nameLocation":"11492:6:6","nodeType":"VariableDeclaration","scope":1451,"src":"11484:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1410,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:6"},"scope":2458,"src":"11414:331:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1489,"nodeType":"Block","src":"11963:113:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1467,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"11987:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1468,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"11990:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1469,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"11993:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1466,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[1451,1490],"referencedDeclaration":1451,"src":"11980:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1474,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"12031:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$849","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$849","typeString":"enum Math.Rounding"}],"id":1473,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"12014:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$849_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1477,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"12051:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1478,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"12054:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1480,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"12062:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1476,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:6","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1471,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"11998:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4223_$","typeString":"type(library SafeCast)"}},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4222,"src":"11998:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1465,"id":1488,"nodeType":"Return","src":"11973:96:6"}]},"documentation":{"id":1452,"nodeType":"StructuredDocumentation","src":"11751:109:6","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":1490,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:6","nodeType":"FunctionDefinition","parameters":{"id":1462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1454,"mutability":"mutable","name":"x","nameLocation":"11889:1:6","nodeType":"VariableDeclaration","scope":1490,"src":"11881:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1453,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1456,"mutability":"mutable","name":"y","nameLocation":"11900:1:6","nodeType":"VariableDeclaration","scope":1490,"src":"11892:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1455,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1458,"mutability":"mutable","name":"n","nameLocation":"11909:1:6","nodeType":"VariableDeclaration","scope":1490,"src":"11903:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1457,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1461,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:6","nodeType":"VariableDeclaration","scope":1490,"src":"11912:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$849","typeString":"enum Math.Rounding"},"typeName":{"id":1460,"nodeType":"UserDefinedTypeName","pathNode":{"id":1459,"name":"Rounding","nameLocations":["11912:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":849,"src":"11912:8:6"},"referencedDeclaration":849,"src":"11912:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$849","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:6"},"returnParameters":{"id":1465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1490,"src":"11954:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1463,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:6"},"scope":2458,"src":"11865:211:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1586,"nodeType":"Block","src":"12710:1849:6","statements":[{"id":1585,"nodeType":"UncheckedBlock","src":"12720:1833:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1500,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"12748:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1505,"nodeType":"IfStatement","src":"12744:20:6","trueBody":{"expression":{"hexValue":"30","id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1499,"id":1504,"nodeType":"Return","src":"12756:8:6"}},{"assignments":[1507],"declarations":[{"constant":false,"id":1507,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:6","nodeType":"VariableDeclaration","scope":1585,"src":"13235:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1506,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1511,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1508,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"13255:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1509,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"13259:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:6"},{"assignments":[1513],"declarations":[{"constant":false,"id":1513,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:6","nodeType":"VariableDeclaration","scope":1585,"src":"13274:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1512,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1515,"initialValue":{"id":1514,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"13288:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:6"},{"assignments":[1517],"declarations":[{"constant":false,"id":1517,"mutability":"mutable","name":"x","nameLocation":"13432:1:6","nodeType":"VariableDeclaration","scope":1585,"src":"13425:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1516,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1519,"initialValue":{"hexValue":"30","id":1518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:6"},{"assignments":[1521],"declarations":[{"constant":false,"id":1521,"mutability":"mutable","name":"y","nameLocation":"13458:1:6","nodeType":"VariableDeclaration","scope":1585,"src":"13451:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1520,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1523,"initialValue":{"hexValue":"31","id":1522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:6"},{"body":{"id":1560,"nodeType":"Block","src":"13501:882:6","statements":[{"assignments":[1528],"declarations":[{"constant":false,"id":1528,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:6","nodeType":"VariableDeclaration","scope":1560,"src":"13519:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1527,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1532,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1529,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"13538:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1530,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"13544:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:6"},{"expression":{"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1533,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"13573:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1534,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"13578:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1535,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":1536,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"13678:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1537,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"13923:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1538,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"13929:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1539,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"13941:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1542,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:6","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1544,"nodeType":"ExpressionStatement","src":"13572:395:6"},{"expression":{"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1545,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"13987:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":1546,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"13990:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1547,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":1548,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"14072:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1549,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"14326:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1550,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"14330:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1553,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"14341:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1551,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:6","typeDescriptions":{}}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1557,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:6","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1559,"nodeType":"ExpressionStatement","src":"13986:382:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1524,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"13485:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1561,"nodeType":"WhileStatement","src":"13478:905:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1562,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"14401:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1567,"nodeType":"IfStatement","src":"14397:22:6","trueBody":{"expression":{"hexValue":"30","id":1565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1499,"id":1566,"nodeType":"Return","src":"14411:8:6"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1569,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"14470:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1572,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"14477:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:6","subExpression":{"id":1575,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"14490:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1573,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:6","typeDescriptions":{}}},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1581,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"14502:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1579,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:6","typeDescriptions":{}}},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1568,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"14462:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1499,"id":1584,"nodeType":"Return","src":"14455:50:6"}]}]},"documentation":{"id":1491,"nodeType":"StructuredDocumentation","src":"12082:553:6","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":1587,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:6","nodeType":"FunctionDefinition","parameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"a","nameLocation":"12664:1:6","nodeType":"VariableDeclaration","scope":1587,"src":"12656:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1492,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1495,"mutability":"mutable","name":"n","nameLocation":"12675:1:6","nodeType":"VariableDeclaration","scope":1587,"src":"12667:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1494,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:6"},"returnParameters":{"id":1499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1587,"src":"12701:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1497,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:6"},"scope":2458,"src":"12640:1919:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1607,"nodeType":"Block","src":"15159:82:6","statements":[{"id":1606,"nodeType":"UncheckedBlock","src":"15169:66:6","statements":[{"expression":{"arguments":[{"id":1599,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"15212:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1600,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"15215:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1603,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"15222:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1597,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"15200:4:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2458_$","typeString":"type(library Math)"}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:6","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":1644,"src":"15200:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1596,"id":1605,"nodeType":"Return","src":"15193:31:6"}]}]},"documentation":{"id":1588,"nodeType":"StructuredDocumentation","src":"14565:514:6","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":1608,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:6","nodeType":"FunctionDefinition","parameters":{"id":1593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1590,"mutability":"mutable","name":"a","nameLocation":"15113:1:6","nodeType":"VariableDeclaration","scope":1608,"src":"15105:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1589,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1592,"mutability":"mutable","name":"p","nameLocation":"15124:1:6","nodeType":"VariableDeclaration","scope":1608,"src":"15116:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1591,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:6"},"returnParameters":{"id":1596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1608,"src":"15150:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1594,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:6"},"scope":2458,"src":"15084:157:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1643,"nodeType":"Block","src":"16011:174:6","statements":[{"assignments":[1621,1623],"declarations":[{"constant":false,"id":1621,"mutability":"mutable","name":"success","nameLocation":"16027:7:6","nodeType":"VariableDeclaration","scope":1643,"src":"16022:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1620,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1623,"mutability":"mutable","name":"result","nameLocation":"16044:6:6","nodeType":"VariableDeclaration","scope":1643,"src":"16036:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1622,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1629,"initialValue":{"arguments":[{"id":1625,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"16064:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1626,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"16067:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1627,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"16070:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1624,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[1668,1750],"referencedDeclaration":1668,"src":"16054:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:6"},{"condition":{"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:6","subExpression":{"id":1630,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"16087:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1640,"nodeType":"IfStatement","src":"16082:74:6","trueBody":{"id":1639,"nodeType":"Block","src":"16096:60:6","statements":[{"expression":{"arguments":[{"expression":{"id":1635,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"16122:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$837_$","typeString":"type(library Panic)"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:6","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":804,"src":"16122:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1632,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"16110:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$837_$","typeString":"type(library Panic)"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:6","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":836,"src":"16110:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1638,"nodeType":"ExpressionStatement","src":"16110:35:6"}]}},{"expression":{"id":1641,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"16172:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1619,"id":1642,"nodeType":"Return","src":"16165:13:6"}]},"documentation":{"id":1609,"nodeType":"StructuredDocumentation","src":"15247:678:6","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":1644,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:6","nodeType":"FunctionDefinition","parameters":{"id":1616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1611,"mutability":"mutable","name":"b","nameLocation":"15954:1:6","nodeType":"VariableDeclaration","scope":1644,"src":"15946:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1610,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1613,"mutability":"mutable","name":"e","nameLocation":"15965:1:6","nodeType":"VariableDeclaration","scope":1644,"src":"15957:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1612,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1615,"mutability":"mutable","name":"m","nameLocation":"15976:1:6","nodeType":"VariableDeclaration","scope":1644,"src":"15968:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1614,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:6"},"returnParameters":{"id":1619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1644,"src":"16002:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1617,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:6"},"scope":2458,"src":"15930:255:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1667,"nodeType":"Block","src":"17039:1493:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1658,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"17053:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1665,"nodeType":"IfStatement","src":"17049:29:6","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1663,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1657,"id":1664,"nodeType":"Return","src":"17061:17:6"}},{"AST":{"nativeSrc":"17113:1413:6","nodeType":"YulBlock","src":"17113:1413:6","statements":[{"nativeSrc":"17127:22:6","nodeType":"YulVariableDeclaration","src":"17127:22:6","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:6","nodeType":"YulLiteral","src":"17144:4:6","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:6","nodeType":"YulIdentifier","src":"17138:5:6"},"nativeSrc":"17138:11:6","nodeType":"YulFunctionCall","src":"17138:11:6"},"variables":[{"name":"ptr","nativeSrc":"17131:3:6","nodeType":"YulTypedName","src":"17131:3:6","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:6","nodeType":"YulIdentifier","src":"18057:3:6"},{"kind":"number","nativeSrc":"18062:4:6","nodeType":"YulLiteral","src":"18062:4:6","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:6","nodeType":"YulIdentifier","src":"18050:6:6"},"nativeSrc":"18050:17:6","nodeType":"YulFunctionCall","src":"18050:17:6"},"nativeSrc":"18050:17:6","nodeType":"YulExpressionStatement","src":"18050:17:6"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:6","nodeType":"YulIdentifier","src":"18091:3:6"},{"kind":"number","nativeSrc":"18096:4:6","nodeType":"YulLiteral","src":"18096:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:6","nodeType":"YulIdentifier","src":"18087:3:6"},"nativeSrc":"18087:14:6","nodeType":"YulFunctionCall","src":"18087:14:6"},{"kind":"number","nativeSrc":"18103:4:6","nodeType":"YulLiteral","src":"18103:4:6","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:6","nodeType":"YulIdentifier","src":"18080:6:6"},"nativeSrc":"18080:28:6","nodeType":"YulFunctionCall","src":"18080:28:6"},"nativeSrc":"18080:28:6","nodeType":"YulExpressionStatement","src":"18080:28:6"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:6","nodeType":"YulIdentifier","src":"18132:3:6"},{"kind":"number","nativeSrc":"18137:4:6","nodeType":"YulLiteral","src":"18137:4:6","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:6","nodeType":"YulIdentifier","src":"18128:3:6"},"nativeSrc":"18128:14:6","nodeType":"YulFunctionCall","src":"18128:14:6"},{"kind":"number","nativeSrc":"18144:4:6","nodeType":"YulLiteral","src":"18144:4:6","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:6","nodeType":"YulIdentifier","src":"18121:6:6"},"nativeSrc":"18121:28:6","nodeType":"YulFunctionCall","src":"18121:28:6"},"nativeSrc":"18121:28:6","nodeType":"YulExpressionStatement","src":"18121:28:6"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:6","nodeType":"YulIdentifier","src":"18173:3:6"},{"kind":"number","nativeSrc":"18178:4:6","nodeType":"YulLiteral","src":"18178:4:6","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:6","nodeType":"YulIdentifier","src":"18169:3:6"},"nativeSrc":"18169:14:6","nodeType":"YulFunctionCall","src":"18169:14:6"},{"name":"b","nativeSrc":"18185:1:6","nodeType":"YulIdentifier","src":"18185:1:6"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:6","nodeType":"YulIdentifier","src":"18162:6:6"},"nativeSrc":"18162:25:6","nodeType":"YulFunctionCall","src":"18162:25:6"},"nativeSrc":"18162:25:6","nodeType":"YulExpressionStatement","src":"18162:25:6"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:6","nodeType":"YulIdentifier","src":"18211:3:6"},{"kind":"number","nativeSrc":"18216:4:6","nodeType":"YulLiteral","src":"18216:4:6","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:6","nodeType":"YulIdentifier","src":"18207:3:6"},"nativeSrc":"18207:14:6","nodeType":"YulFunctionCall","src":"18207:14:6"},{"name":"e","nativeSrc":"18223:1:6","nodeType":"YulIdentifier","src":"18223:1:6"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:6","nodeType":"YulIdentifier","src":"18200:6:6"},"nativeSrc":"18200:25:6","nodeType":"YulFunctionCall","src":"18200:25:6"},"nativeSrc":"18200:25:6","nodeType":"YulExpressionStatement","src":"18200:25:6"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:6","nodeType":"YulIdentifier","src":"18249:3:6"},{"kind":"number","nativeSrc":"18254:4:6","nodeType":"YulLiteral","src":"18254:4:6","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:6","nodeType":"YulIdentifier","src":"18245:3:6"},"nativeSrc":"18245:14:6","nodeType":"YulFunctionCall","src":"18245:14:6"},{"name":"m","nativeSrc":"18261:1:6","nodeType":"YulIdentifier","src":"18261:1:6"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:6","nodeType":"YulIdentifier","src":"18238:6:6"},"nativeSrc":"18238:25:6","nodeType":"YulFunctionCall","src":"18238:25:6"},"nativeSrc":"18238:25:6","nodeType":"YulExpressionStatement","src":"18238:25:6"},{"nativeSrc":"18425:57:6","nodeType":"YulAssignment","src":"18425:57:6","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:6","nodeType":"YulIdentifier","src":"18447:3:6"},"nativeSrc":"18447:5:6","nodeType":"YulFunctionCall","src":"18447:5:6"},{"kind":"number","nativeSrc":"18454:4:6","nodeType":"YulLiteral","src":"18454:4:6","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:6","nodeType":"YulIdentifier","src":"18460:3:6"},{"kind":"number","nativeSrc":"18465:4:6","nodeType":"YulLiteral","src":"18465:4:6","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:6","nodeType":"YulLiteral","src":"18471:4:6","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:6","nodeType":"YulLiteral","src":"18477:4:6","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:6","nodeType":"YulIdentifier","src":"18436:10:6"},"nativeSrc":"18436:46:6","nodeType":"YulFunctionCall","src":"18436:46:6"},"variableNames":[{"name":"success","nativeSrc":"18425:7:6","nodeType":"YulIdentifier","src":"18425:7:6"}]},{"nativeSrc":"18495:21:6","nodeType":"YulAssignment","src":"18495:21:6","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:6","nodeType":"YulLiteral","src":"18511:4:6","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:6","nodeType":"YulIdentifier","src":"18505:5:6"},"nativeSrc":"18505:11:6","nodeType":"YulFunctionCall","src":"18505:11:6"},"variableNames":[{"name":"result","nativeSrc":"18495:6:6","nodeType":"YulIdentifier","src":"18495:6:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1647,"isOffset":false,"isSlot":false,"src":"18185:1:6","valueSize":1},{"declaration":1649,"isOffset":false,"isSlot":false,"src":"18223:1:6","valueSize":1},{"declaration":1651,"isOffset":false,"isSlot":false,"src":"18261:1:6","valueSize":1},{"declaration":1656,"isOffset":false,"isSlot":false,"src":"18495:6:6","valueSize":1},{"declaration":1654,"isOffset":false,"isSlot":false,"src":"18425:7:6","valueSize":1}],"flags":["memory-safe"],"id":1666,"nodeType":"InlineAssembly","src":"17088:1438:6"}]},"documentation":{"id":1645,"nodeType":"StructuredDocumentation","src":"16191:738:6","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":1668,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:6","nodeType":"FunctionDefinition","parameters":{"id":1652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1647,"mutability":"mutable","name":"b","nameLocation":"16961:1:6","nodeType":"VariableDeclaration","scope":1668,"src":"16953:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1646,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1649,"mutability":"mutable","name":"e","nameLocation":"16972:1:6","nodeType":"VariableDeclaration","scope":1668,"src":"16964:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1648,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1651,"mutability":"mutable","name":"m","nameLocation":"16983:1:6","nodeType":"VariableDeclaration","scope":1668,"src":"16975:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1650,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:6"},"returnParameters":{"id":1657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1654,"mutability":"mutable","name":"success","nameLocation":"17014:7:6","nodeType":"VariableDeclaration","scope":1668,"src":"17009:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1653,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1656,"mutability":"mutable","name":"result","nameLocation":"17031:6:6","nodeType":"VariableDeclaration","scope":1668,"src":"17023:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1655,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:6"},"scope":2458,"src":"16934:1598:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1703,"nodeType":"Block","src":"18729:179:6","statements":[{"assignments":[1681,1683],"declarations":[{"constant":false,"id":1681,"mutability":"mutable","name":"success","nameLocation":"18745:7:6","nodeType":"VariableDeclaration","scope":1703,"src":"18740:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1680,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1683,"mutability":"mutable","name":"result","nameLocation":"18767:6:6","nodeType":"VariableDeclaration","scope":1703,"src":"18754:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1682,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1689,"initialValue":{"arguments":[{"id":1685,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"18787:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1686,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"18790:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1687,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"18793:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1684,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[1668,1750],"referencedDeclaration":1750,"src":"18777:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:6"},{"condition":{"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:6","subExpression":{"id":1690,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"18810:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1700,"nodeType":"IfStatement","src":"18805:74:6","trueBody":{"id":1699,"nodeType":"Block","src":"18819:60:6","statements":[{"expression":{"arguments":[{"expression":{"id":1695,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"18845:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$837_$","typeString":"type(library Panic)"}},"id":1696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:6","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":804,"src":"18845:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1692,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"18833:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$837_$","typeString":"type(library Panic)"}},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:6","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":836,"src":"18833:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1698,"nodeType":"ExpressionStatement","src":"18833:35:6"}]}},{"expression":{"id":1701,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"18895:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1679,"id":1702,"nodeType":"Return","src":"18888:13:6"}]},"documentation":{"id":1669,"nodeType":"StructuredDocumentation","src":"18538:85:6","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":1704,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:6","nodeType":"FunctionDefinition","parameters":{"id":1676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1671,"mutability":"mutable","name":"b","nameLocation":"18657:1:6","nodeType":"VariableDeclaration","scope":1704,"src":"18644:14:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1670,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1673,"mutability":"mutable","name":"e","nameLocation":"18673:1:6","nodeType":"VariableDeclaration","scope":1704,"src":"18660:14:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1672,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1675,"mutability":"mutable","name":"m","nameLocation":"18689:1:6","nodeType":"VariableDeclaration","scope":1704,"src":"18676:14:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1674,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:6"},"returnParameters":{"id":1679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1704,"src":"18715:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1677,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:6"},"scope":2458,"src":"18628:280:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1749,"nodeType":"Block","src":"19162:771:6","statements":[{"condition":{"arguments":[{"id":1719,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"19187:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1718,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"19176:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1728,"nodeType":"IfStatement","src":"19172:47:6","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1722,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":1726,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":1717,"id":1727,"nodeType":"Return","src":"19191:28:6"}},{"assignments":[1730],"declarations":[{"constant":false,"id":1730,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:6","nodeType":"VariableDeclaration","scope":1749,"src":"19230:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1729,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1733,"initialValue":{"expression":{"id":1731,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"19245:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:6","memberName":"length","nodeType":"MemberAccess","src":"19245:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:6"},{"expression":{"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1734,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"19335:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1737,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"19361:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:6","memberName":"length","nodeType":"MemberAccess","src":"19361:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1739,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"19371:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:6","memberName":"length","nodeType":"MemberAccess","src":"19371:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1741,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"19381:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1742,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"19387:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1743,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"19390:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1744,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"19393:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1735,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:6","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1747,"nodeType":"ExpressionStatement","src":"19335:60:6"},{"AST":{"nativeSrc":"19431:496:6","nodeType":"YulBlock","src":"19431:496:6","statements":[{"nativeSrc":"19445:32:6","nodeType":"YulVariableDeclaration","src":"19445:32:6","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:6","nodeType":"YulIdentifier","src":"19464:6:6"},{"kind":"number","nativeSrc":"19472:4:6","nodeType":"YulLiteral","src":"19472:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:6","nodeType":"YulIdentifier","src":"19460:3:6"},"nativeSrc":"19460:17:6","nodeType":"YulFunctionCall","src":"19460:17:6"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:6","nodeType":"YulTypedName","src":"19449:7:6","type":""}]},{"nativeSrc":"19567:73:6","nodeType":"YulAssignment","src":"19567:73:6","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:6","nodeType":"YulIdentifier","src":"19589:3:6"},"nativeSrc":"19589:5:6","nodeType":"YulFunctionCall","src":"19589:5:6"},{"kind":"number","nativeSrc":"19596:4:6","nodeType":"YulLiteral","src":"19596:4:6","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:6","nodeType":"YulIdentifier","src":"19602:7:6"},{"arguments":[{"name":"result","nativeSrc":"19617:6:6","nodeType":"YulIdentifier","src":"19617:6:6"}],"functionName":{"name":"mload","nativeSrc":"19611:5:6","nodeType":"YulIdentifier","src":"19611:5:6"},"nativeSrc":"19611:13:6","nodeType":"YulFunctionCall","src":"19611:13:6"},{"name":"dataPtr","nativeSrc":"19626:7:6","nodeType":"YulIdentifier","src":"19626:7:6"},{"name":"mLen","nativeSrc":"19635:4:6","nodeType":"YulIdentifier","src":"19635:4:6"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:6","nodeType":"YulIdentifier","src":"19578:10:6"},"nativeSrc":"19578:62:6","nodeType":"YulFunctionCall","src":"19578:62:6"},"variableNames":[{"name":"success","nativeSrc":"19567:7:6","nodeType":"YulIdentifier","src":"19567:7:6"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:6","nodeType":"YulIdentifier","src":"19796:6:6"},{"name":"mLen","nativeSrc":"19804:4:6","nodeType":"YulIdentifier","src":"19804:4:6"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:6","nodeType":"YulIdentifier","src":"19789:6:6"},"nativeSrc":"19789:20:6","nodeType":"YulFunctionCall","src":"19789:20:6"},"nativeSrc":"19789:20:6","nodeType":"YulExpressionStatement","src":"19789:20:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:6","nodeType":"YulLiteral","src":"19892:4:6","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:6","nodeType":"YulIdentifier","src":"19902:7:6"},{"name":"mLen","nativeSrc":"19911:4:6","nodeType":"YulIdentifier","src":"19911:4:6"}],"functionName":{"name":"add","nativeSrc":"19898:3:6","nodeType":"YulIdentifier","src":"19898:3:6"},"nativeSrc":"19898:18:6","nodeType":"YulFunctionCall","src":"19898:18:6"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:6","nodeType":"YulIdentifier","src":"19885:6:6"},"nativeSrc":"19885:32:6","nodeType":"YulFunctionCall","src":"19885:32:6"},"nativeSrc":"19885:32:6","nodeType":"YulExpressionStatement","src":"19885:32:6"}]},"evmVersion":"paris","externalReferences":[{"declaration":1730,"isOffset":false,"isSlot":false,"src":"19635:4:6","valueSize":1},{"declaration":1730,"isOffset":false,"isSlot":false,"src":"19804:4:6","valueSize":1},{"declaration":1730,"isOffset":false,"isSlot":false,"src":"19911:4:6","valueSize":1},{"declaration":1716,"isOffset":false,"isSlot":false,"src":"19464:6:6","valueSize":1},{"declaration":1716,"isOffset":false,"isSlot":false,"src":"19617:6:6","valueSize":1},{"declaration":1716,"isOffset":false,"isSlot":false,"src":"19796:6:6","valueSize":1},{"declaration":1714,"isOffset":false,"isSlot":false,"src":"19567:7:6","valueSize":1}],"flags":["memory-safe"],"id":1748,"nodeType":"InlineAssembly","src":"19406:521:6"}]},"documentation":{"id":1705,"nodeType":"StructuredDocumentation","src":"18914:88:6","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":1750,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:6","nodeType":"FunctionDefinition","parameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1707,"mutability":"mutable","name":"b","nameLocation":"19048:1:6","nodeType":"VariableDeclaration","scope":1750,"src":"19035:14:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1706,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1709,"mutability":"mutable","name":"e","nameLocation":"19072:1:6","nodeType":"VariableDeclaration","scope":1750,"src":"19059:14:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1708,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1711,"mutability":"mutable","name":"m","nameLocation":"19096:1:6","nodeType":"VariableDeclaration","scope":1750,"src":"19083:14:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1710,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:6"},"returnParameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"success","nameLocation":"19132:7:6","nodeType":"VariableDeclaration","scope":1750,"src":"19127:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1713,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1716,"mutability":"mutable","name":"result","nameLocation":"19154:6:6","nodeType":"VariableDeclaration","scope":1750,"src":"19141:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1715,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:6"},"scope":2458,"src":"19007:926:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1782,"nodeType":"Block","src":"20088:176:6","statements":[{"body":{"id":1778,"nodeType":"Block","src":"20145:92:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1769,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"20163:9:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1771,"indexExpression":{"id":1770,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"20173:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1777,"nodeType":"IfStatement","src":"20159:68:6","trueBody":{"id":1776,"nodeType":"Block","src":"20182:45:6","statements":[{"expression":{"hexValue":"66616c7365","id":1774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1757,"id":1775,"nodeType":"Return","src":"20200:12:6"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1762,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"20118:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1763,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"20122:9:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:6","memberName":"length","nodeType":"MemberAccess","src":"20122:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1779,"initializationExpression":{"assignments":[1759],"declarations":[{"constant":false,"id":1759,"mutability":"mutable","name":"i","nameLocation":"20111:1:6","nodeType":"VariableDeclaration","scope":1779,"src":"20103:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1758,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1761,"initialValue":{"hexValue":"30","id":1760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:6"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:6","subExpression":{"id":1766,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"20142:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1768,"nodeType":"ExpressionStatement","src":"20140:3:6"},"nodeType":"ForStatement","src":"20098:139:6"},{"expression":{"hexValue":"74727565","id":1780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1757,"id":1781,"nodeType":"Return","src":"20246:11:6"}]},"documentation":{"id":1751,"nodeType":"StructuredDocumentation","src":"19939:72:6","text":" @dev Returns whether the provided byte array is zero."},"id":1783,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:6","nodeType":"FunctionDefinition","parameters":{"id":1754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1753,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:6","nodeType":"VariableDeclaration","scope":1783,"src":"20036:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1752,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:6"},"returnParameters":{"id":1757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1783,"src":"20082:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1755,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:6"},"scope":2458,"src":"20016:248:6","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2001,"nodeType":"Block","src":"20624:5124:6","statements":[{"id":2000,"nodeType":"UncheckedBlock","src":"20634:5108:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1791,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"20728:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":1792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1797,"nodeType":"IfStatement","src":"20724:53:6","trueBody":{"id":1796,"nodeType":"Block","src":"20736:41:6","statements":[{"expression":{"id":1794,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"20761:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1790,"id":1795,"nodeType":"Return","src":"20754:8:6"}]}},{"assignments":[1799],"declarations":[{"constant":false,"id":1799,"mutability":"mutable","name":"aa","nameLocation":"21712:2:6","nodeType":"VariableDeclaration","scope":2000,"src":"21704:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1798,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1801,"initialValue":{"id":1800,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"21717:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:6"},{"assignments":[1803],"declarations":[{"constant":false,"id":1803,"mutability":"mutable","name":"xn","nameLocation":"21740:2:6","nodeType":"VariableDeclaration","scope":2000,"src":"21732:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1802,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1805,"initialValue":{"hexValue":"31","id":1804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1806,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"21765:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":1809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":1808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:6","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":1810,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:6","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1821,"nodeType":"IfStatement","src":"21761:92:6","trueBody":{"id":1820,"nodeType":"Block","src":"21783:70:6","statements":[{"expression":{"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1812,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"21801:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1815,"nodeType":"ExpressionStatement","src":"21801:10:6"},{"expression":{"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1816,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"21829:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":1817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1819,"nodeType":"ExpressionStatement","src":"21829:9:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1822,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"21870:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":1825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":1824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":1826,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1837,"nodeType":"IfStatement","src":"21866:90:6","trueBody":{"id":1836,"nodeType":"Block","src":"21887:69:6","statements":[{"expression":{"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1828,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"21905:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1831,"nodeType":"ExpressionStatement","src":"21905:9:6"},{"expression":{"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1832,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"21932:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":1833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1835,"nodeType":"ExpressionStatement","src":"21932:9:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1838,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"21973:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":1841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":1840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:6","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":1842,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:6","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1853,"nodeType":"IfStatement","src":"21969:90:6","trueBody":{"id":1852,"nodeType":"Block","src":"21990:69:6","statements":[{"expression":{"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1844,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"22008:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1847,"nodeType":"ExpressionStatement","src":"22008:9:6"},{"expression":{"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1848,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"22035:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":1849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1851,"nodeType":"ExpressionStatement","src":"22035:9:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1854,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"22076:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":1857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":1856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:6","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":1858,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:6","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1869,"nodeType":"IfStatement","src":"22072:89:6","trueBody":{"id":1868,"nodeType":"Block","src":"22093:68:6","statements":[{"expression":{"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1860,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"22111:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1863,"nodeType":"ExpressionStatement","src":"22111:9:6"},{"expression":{"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1864,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"22138:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":1865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1867,"nodeType":"ExpressionStatement","src":"22138:8:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1870,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"22178:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:6","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1874,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:6","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1885,"nodeType":"IfStatement","src":"22174:87:6","trueBody":{"id":1884,"nodeType":"Block","src":"22194:67:6","statements":[{"expression":{"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1876,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"22212:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1879,"nodeType":"ExpressionStatement","src":"22212:8:6"},{"expression":{"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1880,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"22238:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":1881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1883,"nodeType":"ExpressionStatement","src":"22238:8:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1886,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"22278:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":1889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":1888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":1890,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1901,"nodeType":"IfStatement","src":"22274:87:6","trueBody":{"id":1900,"nodeType":"Block","src":"22294:67:6","statements":[{"expression":{"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1892,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"22312:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1895,"nodeType":"ExpressionStatement","src":"22312:8:6"},{"expression":{"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1896,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"22338:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":1897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1899,"nodeType":"ExpressionStatement","src":"22338:8:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1902,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"22378:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":1905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":1906,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1913,"nodeType":"IfStatement","src":"22374:61:6","trueBody":{"id":1912,"nodeType":"Block","src":"22394:41:6","statements":[{"expression":{"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1908,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"22412:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":1909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1911,"nodeType":"ExpressionStatement","src":"22412:8:6"}]}},{"expression":{"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1914,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"22855:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:6","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1916,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"22865:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1918,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1922,"nodeType":"ExpressionStatement","src":"22855:18:6"},{"expression":{"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1923,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"24760:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1924,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"24766:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1925,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"24771:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1926,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"24775:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1929,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1933,"nodeType":"ExpressionStatement","src":"24760:23:6"},{"expression":{"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1934,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"24869:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1935,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"24875:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1936,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"24880:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1937,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"24884:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1940,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1944,"nodeType":"ExpressionStatement","src":"24869:23:6"},{"expression":{"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1945,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"24980:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1946,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"24986:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1947,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"24991:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1948,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"24995:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1951,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1955,"nodeType":"ExpressionStatement","src":"24980:23:6"},{"expression":{"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1956,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"25089:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1957,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"25095:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1958,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"25100:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1959,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"25104:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1962,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1966,"nodeType":"ExpressionStatement","src":"25089:23:6"},{"expression":{"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1967,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"25199:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1968,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"25205:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1969,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"25210:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1970,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"25214:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1973,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1977,"nodeType":"ExpressionStatement","src":"25199:23:6"},{"expression":{"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1978,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"25309:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1979,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"25315:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1980,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"25320:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1981,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"25324:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1984,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1988,"nodeType":"ExpressionStatement","src":"25309:23:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1989,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"25698:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1992,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"25719:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1993,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"25724:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1994,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"25728:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1990,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"25703:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4223_$","typeString":"type(library SafeCast)"}},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4222,"src":"25703:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1790,"id":1999,"nodeType":"Return","src":"25691:40:6"}]}]},"documentation":{"id":1784,"nodeType":"StructuredDocumentation","src":"20270:292:6","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":2002,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:6","nodeType":"FunctionDefinition","parameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1786,"mutability":"mutable","name":"a","nameLocation":"20589:1:6","nodeType":"VariableDeclaration","scope":2002,"src":"20581:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1785,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:6"},"returnParameters":{"id":1790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2002,"src":"20615:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1788,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:6"},"scope":2458,"src":"20567:5181:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2035,"nodeType":"Block","src":"25921:171:6","statements":[{"id":2034,"nodeType":"UncheckedBlock","src":"25931:155:6","statements":[{"assignments":[2014],"declarations":[{"constant":false,"id":2014,"mutability":"mutable","name":"result","nameLocation":"25963:6:6","nodeType":"VariableDeclaration","scope":2034,"src":"25955:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2013,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2018,"initialValue":{"arguments":[{"id":2016,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"25977:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2015,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2002,2036],"referencedDeclaration":2002,"src":"25972:4:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2019,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"26000:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2023,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"26042:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$849","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$849","typeString":"enum Math.Rounding"}],"id":2022,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"26025:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$849_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2025,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"26055:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2026,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"26064:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2028,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"26073:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2020,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"26009:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4223_$","typeString":"type(library SafeCast)"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4222,"src":"26009:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2012,"id":2033,"nodeType":"Return","src":"25993:82:6"}]}]},"documentation":{"id":2003,"nodeType":"StructuredDocumentation","src":"25754:86:6","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":2036,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:6","nodeType":"FunctionDefinition","parameters":{"id":2009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2005,"mutability":"mutable","name":"a","nameLocation":"25867:1:6","nodeType":"VariableDeclaration","scope":2036,"src":"25859:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2004,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2008,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:6","nodeType":"VariableDeclaration","scope":2036,"src":"25870:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$849","typeString":"enum Math.Rounding"},"typeName":{"id":2007,"nodeType":"UserDefinedTypeName","pathNode":{"id":2006,"name":"Rounding","nameLocations":["25870:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":849,"src":"25870:8:6"},"referencedDeclaration":849,"src":"25870:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$849","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:6"},"returnParameters":{"id":2012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2036,"src":"25912:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2010,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:6"},"scope":2458,"src":"25845:247:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2126,"nodeType":"Block","src":"26281:2334:6","statements":[{"expression":{"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2044,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"26363:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2047,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"26383:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":2048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:6","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2045,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"26367:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4223_$","typeString":"type(library SafeCast)"}},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4222,"src":"26367:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":2051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:6","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2054,"nodeType":"ExpressionStatement","src":"26363:64:6"},{"expression":{"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2055,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"26503:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2058,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"26525:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2059,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"26530:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2061,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2056,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"26508:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4223_$","typeString":"type(library SafeCast)"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4222,"src":"26508:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":2065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:6","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2068,"nodeType":"ExpressionStatement","src":"26503:56:6"},{"expression":{"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2069,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"26634:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2072,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"26656:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2073,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"26661:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2075,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":2076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:6","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2070,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"26639:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4223_$","typeString":"type(library SafeCast)"}},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4222,"src":"26639:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:6","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2082,"nodeType":"ExpressionStatement","src":"26634:48:6"},{"expression":{"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2083,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"26757:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2086,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"26779:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2087,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"26784:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2089,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":2090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:6","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2084,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"26762:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4223_$","typeString":"type(library SafeCast)"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4222,"src":"26762:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":2093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2096,"nodeType":"ExpressionStatement","src":"26757:44:6"},{"expression":{"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2097,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"26874:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2100,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"26896:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2101,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"26901:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2103,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":2104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:6","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2098,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"26879:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4223_$","typeString":"type(library SafeCast)"}},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4222,"src":"26879:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:6","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2110,"nodeType":"ExpressionStatement","src":"26874:42:6"},{"expression":{"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2111,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"26988:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2114,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"27010:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2115,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"27015:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2117,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":2118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:6","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2112,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"26993:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4223_$","typeString":"type(library SafeCast)"}},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4222,"src":"26993:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":2121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2124,"nodeType":"ExpressionStatement","src":"26988:41:6"},{"AST":{"nativeSrc":"28490:119:6","nodeType":"YulBlock","src":"28490:119:6","statements":[{"nativeSrc":"28504:95:6","nodeType":"YulAssignment","src":"28504:95:6","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:6","nodeType":"YulIdentifier","src":"28512:1:6"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:6","nodeType":"YulIdentifier","src":"28524:1:6"},{"name":"x","nativeSrc":"28527:1:6","nodeType":"YulIdentifier","src":"28527:1:6"}],"functionName":{"name":"shr","nativeSrc":"28520:3:6","nodeType":"YulIdentifier","src":"28520:3:6"},"nativeSrc":"28520:9:6","nodeType":"YulFunctionCall","src":"28520:9:6"},{"kind":"number","nativeSrc":"28531:66:6","nodeType":"YulLiteral","src":"28531:66:6","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:6","nodeType":"YulIdentifier","src":"28515:4:6"},"nativeSrc":"28515:83:6","nodeType":"YulFunctionCall","src":"28515:83:6"}],"functionName":{"name":"or","nativeSrc":"28509:2:6","nodeType":"YulIdentifier","src":"28509:2:6"},"nativeSrc":"28509:90:6","nodeType":"YulFunctionCall","src":"28509:90:6"},"variableNames":[{"name":"r","nativeSrc":"28504:1:6","nodeType":"YulIdentifier","src":"28504:1:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2042,"isOffset":false,"isSlot":false,"src":"28504:1:6","valueSize":1},{"declaration":2042,"isOffset":false,"isSlot":false,"src":"28512:1:6","valueSize":1},{"declaration":2042,"isOffset":false,"isSlot":false,"src":"28524:1:6","valueSize":1},{"declaration":2039,"isOffset":false,"isSlot":false,"src":"28527:1:6","valueSize":1}],"flags":["memory-safe"],"id":2125,"nodeType":"InlineAssembly","src":"28465:144:6"}]},"documentation":{"id":2037,"nodeType":"StructuredDocumentation","src":"26098:119:6","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2127,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:6","nodeType":"FunctionDefinition","parameters":{"id":2040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2039,"mutability":"mutable","name":"x","nameLocation":"26244:1:6","nodeType":"VariableDeclaration","scope":2127,"src":"26236:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2038,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:6"},"returnParameters":{"id":2043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2042,"mutability":"mutable","name":"r","nameLocation":"26278:1:6","nodeType":"VariableDeclaration","scope":2127,"src":"26270:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2041,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:6"},"scope":2458,"src":"26222:2393:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2160,"nodeType":"Block","src":"28848:175:6","statements":[{"id":2159,"nodeType":"UncheckedBlock","src":"28858:159:6","statements":[{"assignments":[2139],"declarations":[{"constant":false,"id":2139,"mutability":"mutable","name":"result","nameLocation":"28890:6:6","nodeType":"VariableDeclaration","scope":2159,"src":"28882:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2138,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2143,"initialValue":{"arguments":[{"id":2141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"28904:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2140,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2127,2161],"referencedDeclaration":2127,"src":"28899:4:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2144,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"28931:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2148,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"28973:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$849","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$849","typeString":"enum Math.Rounding"}],"id":2147,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"28956:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$849_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2151,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"28991:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"29000:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2145,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"28940:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4223_$","typeString":"type(library SafeCast)"}},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4222,"src":"28940:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2137,"id":2158,"nodeType":"Return","src":"28924:82:6"}]}]},"documentation":{"id":2128,"nodeType":"StructuredDocumentation","src":"28621:142:6","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2161,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:6","nodeType":"FunctionDefinition","parameters":{"id":2134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2130,"mutability":"mutable","name":"value","nameLocation":"28790:5:6","nodeType":"VariableDeclaration","scope":2161,"src":"28782:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2129,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2133,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:6","nodeType":"VariableDeclaration","scope":2161,"src":"28797:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$849","typeString":"enum Math.Rounding"},"typeName":{"id":2132,"nodeType":"UserDefinedTypeName","pathNode":{"id":2131,"name":"Rounding","nameLocations":["28797:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":849,"src":"28797:8:6"},"referencedDeclaration":849,"src":"28797:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$849","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:6"},"returnParameters":{"id":2137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2161,"src":"28839:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2135,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:6"},"scope":2458,"src":"28768:255:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2289,"nodeType":"Block","src":"29216:854:6","statements":[{"assignments":[2170],"declarations":[{"constant":false,"id":2170,"mutability":"mutable","name":"result","nameLocation":"29234:6:6","nodeType":"VariableDeclaration","scope":2289,"src":"29226:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2169,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2172,"initialValue":{"hexValue":"30","id":2171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:6"},{"id":2286,"nodeType":"UncheckedBlock","src":"29254:787:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"29282:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:6","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2189,"nodeType":"IfStatement","src":"29278:103:6","trueBody":{"id":2188,"nodeType":"Block","src":"29301:80:6","statements":[{"expression":{"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"29319:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:6","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2183,"nodeType":"ExpressionStatement","src":"29319:17:6"},{"expression":{"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2184,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"29354:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2187,"nodeType":"ExpressionStatement","src":"29354:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"29398:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:6","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2206,"nodeType":"IfStatement","src":"29394:103:6","trueBody":{"id":2205,"nodeType":"Block","src":"29417:80:6","statements":[{"expression":{"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"29435:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:6","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2200,"nodeType":"ExpressionStatement","src":"29435:17:6"},{"expression":{"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2201,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"29470:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2204,"nodeType":"ExpressionStatement","src":"29470:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"29514:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:6","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2223,"nodeType":"IfStatement","src":"29510:103:6","trueBody":{"id":2222,"nodeType":"Block","src":"29533:80:6","statements":[{"expression":{"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"29551:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:6","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2217,"nodeType":"ExpressionStatement","src":"29551:17:6"},{"expression":{"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2218,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"29586:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2221,"nodeType":"ExpressionStatement","src":"29586:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"29630:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:6","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2240,"nodeType":"IfStatement","src":"29626:100:6","trueBody":{"id":2239,"nodeType":"Block","src":"29648:78:6","statements":[{"expression":{"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"29666:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:6","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2234,"nodeType":"ExpressionStatement","src":"29666:16:6"},{"expression":{"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2235,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"29700:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2238,"nodeType":"ExpressionStatement","src":"29700:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"29743:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:6","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2257,"nodeType":"IfStatement","src":"29739:100:6","trueBody":{"id":2256,"nodeType":"Block","src":"29761:78:6","statements":[{"expression":{"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"29779:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:6","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2251,"nodeType":"ExpressionStatement","src":"29779:16:6"},{"expression":{"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2252,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"29813:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2255,"nodeType":"ExpressionStatement","src":"29813:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"29856:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:6","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2274,"nodeType":"IfStatement","src":"29852:100:6","trueBody":{"id":2273,"nodeType":"Block","src":"29874:78:6","statements":[{"expression":{"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"29892:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:6","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2268,"nodeType":"ExpressionStatement","src":"29892:16:6"},{"expression":{"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2269,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"29926:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2272,"nodeType":"ExpressionStatement","src":"29926:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"29969:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2285,"nodeType":"IfStatement","src":"29965:66:6","trueBody":{"id":2284,"nodeType":"Block","src":"29987:44:6","statements":[{"expression":{"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2280,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"30005:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2283,"nodeType":"ExpressionStatement","src":"30005:11:6"}]}}]},{"expression":{"id":2287,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"30057:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2168,"id":2288,"nodeType":"Return","src":"30050:13:6"}]},"documentation":{"id":2162,"nodeType":"StructuredDocumentation","src":"29029:120:6","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2290,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:6","nodeType":"FunctionDefinition","parameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2164,"mutability":"mutable","name":"value","nameLocation":"29177:5:6","nodeType":"VariableDeclaration","scope":2290,"src":"29169:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2163,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:6"},"returnParameters":{"id":2168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2290,"src":"29207:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2166,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:6"},"scope":2458,"src":"29154:916:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2323,"nodeType":"Block","src":"30305:177:6","statements":[{"id":2322,"nodeType":"UncheckedBlock","src":"30315:161:6","statements":[{"assignments":[2302],"declarations":[{"constant":false,"id":2302,"mutability":"mutable","name":"result","nameLocation":"30347:6:6","nodeType":"VariableDeclaration","scope":2322,"src":"30339:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2301,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2306,"initialValue":{"arguments":[{"id":2304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"30362:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2303,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2290,2324],"referencedDeclaration":2290,"src":"30356:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2307,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"30389:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2311,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"30431:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$849","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$849","typeString":"enum Math.Rounding"}],"id":2310,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"30414:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$849_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2314,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"30450:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"30459:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2308,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"30398:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4223_$","typeString":"type(library SafeCast)"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4222,"src":"30398:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2300,"id":2321,"nodeType":"Return","src":"30382:83:6"}]}]},"documentation":{"id":2291,"nodeType":"StructuredDocumentation","src":"30076:143:6","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2324,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:6","nodeType":"FunctionDefinition","parameters":{"id":2297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2293,"mutability":"mutable","name":"value","nameLocation":"30247:5:6","nodeType":"VariableDeclaration","scope":2324,"src":"30239:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2292,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2296,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:6","nodeType":"VariableDeclaration","scope":2324,"src":"30254:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$849","typeString":"enum Math.Rounding"},"typeName":{"id":2295,"nodeType":"UserDefinedTypeName","pathNode":{"id":2294,"name":"Rounding","nameLocations":["30254:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":849,"src":"30254:8:6"},"referencedDeclaration":849,"src":"30254:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$849","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:6"},"returnParameters":{"id":2300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2324,"src":"30296:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2298,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:6"},"scope":2458,"src":"30224:258:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2400,"nodeType":"Block","src":"30800:675:6","statements":[{"expression":{"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2332,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"30882:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2335,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"30902:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":2336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:6","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2333,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"30886:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4223_$","typeString":"type(library SafeCast)"}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4222,"src":"30886:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":2339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:6","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2342,"nodeType":"ExpressionStatement","src":"30882:64:6"},{"expression":{"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2343,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"31022:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2346,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"31044:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2347,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"31049:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2349,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":2350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2344,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"31027:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4223_$","typeString":"type(library SafeCast)"}},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4222,"src":"31027:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":2353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:6","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2356,"nodeType":"ExpressionStatement","src":"31022:56:6"},{"expression":{"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2357,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"31153:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2360,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"31175:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2361,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"31180:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2363,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":2364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:6","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2358,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"31158:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4223_$","typeString":"type(library SafeCast)"}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4222,"src":"31158:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:6","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2370,"nodeType":"ExpressionStatement","src":"31153:48:6"},{"expression":{"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2371,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"31276:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2374,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"31298:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2375,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"31303:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2377,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":2378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:6","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2372,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"31281:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4223_$","typeString":"type(library SafeCast)"}},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4222,"src":"31281:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":2381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2384,"nodeType":"ExpressionStatement","src":"31276:44:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2385,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"31426:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":2386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:6","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2388,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2391,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"31453:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2392,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"31458:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2394,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":2395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:6","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2389,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"31436:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4223_$","typeString":"type(library SafeCast)"}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4222,"src":"31436:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2331,"id":2399,"nodeType":"Return","src":"31418:50:6"}]},"documentation":{"id":2325,"nodeType":"StructuredDocumentation","src":"30488:246:6","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2401,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:6","nodeType":"FunctionDefinition","parameters":{"id":2328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2327,"mutability":"mutable","name":"x","nameLocation":"30763:1:6","nodeType":"VariableDeclaration","scope":2401,"src":"30755:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2326,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:6"},"returnParameters":{"id":2331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2330,"mutability":"mutable","name":"r","nameLocation":"30797:1:6","nodeType":"VariableDeclaration","scope":2401,"src":"30789:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2329,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:6"},"scope":2458,"src":"30739:736:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2437,"nodeType":"Block","src":"31712:184:6","statements":[{"id":2436,"nodeType":"UncheckedBlock","src":"31722:168:6","statements":[{"assignments":[2413],"declarations":[{"constant":false,"id":2413,"mutability":"mutable","name":"result","nameLocation":"31754:6:6","nodeType":"VariableDeclaration","scope":2436,"src":"31746:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2412,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2417,"initialValue":{"arguments":[{"id":2415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"31770:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2414,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2401,2438],"referencedDeclaration":2401,"src":"31763:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2418,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"31797:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2422,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"31839:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$849","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$849","typeString":"enum Math.Rounding"}],"id":2421,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"31822:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$849_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2425,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"31858:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:6","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2428,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"31873:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2419,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"31806:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4223_$","typeString":"type(library SafeCast)"}},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4222,"src":"31806:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2411,"id":2435,"nodeType":"Return","src":"31790:89:6"}]}]},"documentation":{"id":2402,"nodeType":"StructuredDocumentation","src":"31481:144:6","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2438,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:6","nodeType":"FunctionDefinition","parameters":{"id":2408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2404,"mutability":"mutable","name":"value","nameLocation":"31654:5:6","nodeType":"VariableDeclaration","scope":2438,"src":"31646:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2403,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2407,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:6","nodeType":"VariableDeclaration","scope":2438,"src":"31661:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$849","typeString":"enum Math.Rounding"},"typeName":{"id":2406,"nodeType":"UserDefinedTypeName","pathNode":{"id":2405,"name":"Rounding","nameLocations":["31661:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":849,"src":"31661:8:6"},"referencedDeclaration":849,"src":"31661:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$849","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:6"},"returnParameters":{"id":2411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2438,"src":"31703:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2409,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:6"},"scope":2458,"src":"31630:266:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2456,"nodeType":"Block","src":"32094:48:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2449,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"32117:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$849","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$849","typeString":"enum Math.Rounding"}],"id":2448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2447,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:6","typeDescriptions":{}}},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":2451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2446,"id":2455,"nodeType":"Return","src":"32104:31:6"}]},"documentation":{"id":2439,"nodeType":"StructuredDocumentation","src":"31902:113:6","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":2457,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:6","nodeType":"FunctionDefinition","parameters":{"id":2443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2442,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:6","nodeType":"VariableDeclaration","scope":2457,"src":"32046:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$849","typeString":"enum Math.Rounding"},"typeName":{"id":2441,"nodeType":"UserDefinedTypeName","pathNode":{"id":2440,"name":"Rounding","nameLocations":["32046:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":849,"src":"32046:8:6"},"referencedDeclaration":849,"src":"32046:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$849","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:6"},"returnParameters":{"id":2446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2457,"src":"32088:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2444,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:6"},"scope":2458,"src":"32020:122:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2459,"src":"281:31863:6","usedErrors":[],"usedEvents":[]}],"src":"103:32042:6"},"id":6},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[4223]},"id":4224,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2460,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":2461,"nodeType":"StructuredDocumentation","src":"218:550:7","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":4223,"linearizedBaseContracts":[4223],"name":"SafeCast","nameLocation":"777:8:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2462,"nodeType":"StructuredDocumentation","src":"792:68:7","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":2468,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:7","nodeType":"ErrorDefinition","parameters":{"id":2467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2464,"mutability":"mutable","name":"bits","nameLocation":"908:4:7","nodeType":"VariableDeclaration","scope":2468,"src":"902:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2463,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2466,"mutability":"mutable","name":"value","nameLocation":"922:5:7","nodeType":"VariableDeclaration","scope":2468,"src":"914:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2465,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:7"},"src":"865:64:7"},{"documentation":{"id":2469,"nodeType":"StructuredDocumentation","src":"935:75:7","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":2473,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:7","nodeType":"ErrorDefinition","parameters":{"id":2472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2471,"mutability":"mutable","name":"value","nameLocation":"1056:5:7","nodeType":"VariableDeclaration","scope":2473,"src":"1049:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2470,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:7"},"src":"1015:48:7"},{"documentation":{"id":2474,"nodeType":"StructuredDocumentation","src":"1069:67:7","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":2480,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:7","nodeType":"ErrorDefinition","parameters":{"id":2479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2476,"mutability":"mutable","name":"bits","nameLocation":"1183:4:7","nodeType":"VariableDeclaration","scope":2480,"src":"1177:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2475,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2478,"mutability":"mutable","name":"value","nameLocation":"1196:5:7","nodeType":"VariableDeclaration","scope":2480,"src":"1189:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2477,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:7"},"src":"1141:62:7"},{"documentation":{"id":2481,"nodeType":"StructuredDocumentation","src":"1209:75:7","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":2485,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:7","nodeType":"ErrorDefinition","parameters":{"id":2484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2483,"mutability":"mutable","name":"value","nameLocation":"1331:5:7","nodeType":"VariableDeclaration","scope":2485,"src":"1323:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2482,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:7"},"src":"1289:49:7"},{"body":{"id":2512,"nodeType":"Block","src":"1695:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"1709:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":2495,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":2494,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:7","memberName":"max","nodeType":"MemberAccess","src":"1717:17:7","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2506,"nodeType":"IfStatement","src":"1705:105:7","trueBody":{"id":2505,"nodeType":"Block","src":"1736:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":2501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:7","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":2502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"1793:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2500,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"1757:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2504,"nodeType":"RevertStatement","src":"1750:49:7"}]}},{"expression":{"arguments":[{"id":2509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"1834:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":2507,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:7","typeDescriptions":{}}},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":2492,"id":2511,"nodeType":"Return","src":"1819:21:7"}]},"documentation":{"id":2486,"nodeType":"StructuredDocumentation","src":"1344:280:7","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":2513,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:7","nodeType":"FunctionDefinition","parameters":{"id":2489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2488,"mutability":"mutable","name":"value","nameLocation":"1656:5:7","nodeType":"VariableDeclaration","scope":2513,"src":"1648:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2487,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:7"},"returnParameters":{"id":2492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2513,"src":"1686:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":2490,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:7","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:7"},"scope":4223,"src":"1629:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2540,"nodeType":"Block","src":"2204:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"2218:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":2523,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":2522,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":2526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:7","memberName":"max","nodeType":"MemberAccess","src":"2226:17:7","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2534,"nodeType":"IfStatement","src":"2214:105:7","trueBody":{"id":2533,"nodeType":"Block","src":"2245:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":2529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:7","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":2530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"2302:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2528,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"2266:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2532,"nodeType":"RevertStatement","src":"2259:49:7"}]}},{"expression":{"arguments":[{"id":2537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"2343:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":2535,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:7","typeDescriptions":{}}},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":2520,"id":2539,"nodeType":"Return","src":"2328:21:7"}]},"documentation":{"id":2514,"nodeType":"StructuredDocumentation","src":"1853:280:7","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":2541,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:7","nodeType":"FunctionDefinition","parameters":{"id":2517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2516,"mutability":"mutable","name":"value","nameLocation":"2165:5:7","nodeType":"VariableDeclaration","scope":2541,"src":"2157:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2515,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:7"},"returnParameters":{"id":2520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2541,"src":"2195:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":2518,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:7","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:7"},"scope":4223,"src":"2138:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2568,"nodeType":"Block","src":"2713:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"2727:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":2551,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":2550,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":2554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:7","memberName":"max","nodeType":"MemberAccess","src":"2735:17:7","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2562,"nodeType":"IfStatement","src":"2723:105:7","trueBody":{"id":2561,"nodeType":"Block","src":"2754:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":2557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:7","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":2558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"2811:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2556,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"2775:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2560,"nodeType":"RevertStatement","src":"2768:49:7"}]}},{"expression":{"arguments":[{"id":2565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"2852:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":2563,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:7","typeDescriptions":{}}},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":2548,"id":2567,"nodeType":"Return","src":"2837:21:7"}]},"documentation":{"id":2542,"nodeType":"StructuredDocumentation","src":"2362:280:7","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":2569,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:7","nodeType":"FunctionDefinition","parameters":{"id":2545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2544,"mutability":"mutable","name":"value","nameLocation":"2674:5:7","nodeType":"VariableDeclaration","scope":2569,"src":"2666:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2543,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:7"},"returnParameters":{"id":2548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2569,"src":"2704:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":2546,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:7","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:7"},"scope":4223,"src":"2647:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2596,"nodeType":"Block","src":"3222:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"3236:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":2579,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":2578,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":2582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:7","memberName":"max","nodeType":"MemberAccess","src":"3244:17:7","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2590,"nodeType":"IfStatement","src":"3232:105:7","trueBody":{"id":2589,"nodeType":"Block","src":"3263:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":2585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:7","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":2586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"3320:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2584,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"3284:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2588,"nodeType":"RevertStatement","src":"3277:49:7"}]}},{"expression":{"arguments":[{"id":2593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"3361:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":2591,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:7","typeDescriptions":{}}},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":2576,"id":2595,"nodeType":"Return","src":"3346:21:7"}]},"documentation":{"id":2570,"nodeType":"StructuredDocumentation","src":"2871:280:7","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":2597,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:7","nodeType":"FunctionDefinition","parameters":{"id":2573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2572,"mutability":"mutable","name":"value","nameLocation":"3183:5:7","nodeType":"VariableDeclaration","scope":2597,"src":"3175:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2571,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:7"},"returnParameters":{"id":2576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2597,"src":"3213:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":2574,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:7","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:7"},"scope":4223,"src":"3156:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2624,"nodeType":"Block","src":"3731:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"3745:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":2607,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":2606,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":2610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:7","memberName":"max","nodeType":"MemberAccess","src":"3753:17:7","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2618,"nodeType":"IfStatement","src":"3741:105:7","trueBody":{"id":2617,"nodeType":"Block","src":"3772:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":2613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:7","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":2614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"3829:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2612,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"3793:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2616,"nodeType":"RevertStatement","src":"3786:49:7"}]}},{"expression":{"arguments":[{"id":2621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"3870:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":2619,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:7","typeDescriptions":{}}},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":2604,"id":2623,"nodeType":"Return","src":"3855:21:7"}]},"documentation":{"id":2598,"nodeType":"StructuredDocumentation","src":"3380:280:7","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":2625,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:7","nodeType":"FunctionDefinition","parameters":{"id":2601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2600,"mutability":"mutable","name":"value","nameLocation":"3692:5:7","nodeType":"VariableDeclaration","scope":2625,"src":"3684:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2599,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:7"},"returnParameters":{"id":2604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2625,"src":"3722:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":2602,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:7","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:7"},"scope":4223,"src":"3665:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2652,"nodeType":"Block","src":"4240:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"4254:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":2635,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":2634,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":2638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:7","memberName":"max","nodeType":"MemberAccess","src":"4262:17:7","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2646,"nodeType":"IfStatement","src":"4250:105:7","trueBody":{"id":2645,"nodeType":"Block","src":"4281:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":2641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:7","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":2642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"4338:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2640,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"4302:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2644,"nodeType":"RevertStatement","src":"4295:49:7"}]}},{"expression":{"arguments":[{"id":2649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"4379:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":2647,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:7","typeDescriptions":{}}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":2632,"id":2651,"nodeType":"Return","src":"4364:21:7"}]},"documentation":{"id":2626,"nodeType":"StructuredDocumentation","src":"3889:280:7","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":2653,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:7","nodeType":"FunctionDefinition","parameters":{"id":2629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2628,"mutability":"mutable","name":"value","nameLocation":"4201:5:7","nodeType":"VariableDeclaration","scope":2653,"src":"4193:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2627,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:7"},"returnParameters":{"id":2632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2653,"src":"4231:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":2630,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:7","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:7"},"scope":4223,"src":"4174:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2680,"nodeType":"Block","src":"4749:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"4763:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":2663,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":2662,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":2666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:7","memberName":"max","nodeType":"MemberAccess","src":"4771:17:7","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2674,"nodeType":"IfStatement","src":"4759:105:7","trueBody":{"id":2673,"nodeType":"Block","src":"4790:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":2669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:7","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":2670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"4847:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2668,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"4811:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2672,"nodeType":"RevertStatement","src":"4804:49:7"}]}},{"expression":{"arguments":[{"id":2677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"4888:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":2675,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:7","typeDescriptions":{}}},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":2660,"id":2679,"nodeType":"Return","src":"4873:21:7"}]},"documentation":{"id":2654,"nodeType":"StructuredDocumentation","src":"4398:280:7","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":2681,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:7","nodeType":"FunctionDefinition","parameters":{"id":2657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2656,"mutability":"mutable","name":"value","nameLocation":"4710:5:7","nodeType":"VariableDeclaration","scope":2681,"src":"4702:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2655,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:7"},"returnParameters":{"id":2660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2659,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2681,"src":"4740:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":2658,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:7","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:7"},"scope":4223,"src":"4683:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2708,"nodeType":"Block","src":"5258:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"5272:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":2691,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":2690,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:7","memberName":"max","nodeType":"MemberAccess","src":"5280:17:7","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2702,"nodeType":"IfStatement","src":"5268:105:7","trueBody":{"id":2701,"nodeType":"Block","src":"5299:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":2697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:7","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":2698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"5356:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2696,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"5320:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2700,"nodeType":"RevertStatement","src":"5313:49:7"}]}},{"expression":{"arguments":[{"id":2705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"5397:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":2703,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:7","typeDescriptions":{}}},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":2688,"id":2707,"nodeType":"Return","src":"5382:21:7"}]},"documentation":{"id":2682,"nodeType":"StructuredDocumentation","src":"4907:280:7","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":2709,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:7","nodeType":"FunctionDefinition","parameters":{"id":2685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2684,"mutability":"mutable","name":"value","nameLocation":"5219:5:7","nodeType":"VariableDeclaration","scope":2709,"src":"5211:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2683,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:7"},"returnParameters":{"id":2688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2709,"src":"5249:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":2686,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:7","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:7"},"scope":4223,"src":"5192:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2736,"nodeType":"Block","src":"5767:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"5781:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":2719,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":2718,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":2722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:7","memberName":"max","nodeType":"MemberAccess","src":"5789:17:7","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2730,"nodeType":"IfStatement","src":"5777:105:7","trueBody":{"id":2729,"nodeType":"Block","src":"5808:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":2725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:7","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":2726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"5865:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2724,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"5829:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2728,"nodeType":"RevertStatement","src":"5822:49:7"}]}},{"expression":{"arguments":[{"id":2733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"5906:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":2731,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:7","typeDescriptions":{}}},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":2716,"id":2735,"nodeType":"Return","src":"5891:21:7"}]},"documentation":{"id":2710,"nodeType":"StructuredDocumentation","src":"5416:280:7","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":2737,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:7","nodeType":"FunctionDefinition","parameters":{"id":2713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2712,"mutability":"mutable","name":"value","nameLocation":"5728:5:7","nodeType":"VariableDeclaration","scope":2737,"src":"5720:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2711,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:7"},"returnParameters":{"id":2716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2737,"src":"5758:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":2714,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:7","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:7"},"scope":4223,"src":"5701:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2764,"nodeType":"Block","src":"6276:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"6290:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":2747,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":2746,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":2750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:7","memberName":"max","nodeType":"MemberAccess","src":"6298:17:7","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2758,"nodeType":"IfStatement","src":"6286:105:7","trueBody":{"id":2757,"nodeType":"Block","src":"6317:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:7","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":2754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"6374:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2752,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"6338:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2756,"nodeType":"RevertStatement","src":"6331:49:7"}]}},{"expression":{"arguments":[{"id":2761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"6415:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":2759,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:7","typeDescriptions":{}}},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":2744,"id":2763,"nodeType":"Return","src":"6400:21:7"}]},"documentation":{"id":2738,"nodeType":"StructuredDocumentation","src":"5925:280:7","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":2765,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:7","nodeType":"FunctionDefinition","parameters":{"id":2741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2740,"mutability":"mutable","name":"value","nameLocation":"6237:5:7","nodeType":"VariableDeclaration","scope":2765,"src":"6229:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2739,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:7"},"returnParameters":{"id":2744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2765,"src":"6267:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":2742,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:7","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:7"},"scope":4223,"src":"6210:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2792,"nodeType":"Block","src":"6785:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2773,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"6799:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":2775,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":2774,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":2778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:7","memberName":"max","nodeType":"MemberAccess","src":"6807:17:7","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2786,"nodeType":"IfStatement","src":"6795:105:7","trueBody":{"id":2785,"nodeType":"Block","src":"6826:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":2781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:7","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":2782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"6883:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2780,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"6847:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2784,"nodeType":"RevertStatement","src":"6840:49:7"}]}},{"expression":{"arguments":[{"id":2789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"6924:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":2787,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:7","typeDescriptions":{}}},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":2772,"id":2791,"nodeType":"Return","src":"6909:21:7"}]},"documentation":{"id":2766,"nodeType":"StructuredDocumentation","src":"6434:280:7","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":2793,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:7","nodeType":"FunctionDefinition","parameters":{"id":2769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2768,"mutability":"mutable","name":"value","nameLocation":"6746:5:7","nodeType":"VariableDeclaration","scope":2793,"src":"6738:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2767,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:7"},"returnParameters":{"id":2772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2793,"src":"6776:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":2770,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:7","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:7"},"scope":4223,"src":"6719:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2820,"nodeType":"Block","src":"7294:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"7308:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2803,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":2802,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":2806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:7","memberName":"max","nodeType":"MemberAccess","src":"7316:17:7","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2814,"nodeType":"IfStatement","src":"7304:105:7","trueBody":{"id":2813,"nodeType":"Block","src":"7335:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":2809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:7","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":2810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"7392:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2808,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"7356:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2812,"nodeType":"RevertStatement","src":"7349:49:7"}]}},{"expression":{"arguments":[{"id":2817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"7433:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2815,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:7","typeDescriptions":{}}},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":2800,"id":2819,"nodeType":"Return","src":"7418:21:7"}]},"documentation":{"id":2794,"nodeType":"StructuredDocumentation","src":"6943:280:7","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":2821,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:7","nodeType":"FunctionDefinition","parameters":{"id":2797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"mutability":"mutable","name":"value","nameLocation":"7255:5:7","nodeType":"VariableDeclaration","scope":2821,"src":"7247:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2795,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:7"},"returnParameters":{"id":2800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2821,"src":"7285:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2798,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:7","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:7"},"scope":4223,"src":"7228:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2848,"nodeType":"Block","src":"7803:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"7817:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":2831,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":2830,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:7","memberName":"max","nodeType":"MemberAccess","src":"7825:17:7","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2842,"nodeType":"IfStatement","src":"7813:105:7","trueBody":{"id":2841,"nodeType":"Block","src":"7844:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":2837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:7","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":2838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"7901:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2836,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"7865:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2840,"nodeType":"RevertStatement","src":"7858:49:7"}]}},{"expression":{"arguments":[{"id":2845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"7942:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":2843,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:7","typeDescriptions":{}}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":2828,"id":2847,"nodeType":"Return","src":"7927:21:7"}]},"documentation":{"id":2822,"nodeType":"StructuredDocumentation","src":"7452:280:7","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":2849,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:7","nodeType":"FunctionDefinition","parameters":{"id":2825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2824,"mutability":"mutable","name":"value","nameLocation":"7764:5:7","nodeType":"VariableDeclaration","scope":2849,"src":"7756:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2823,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:7"},"returnParameters":{"id":2828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2849,"src":"7794:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":2826,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:7","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:7"},"scope":4223,"src":"7737:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2876,"nodeType":"Block","src":"8312:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"8326:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":2859,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":2858,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":2862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:7","memberName":"max","nodeType":"MemberAccess","src":"8334:17:7","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2870,"nodeType":"IfStatement","src":"8322:105:7","trueBody":{"id":2869,"nodeType":"Block","src":"8353:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":2865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:7","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":2866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"8410:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2864,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"8374:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2868,"nodeType":"RevertStatement","src":"8367:49:7"}]}},{"expression":{"arguments":[{"id":2873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"8451:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":2871,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:7","typeDescriptions":{}}},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":2856,"id":2875,"nodeType":"Return","src":"8436:21:7"}]},"documentation":{"id":2850,"nodeType":"StructuredDocumentation","src":"7961:280:7","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":2877,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:7","nodeType":"FunctionDefinition","parameters":{"id":2853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2852,"mutability":"mutable","name":"value","nameLocation":"8273:5:7","nodeType":"VariableDeclaration","scope":2877,"src":"8265:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2851,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:7"},"returnParameters":{"id":2856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2877,"src":"8303:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":2854,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:7","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:7"},"scope":4223,"src":"8246:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2904,"nodeType":"Block","src":"8821:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"8835:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":2887,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":2886,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":2890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:7","memberName":"max","nodeType":"MemberAccess","src":"8843:17:7","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2898,"nodeType":"IfStatement","src":"8831:105:7","trueBody":{"id":2897,"nodeType":"Block","src":"8862:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":2893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:7","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":2894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"8919:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2892,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"8883:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2896,"nodeType":"RevertStatement","src":"8876:49:7"}]}},{"expression":{"arguments":[{"id":2901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"8960:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":2899,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:7","typeDescriptions":{}}},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":2884,"id":2903,"nodeType":"Return","src":"8945:21:7"}]},"documentation":{"id":2878,"nodeType":"StructuredDocumentation","src":"8470:280:7","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":2905,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:7","nodeType":"FunctionDefinition","parameters":{"id":2881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2880,"mutability":"mutable","name":"value","nameLocation":"8782:5:7","nodeType":"VariableDeclaration","scope":2905,"src":"8774:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2879,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:7"},"returnParameters":{"id":2884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2905,"src":"8812:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":2882,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:7","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:7"},"scope":4223,"src":"8755:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2932,"nodeType":"Block","src":"9330:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"9344:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":2915,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":2914,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":2918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:7","memberName":"max","nodeType":"MemberAccess","src":"9352:17:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2926,"nodeType":"IfStatement","src":"9340:105:7","trueBody":{"id":2925,"nodeType":"Block","src":"9371:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":2921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":2922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"9428:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2920,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"9392:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2924,"nodeType":"RevertStatement","src":"9385:49:7"}]}},{"expression":{"arguments":[{"id":2929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"9469:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":2927,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:7","typeDescriptions":{}}},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":2912,"id":2931,"nodeType":"Return","src":"9454:21:7"}]},"documentation":{"id":2906,"nodeType":"StructuredDocumentation","src":"8979:280:7","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":2933,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:7","nodeType":"FunctionDefinition","parameters":{"id":2909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2908,"mutability":"mutable","name":"value","nameLocation":"9291:5:7","nodeType":"VariableDeclaration","scope":2933,"src":"9283:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2907,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:7"},"returnParameters":{"id":2912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2933,"src":"9321:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2910,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:7"},"scope":4223,"src":"9264:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2960,"nodeType":"Block","src":"9839:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"9853:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":2943,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":2942,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":2946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:7","memberName":"max","nodeType":"MemberAccess","src":"9861:17:7","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2954,"nodeType":"IfStatement","src":"9849:105:7","trueBody":{"id":2953,"nodeType":"Block","src":"9880:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":2949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:7","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":2950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"9937:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2948,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"9901:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2952,"nodeType":"RevertStatement","src":"9894:49:7"}]}},{"expression":{"arguments":[{"id":2957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"9978:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":2955,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:7","typeDescriptions":{}}},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":2940,"id":2959,"nodeType":"Return","src":"9963:21:7"}]},"documentation":{"id":2934,"nodeType":"StructuredDocumentation","src":"9488:280:7","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":2961,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:7","nodeType":"FunctionDefinition","parameters":{"id":2937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2936,"mutability":"mutable","name":"value","nameLocation":"9800:5:7","nodeType":"VariableDeclaration","scope":2961,"src":"9792:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2935,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:7"},"returnParameters":{"id":2940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2961,"src":"9830:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":2938,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:7","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:7"},"scope":4223,"src":"9773:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2988,"nodeType":"Block","src":"10348:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"10362:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":2971,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":2970,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":2974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:7","memberName":"max","nodeType":"MemberAccess","src":"10370:17:7","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2982,"nodeType":"IfStatement","src":"10358:105:7","trueBody":{"id":2981,"nodeType":"Block","src":"10389:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":2977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:7","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":2978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"10446:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2976,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"10410:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2980,"nodeType":"RevertStatement","src":"10403:49:7"}]}},{"expression":{"arguments":[{"id":2985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"10487:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":2983,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:7","typeDescriptions":{}}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":2968,"id":2987,"nodeType":"Return","src":"10472:21:7"}]},"documentation":{"id":2962,"nodeType":"StructuredDocumentation","src":"9997:280:7","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":2989,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:7","nodeType":"FunctionDefinition","parameters":{"id":2965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2964,"mutability":"mutable","name":"value","nameLocation":"10309:5:7","nodeType":"VariableDeclaration","scope":2989,"src":"10301:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2963,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:7"},"returnParameters":{"id":2968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2989,"src":"10339:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":2966,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:7","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:7"},"scope":4223,"src":"10282:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3016,"nodeType":"Block","src":"10857:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2997,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"10871:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":2999,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":2998,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":3002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:7","memberName":"max","nodeType":"MemberAccess","src":"10879:17:7","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3010,"nodeType":"IfStatement","src":"10867:105:7","trueBody":{"id":3009,"nodeType":"Block","src":"10898:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":3005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:7","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":3006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"10955:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3004,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"10919:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3008,"nodeType":"RevertStatement","src":"10912:49:7"}]}},{"expression":{"arguments":[{"id":3013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"10996:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":3011,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:7","typeDescriptions":{}}},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":2996,"id":3015,"nodeType":"Return","src":"10981:21:7"}]},"documentation":{"id":2990,"nodeType":"StructuredDocumentation","src":"10506:280:7","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":3017,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:7","nodeType":"FunctionDefinition","parameters":{"id":2993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2992,"mutability":"mutable","name":"value","nameLocation":"10818:5:7","nodeType":"VariableDeclaration","scope":3017,"src":"10810:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2991,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:7"},"returnParameters":{"id":2996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3017,"src":"10848:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":2994,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:7","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:7"},"scope":4223,"src":"10791:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3044,"nodeType":"Block","src":"11360:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"11374:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3027,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":3026,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":3030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:7","memberName":"max","nodeType":"MemberAccess","src":"11382:16:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3038,"nodeType":"IfStatement","src":"11370:103:7","trueBody":{"id":3037,"nodeType":"Block","src":"11400:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":3033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:7","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":3034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"11456:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3032,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"11421:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3036,"nodeType":"RevertStatement","src":"11414:48:7"}]}},{"expression":{"arguments":[{"id":3041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"11496:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3039,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:7","typeDescriptions":{}}},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":3024,"id":3043,"nodeType":"Return","src":"11482:20:7"}]},"documentation":{"id":3018,"nodeType":"StructuredDocumentation","src":"11015:276:7","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":3045,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:7","nodeType":"FunctionDefinition","parameters":{"id":3021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3020,"mutability":"mutable","name":"value","nameLocation":"11322:5:7","nodeType":"VariableDeclaration","scope":3045,"src":"11314:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3019,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:7"},"returnParameters":{"id":3024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3045,"src":"11352:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3022,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:7"},"scope":4223,"src":"11296:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3072,"nodeType":"Block","src":"11860:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"11874:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":3055,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":3054,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":3058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:7","memberName":"max","nodeType":"MemberAccess","src":"11882:16:7","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3066,"nodeType":"IfStatement","src":"11870:103:7","trueBody":{"id":3065,"nodeType":"Block","src":"11900:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":3061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:7","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":3062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"11956:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3060,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"11921:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3064,"nodeType":"RevertStatement","src":"11914:48:7"}]}},{"expression":{"arguments":[{"id":3069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"11996:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":3067,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:7","typeDescriptions":{}}},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":3052,"id":3071,"nodeType":"Return","src":"11982:20:7"}]},"documentation":{"id":3046,"nodeType":"StructuredDocumentation","src":"11515:276:7","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":3073,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:7","nodeType":"FunctionDefinition","parameters":{"id":3049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3048,"mutability":"mutable","name":"value","nameLocation":"11822:5:7","nodeType":"VariableDeclaration","scope":3073,"src":"11814:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3047,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:7"},"returnParameters":{"id":3052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3073,"src":"11852:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":3050,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:7","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:7"},"scope":4223,"src":"11796:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3100,"nodeType":"Block","src":"12360:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3076,"src":"12374:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":3083,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":3082,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":3086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:7","memberName":"max","nodeType":"MemberAccess","src":"12382:16:7","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3094,"nodeType":"IfStatement","src":"12370:103:7","trueBody":{"id":3093,"nodeType":"Block","src":"12400:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":3089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:7","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":3090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3076,"src":"12456:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3088,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"12421:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3092,"nodeType":"RevertStatement","src":"12414:48:7"}]}},{"expression":{"arguments":[{"id":3097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3076,"src":"12496:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":3095,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:7","typeDescriptions":{}}},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":3080,"id":3099,"nodeType":"Return","src":"12482:20:7"}]},"documentation":{"id":3074,"nodeType":"StructuredDocumentation","src":"12015:276:7","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":3101,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:7","nodeType":"FunctionDefinition","parameters":{"id":3077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3076,"mutability":"mutable","name":"value","nameLocation":"12322:5:7","nodeType":"VariableDeclaration","scope":3101,"src":"12314:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3075,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:7"},"returnParameters":{"id":3080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3101,"src":"12352:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":3078,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:7","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:7"},"scope":4223,"src":"12296:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3128,"nodeType":"Block","src":"12860:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"12874:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":3111,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":3110,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":3114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:7","memberName":"max","nodeType":"MemberAccess","src":"12882:16:7","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3122,"nodeType":"IfStatement","src":"12870:103:7","trueBody":{"id":3121,"nodeType":"Block","src":"12900:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":3117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:7","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":3118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"12956:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3116,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"12921:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3120,"nodeType":"RevertStatement","src":"12914:48:7"}]}},{"expression":{"arguments":[{"id":3125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"12996:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":3123,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:7","typeDescriptions":{}}},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":3108,"id":3127,"nodeType":"Return","src":"12982:20:7"}]},"documentation":{"id":3102,"nodeType":"StructuredDocumentation","src":"12515:276:7","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":3129,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:7","nodeType":"FunctionDefinition","parameters":{"id":3105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3104,"mutability":"mutable","name":"value","nameLocation":"12822:5:7","nodeType":"VariableDeclaration","scope":3129,"src":"12814:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3103,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:7"},"returnParameters":{"id":3108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3129,"src":"12852:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":3106,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:7","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:7"},"scope":4223,"src":"12796:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3156,"nodeType":"Block","src":"13360:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"13374:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3139,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":3138,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":3142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:7","memberName":"max","nodeType":"MemberAccess","src":"13382:16:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3150,"nodeType":"IfStatement","src":"13370:103:7","trueBody":{"id":3149,"nodeType":"Block","src":"13400:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":3145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":3146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"13456:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3144,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"13421:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3148,"nodeType":"RevertStatement","src":"13414:48:7"}]}},{"expression":{"arguments":[{"id":3153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"13496:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3151,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:7","typeDescriptions":{}}},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":3136,"id":3155,"nodeType":"Return","src":"13482:20:7"}]},"documentation":{"id":3130,"nodeType":"StructuredDocumentation","src":"13015:276:7","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":3157,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:7","nodeType":"FunctionDefinition","parameters":{"id":3133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3132,"mutability":"mutable","name":"value","nameLocation":"13322:5:7","nodeType":"VariableDeclaration","scope":3157,"src":"13314:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3131,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:7"},"returnParameters":{"id":3136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3157,"src":"13352:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3134,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:7"},"scope":4223,"src":"13296:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3184,"nodeType":"Block","src":"13860:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"13874:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":3167,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":3166,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":3170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:7","memberName":"max","nodeType":"MemberAccess","src":"13882:16:7","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3178,"nodeType":"IfStatement","src":"13870:103:7","trueBody":{"id":3177,"nodeType":"Block","src":"13900:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":3173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:7","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":3174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"13956:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3172,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"13921:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3176,"nodeType":"RevertStatement","src":"13914:48:7"}]}},{"expression":{"arguments":[{"id":3181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"13996:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":3179,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:7","typeDescriptions":{}}},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":3164,"id":3183,"nodeType":"Return","src":"13982:20:7"}]},"documentation":{"id":3158,"nodeType":"StructuredDocumentation","src":"13515:276:7","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":3185,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:7","nodeType":"FunctionDefinition","parameters":{"id":3161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3160,"mutability":"mutable","name":"value","nameLocation":"13822:5:7","nodeType":"VariableDeclaration","scope":3185,"src":"13814:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3159,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:7"},"returnParameters":{"id":3164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3185,"src":"13852:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":3162,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:7","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:7"},"scope":4223,"src":"13796:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3212,"nodeType":"Block","src":"14360:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"14374:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3195,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":3194,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":3198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:7","memberName":"max","nodeType":"MemberAccess","src":"14382:16:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3206,"nodeType":"IfStatement","src":"14370:103:7","trueBody":{"id":3205,"nodeType":"Block","src":"14400:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":3201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:7","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":3202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"14456:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3200,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"14421:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3204,"nodeType":"RevertStatement","src":"14414:48:7"}]}},{"expression":{"arguments":[{"id":3209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"14496:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3207,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:7","typeDescriptions":{}}},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":3192,"id":3211,"nodeType":"Return","src":"14482:20:7"}]},"documentation":{"id":3186,"nodeType":"StructuredDocumentation","src":"14015:276:7","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":3213,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:7","nodeType":"FunctionDefinition","parameters":{"id":3189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3188,"mutability":"mutable","name":"value","nameLocation":"14322:5:7","nodeType":"VariableDeclaration","scope":3213,"src":"14314:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3187,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:7"},"returnParameters":{"id":3192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3213,"src":"14352:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3190,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:7"},"scope":4223,"src":"14296:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3240,"nodeType":"Block","src":"14860:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"14874:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":3223,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":3222,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":3226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:7","memberName":"max","nodeType":"MemberAccess","src":"14882:16:7","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3234,"nodeType":"IfStatement","src":"14870:103:7","trueBody":{"id":3233,"nodeType":"Block","src":"14900:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:7","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":3230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"14956:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3228,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"14921:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3232,"nodeType":"RevertStatement","src":"14914:48:7"}]}},{"expression":{"arguments":[{"id":3237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"14996:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":3235,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:7","typeDescriptions":{}}},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":3220,"id":3239,"nodeType":"Return","src":"14982:20:7"}]},"documentation":{"id":3214,"nodeType":"StructuredDocumentation","src":"14515:276:7","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":3241,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:7","nodeType":"FunctionDefinition","parameters":{"id":3217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3216,"mutability":"mutable","name":"value","nameLocation":"14822:5:7","nodeType":"VariableDeclaration","scope":3241,"src":"14814:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3215,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:7"},"returnParameters":{"id":3220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3241,"src":"14852:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":3218,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:7","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:7"},"scope":4223,"src":"14796:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3268,"nodeType":"Block","src":"15360:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"15374:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3251,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":3250,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":3254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:7","memberName":"max","nodeType":"MemberAccess","src":"15382:16:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3262,"nodeType":"IfStatement","src":"15370:103:7","trueBody":{"id":3261,"nodeType":"Block","src":"15400:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":3257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":3258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"15456:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3256,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"15421:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3260,"nodeType":"RevertStatement","src":"15414:48:7"}]}},{"expression":{"arguments":[{"id":3265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"15496:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3263,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:7","typeDescriptions":{}}},"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":3248,"id":3267,"nodeType":"Return","src":"15482:20:7"}]},"documentation":{"id":3242,"nodeType":"StructuredDocumentation","src":"15015:276:7","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":3269,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:7","nodeType":"FunctionDefinition","parameters":{"id":3245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3244,"mutability":"mutable","name":"value","nameLocation":"15322:5:7","nodeType":"VariableDeclaration","scope":3269,"src":"15314:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3243,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:7"},"returnParameters":{"id":3248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3269,"src":"15352:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3246,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:7"},"scope":4223,"src":"15296:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3296,"nodeType":"Block","src":"15860:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"15874:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":3279,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":3278,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":3282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:7","memberName":"max","nodeType":"MemberAccess","src":"15882:16:7","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3290,"nodeType":"IfStatement","src":"15870:103:7","trueBody":{"id":3289,"nodeType":"Block","src":"15900:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":3285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:7","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":3286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"15956:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3284,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"15921:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3288,"nodeType":"RevertStatement","src":"15914:48:7"}]}},{"expression":{"arguments":[{"id":3293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"15996:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":3291,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:7","typeDescriptions":{}}},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":3276,"id":3295,"nodeType":"Return","src":"15982:20:7"}]},"documentation":{"id":3270,"nodeType":"StructuredDocumentation","src":"15515:276:7","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":3297,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:7","nodeType":"FunctionDefinition","parameters":{"id":3273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3272,"mutability":"mutable","name":"value","nameLocation":"15822:5:7","nodeType":"VariableDeclaration","scope":3297,"src":"15814:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3271,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:7"},"returnParameters":{"id":3276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3297,"src":"15852:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3274,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:7","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:7"},"scope":4223,"src":"15796:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3324,"nodeType":"Block","src":"16360:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"16374:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":3307,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":3306,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":3310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:7","memberName":"max","nodeType":"MemberAccess","src":"16382:16:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3318,"nodeType":"IfStatement","src":"16370:103:7","trueBody":{"id":3317,"nodeType":"Block","src":"16400:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":3313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":3314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"16456:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3312,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"16421:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3316,"nodeType":"RevertStatement","src":"16414:48:7"}]}},{"expression":{"arguments":[{"id":3321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"16496:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":3319,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:7","typeDescriptions":{}}},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":3304,"id":3323,"nodeType":"Return","src":"16482:20:7"}]},"documentation":{"id":3298,"nodeType":"StructuredDocumentation","src":"16015:276:7","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":3325,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:7","nodeType":"FunctionDefinition","parameters":{"id":3301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3300,"mutability":"mutable","name":"value","nameLocation":"16322:5:7","nodeType":"VariableDeclaration","scope":3325,"src":"16314:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3299,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:7"},"returnParameters":{"id":3304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3325,"src":"16352:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3302,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:7"},"scope":4223,"src":"16296:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3352,"nodeType":"Block","src":"16854:146:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"16868:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3335,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3334,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:7","memberName":"max","nodeType":"MemberAccess","src":"16876:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3346,"nodeType":"IfStatement","src":"16864:101:7","trueBody":{"id":3345,"nodeType":"Block","src":"16893:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":3341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":3342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"16948:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3340,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"16914:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3344,"nodeType":"RevertStatement","src":"16907:47:7"}]}},{"expression":{"arguments":[{"id":3349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"16987:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3347,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:7","typeDescriptions":{}}},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3332,"id":3351,"nodeType":"Return","src":"16974:19:7"}]},"documentation":{"id":3326,"nodeType":"StructuredDocumentation","src":"16515:272:7","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":3353,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:7","nodeType":"FunctionDefinition","parameters":{"id":3329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3328,"mutability":"mutable","name":"value","nameLocation":"16817:5:7","nodeType":"VariableDeclaration","scope":3353,"src":"16809:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3327,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:7"},"returnParameters":{"id":3332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3353,"src":"16847:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3330,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:7"},"scope":4223,"src":"16792:208:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3375,"nodeType":"Block","src":"17236:128:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"17250:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3369,"nodeType":"IfStatement","src":"17246:81:7","trueBody":{"id":3368,"nodeType":"Block","src":"17261:66:7","statements":[{"errorCall":{"arguments":[{"id":3365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"17310:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3364,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"17282:27:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3367,"nodeType":"RevertStatement","src":"17275:41:7"}]}},{"expression":{"arguments":[{"id":3372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"17351:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3370,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:7","typeDescriptions":{}}},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3360,"id":3374,"nodeType":"Return","src":"17336:21:7"}]},"documentation":{"id":3354,"nodeType":"StructuredDocumentation","src":"17006:160:7","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":3376,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:7","nodeType":"FunctionDefinition","parameters":{"id":3357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3356,"mutability":"mutable","name":"value","nameLocation":"17197:5:7","nodeType":"VariableDeclaration","scope":3376,"src":"17190:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3355,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:7"},"returnParameters":{"id":3360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3376,"src":"17227:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3358,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:7"},"scope":4223,"src":"17171:193:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3401,"nodeType":"Block","src":"17761:150:7","statements":[{"expression":{"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3384,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"17771:10:7","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"17791:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":3385,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:7","typeDescriptions":{}}},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:7","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":3390,"nodeType":"ExpressionStatement","src":"17771:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3391,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"17811:10:7","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"17825:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3400,"nodeType":"IfStatement","src":"17807:98:7","trueBody":{"id":3399,"nodeType":"Block","src":"17832:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":3395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:7","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":3396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"17888:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3394,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"17853:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3398,"nodeType":"RevertStatement","src":"17846:48:7"}]}}]},"documentation":{"id":3377,"nodeType":"StructuredDocumentation","src":"17370:312:7","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":3402,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:7","nodeType":"FunctionDefinition","parameters":{"id":3380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3379,"mutability":"mutable","name":"value","nameLocation":"17712:5:7","nodeType":"VariableDeclaration","scope":3402,"src":"17705:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3378,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:7"},"returnParameters":{"id":3383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3382,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:7","nodeType":"VariableDeclaration","scope":3402,"src":"17742:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":3381,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:7","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:7"},"scope":4223,"src":"17687:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3427,"nodeType":"Block","src":"18308:150:7","statements":[{"expression":{"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3410,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"18318:10:7","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"18338:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":3411,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:7","typeDescriptions":{}}},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:7","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":3416,"nodeType":"ExpressionStatement","src":"18318:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3417,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"18358:10:7","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"18372:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3426,"nodeType":"IfStatement","src":"18354:98:7","trueBody":{"id":3425,"nodeType":"Block","src":"18379:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":3421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:7","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":3422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"18435:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3420,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"18400:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3424,"nodeType":"RevertStatement","src":"18393:48:7"}]}}]},"documentation":{"id":3403,"nodeType":"StructuredDocumentation","src":"17917:312:7","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":3428,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:7","nodeType":"FunctionDefinition","parameters":{"id":3406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3405,"mutability":"mutable","name":"value","nameLocation":"18259:5:7","nodeType":"VariableDeclaration","scope":3428,"src":"18252:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3404,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:7"},"returnParameters":{"id":3409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3408,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:7","nodeType":"VariableDeclaration","scope":3428,"src":"18289:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":3407,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:7","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:7"},"scope":4223,"src":"18234:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3453,"nodeType":"Block","src":"18855:150:7","statements":[{"expression":{"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3436,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"18865:10:7","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"18885:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":3437,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:7","typeDescriptions":{}}},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:7","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":3442,"nodeType":"ExpressionStatement","src":"18865:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3443,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"18905:10:7","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"18919:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3452,"nodeType":"IfStatement","src":"18901:98:7","trueBody":{"id":3451,"nodeType":"Block","src":"18926:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":3447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:7","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":3448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"18982:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3446,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"18947:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3450,"nodeType":"RevertStatement","src":"18940:48:7"}]}}]},"documentation":{"id":3429,"nodeType":"StructuredDocumentation","src":"18464:312:7","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":3454,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:7","nodeType":"FunctionDefinition","parameters":{"id":3432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3431,"mutability":"mutable","name":"value","nameLocation":"18806:5:7","nodeType":"VariableDeclaration","scope":3454,"src":"18799:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3430,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:7"},"returnParameters":{"id":3435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3434,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:7","nodeType":"VariableDeclaration","scope":3454,"src":"18836:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":3433,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:7","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:7"},"scope":4223,"src":"18781:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3479,"nodeType":"Block","src":"19402:150:7","statements":[{"expression":{"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3462,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"19412:10:7","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"19432:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":3463,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:7","typeDescriptions":{}}},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:7","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":3468,"nodeType":"ExpressionStatement","src":"19412:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3469,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"19452:10:7","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"19466:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3478,"nodeType":"IfStatement","src":"19448:98:7","trueBody":{"id":3477,"nodeType":"Block","src":"19473:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":3473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:7","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":3474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"19529:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3472,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"19494:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3476,"nodeType":"RevertStatement","src":"19487:48:7"}]}}]},"documentation":{"id":3455,"nodeType":"StructuredDocumentation","src":"19011:312:7","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":3480,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:7","nodeType":"FunctionDefinition","parameters":{"id":3458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3457,"mutability":"mutable","name":"value","nameLocation":"19353:5:7","nodeType":"VariableDeclaration","scope":3480,"src":"19346:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3456,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:7"},"returnParameters":{"id":3461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3460,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:7","nodeType":"VariableDeclaration","scope":3480,"src":"19383:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":3459,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:7","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:7"},"scope":4223,"src":"19328:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3505,"nodeType":"Block","src":"19949:150:7","statements":[{"expression":{"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3488,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"19959:10:7","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"19979:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":3489,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:7","typeDescriptions":{}}},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:7","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":3494,"nodeType":"ExpressionStatement","src":"19959:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3495,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"19999:10:7","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"20013:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3504,"nodeType":"IfStatement","src":"19995:98:7","trueBody":{"id":3503,"nodeType":"Block","src":"20020:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":3499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:7","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":3500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"20076:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3498,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"20041:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3502,"nodeType":"RevertStatement","src":"20034:48:7"}]}}]},"documentation":{"id":3481,"nodeType":"StructuredDocumentation","src":"19558:312:7","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":3506,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:7","nodeType":"FunctionDefinition","parameters":{"id":3484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3483,"mutability":"mutable","name":"value","nameLocation":"19900:5:7","nodeType":"VariableDeclaration","scope":3506,"src":"19893:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3482,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:7"},"returnParameters":{"id":3487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3486,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:7","nodeType":"VariableDeclaration","scope":3506,"src":"19930:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":3485,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:7","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:7"},"scope":4223,"src":"19875:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3531,"nodeType":"Block","src":"20496:150:7","statements":[{"expression":{"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3514,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"20506:10:7","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"20526:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":3515,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:7","typeDescriptions":{}}},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:7","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":3520,"nodeType":"ExpressionStatement","src":"20506:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3521,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"20546:10:7","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"20560:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3530,"nodeType":"IfStatement","src":"20542:98:7","trueBody":{"id":3529,"nodeType":"Block","src":"20567:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":3525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:7","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":3526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"20623:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3524,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"20588:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3528,"nodeType":"RevertStatement","src":"20581:48:7"}]}}]},"documentation":{"id":3507,"nodeType":"StructuredDocumentation","src":"20105:312:7","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":3532,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:7","nodeType":"FunctionDefinition","parameters":{"id":3510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3509,"mutability":"mutable","name":"value","nameLocation":"20447:5:7","nodeType":"VariableDeclaration","scope":3532,"src":"20440:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3508,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:7"},"returnParameters":{"id":3513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3512,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:7","nodeType":"VariableDeclaration","scope":3532,"src":"20477:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":3511,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:7","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:7"},"scope":4223,"src":"20422:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3557,"nodeType":"Block","src":"21043:150:7","statements":[{"expression":{"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3540,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"21053:10:7","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"21073:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":3541,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:7","typeDescriptions":{}}},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:7","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":3546,"nodeType":"ExpressionStatement","src":"21053:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3547,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"21093:10:7","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"21107:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3556,"nodeType":"IfStatement","src":"21089:98:7","trueBody":{"id":3555,"nodeType":"Block","src":"21114:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":3551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:7","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":3552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"21170:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3550,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"21135:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3554,"nodeType":"RevertStatement","src":"21128:48:7"}]}}]},"documentation":{"id":3533,"nodeType":"StructuredDocumentation","src":"20652:312:7","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":3558,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:7","nodeType":"FunctionDefinition","parameters":{"id":3536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3535,"mutability":"mutable","name":"value","nameLocation":"20994:5:7","nodeType":"VariableDeclaration","scope":3558,"src":"20987:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3534,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:7"},"returnParameters":{"id":3539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3538,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:7","nodeType":"VariableDeclaration","scope":3558,"src":"21024:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":3537,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:7","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:7"},"scope":4223,"src":"20969:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3583,"nodeType":"Block","src":"21590:150:7","statements":[{"expression":{"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3566,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"21600:10:7","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"21620:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":3567,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:7","typeDescriptions":{}}},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:7","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":3572,"nodeType":"ExpressionStatement","src":"21600:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3573,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"21640:10:7","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"21654:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3582,"nodeType":"IfStatement","src":"21636:98:7","trueBody":{"id":3581,"nodeType":"Block","src":"21661:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":3577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:7","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":3578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"21717:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3576,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"21682:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3580,"nodeType":"RevertStatement","src":"21675:48:7"}]}}]},"documentation":{"id":3559,"nodeType":"StructuredDocumentation","src":"21199:312:7","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":3584,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:7","nodeType":"FunctionDefinition","parameters":{"id":3562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3561,"mutability":"mutable","name":"value","nameLocation":"21541:5:7","nodeType":"VariableDeclaration","scope":3584,"src":"21534:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3560,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:7"},"returnParameters":{"id":3565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3564,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:7","nodeType":"VariableDeclaration","scope":3584,"src":"21571:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":3563,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:7","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:7"},"scope":4223,"src":"21516:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3609,"nodeType":"Block","src":"22137:150:7","statements":[{"expression":{"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3592,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"22147:10:7","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"22167:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":3593,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:7","typeDescriptions":{}}},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:7","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":3598,"nodeType":"ExpressionStatement","src":"22147:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3599,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"22187:10:7","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"22201:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3608,"nodeType":"IfStatement","src":"22183:98:7","trueBody":{"id":3607,"nodeType":"Block","src":"22208:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":3603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:7","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":3604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"22264:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3602,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"22229:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3606,"nodeType":"RevertStatement","src":"22222:48:7"}]}}]},"documentation":{"id":3585,"nodeType":"StructuredDocumentation","src":"21746:312:7","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":3610,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:7","nodeType":"FunctionDefinition","parameters":{"id":3588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3587,"mutability":"mutable","name":"value","nameLocation":"22088:5:7","nodeType":"VariableDeclaration","scope":3610,"src":"22081:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3586,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:7"},"returnParameters":{"id":3591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3590,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:7","nodeType":"VariableDeclaration","scope":3610,"src":"22118:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":3589,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:7","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:7"},"scope":4223,"src":"22063:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3635,"nodeType":"Block","src":"22684:150:7","statements":[{"expression":{"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3618,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"22694:10:7","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"22714:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":3619,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:7","typeDescriptions":{}}},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:7","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":3624,"nodeType":"ExpressionStatement","src":"22694:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3625,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"22734:10:7","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"22748:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3634,"nodeType":"IfStatement","src":"22730:98:7","trueBody":{"id":3633,"nodeType":"Block","src":"22755:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":3629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:7","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":3630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"22811:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3628,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"22776:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3632,"nodeType":"RevertStatement","src":"22769:48:7"}]}}]},"documentation":{"id":3611,"nodeType":"StructuredDocumentation","src":"22293:312:7","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":3636,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:7","nodeType":"FunctionDefinition","parameters":{"id":3614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3613,"mutability":"mutable","name":"value","nameLocation":"22635:5:7","nodeType":"VariableDeclaration","scope":3636,"src":"22628:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3612,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:7"},"returnParameters":{"id":3617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3616,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:7","nodeType":"VariableDeclaration","scope":3636,"src":"22665:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":3615,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:7","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:7"},"scope":4223,"src":"22610:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3661,"nodeType":"Block","src":"23231:150:7","statements":[{"expression":{"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3644,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"23241:10:7","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"23261:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":3645,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:7","typeDescriptions":{}}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:7","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":3650,"nodeType":"ExpressionStatement","src":"23241:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3651,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"23281:10:7","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"23295:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3660,"nodeType":"IfStatement","src":"23277:98:7","trueBody":{"id":3659,"nodeType":"Block","src":"23302:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":3655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:7","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":3656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"23358:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3654,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"23323:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3658,"nodeType":"RevertStatement","src":"23316:48:7"}]}}]},"documentation":{"id":3637,"nodeType":"StructuredDocumentation","src":"22840:312:7","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":3662,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:7","nodeType":"FunctionDefinition","parameters":{"id":3640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3639,"mutability":"mutable","name":"value","nameLocation":"23182:5:7","nodeType":"VariableDeclaration","scope":3662,"src":"23175:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3638,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:7"},"returnParameters":{"id":3643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3642,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:7","nodeType":"VariableDeclaration","scope":3662,"src":"23212:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":3641,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:7","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:7"},"scope":4223,"src":"23157:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3687,"nodeType":"Block","src":"23778:150:7","statements":[{"expression":{"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3670,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"23788:10:7","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"23808:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":3671,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:7","typeDescriptions":{}}},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:7","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":3676,"nodeType":"ExpressionStatement","src":"23788:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3677,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"23828:10:7","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"23842:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3686,"nodeType":"IfStatement","src":"23824:98:7","trueBody":{"id":3685,"nodeType":"Block","src":"23849:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":3681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:7","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":3682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"23905:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3680,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"23870:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3684,"nodeType":"RevertStatement","src":"23863:48:7"}]}}]},"documentation":{"id":3663,"nodeType":"StructuredDocumentation","src":"23387:312:7","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":3688,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:7","nodeType":"FunctionDefinition","parameters":{"id":3666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3665,"mutability":"mutable","name":"value","nameLocation":"23729:5:7","nodeType":"VariableDeclaration","scope":3688,"src":"23722:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3664,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:7"},"returnParameters":{"id":3669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3668,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:7","nodeType":"VariableDeclaration","scope":3688,"src":"23759:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":3667,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:7","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:7"},"scope":4223,"src":"23704:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3713,"nodeType":"Block","src":"24325:150:7","statements":[{"expression":{"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3696,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"24335:10:7","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"24355:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":3697,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:7","typeDescriptions":{}}},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:7","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":3702,"nodeType":"ExpressionStatement","src":"24335:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3703,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"24375:10:7","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"24389:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3712,"nodeType":"IfStatement","src":"24371:98:7","trueBody":{"id":3711,"nodeType":"Block","src":"24396:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":3707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:7","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":3708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"24452:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3706,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"24417:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3710,"nodeType":"RevertStatement","src":"24410:48:7"}]}}]},"documentation":{"id":3689,"nodeType":"StructuredDocumentation","src":"23934:312:7","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":3714,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:7","nodeType":"FunctionDefinition","parameters":{"id":3692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3691,"mutability":"mutable","name":"value","nameLocation":"24276:5:7","nodeType":"VariableDeclaration","scope":3714,"src":"24269:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3690,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:7"},"returnParameters":{"id":3695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3694,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:7","nodeType":"VariableDeclaration","scope":3714,"src":"24306:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":3693,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:7","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:7"},"scope":4223,"src":"24251:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3739,"nodeType":"Block","src":"24872:150:7","statements":[{"expression":{"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3722,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"24882:10:7","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"24902:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":3723,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:7","typeDescriptions":{}}},"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:7","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":3728,"nodeType":"ExpressionStatement","src":"24882:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3729,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"24922:10:7","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"24936:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3738,"nodeType":"IfStatement","src":"24918:98:7","trueBody":{"id":3737,"nodeType":"Block","src":"24943:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":3733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:7","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":3734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"24999:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3732,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"24964:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3736,"nodeType":"RevertStatement","src":"24957:48:7"}]}}]},"documentation":{"id":3715,"nodeType":"StructuredDocumentation","src":"24481:312:7","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":3740,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:7","nodeType":"FunctionDefinition","parameters":{"id":3718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3717,"mutability":"mutable","name":"value","nameLocation":"24823:5:7","nodeType":"VariableDeclaration","scope":3740,"src":"24816:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3716,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:7"},"returnParameters":{"id":3721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3720,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:7","nodeType":"VariableDeclaration","scope":3740,"src":"24853:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":3719,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:7","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:7"},"scope":4223,"src":"24798:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3765,"nodeType":"Block","src":"25419:150:7","statements":[{"expression":{"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3748,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"25429:10:7","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"25449:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":3749,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:7","typeDescriptions":{}}},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:7","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":3754,"nodeType":"ExpressionStatement","src":"25429:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3755,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"25469:10:7","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"25483:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3764,"nodeType":"IfStatement","src":"25465:98:7","trueBody":{"id":3763,"nodeType":"Block","src":"25490:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":3759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:7","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":3760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"25546:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3758,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"25511:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3762,"nodeType":"RevertStatement","src":"25504:48:7"}]}}]},"documentation":{"id":3741,"nodeType":"StructuredDocumentation","src":"25028:312:7","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":3766,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:7","nodeType":"FunctionDefinition","parameters":{"id":3744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3743,"mutability":"mutable","name":"value","nameLocation":"25370:5:7","nodeType":"VariableDeclaration","scope":3766,"src":"25363:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3742,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:7"},"returnParameters":{"id":3747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3746,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:7","nodeType":"VariableDeclaration","scope":3766,"src":"25400:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":3745,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:7","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:7"},"scope":4223,"src":"25345:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3791,"nodeType":"Block","src":"25966:150:7","statements":[{"expression":{"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3774,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"25976:10:7","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"25996:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":3775,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:7","typeDescriptions":{}}},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:7","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":3780,"nodeType":"ExpressionStatement","src":"25976:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3781,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"26016:10:7","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"26030:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3790,"nodeType":"IfStatement","src":"26012:98:7","trueBody":{"id":3789,"nodeType":"Block","src":"26037:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":3785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":3786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"26093:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3784,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"26058:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3788,"nodeType":"RevertStatement","src":"26051:48:7"}]}}]},"documentation":{"id":3767,"nodeType":"StructuredDocumentation","src":"25575:312:7","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":3792,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:7","nodeType":"FunctionDefinition","parameters":{"id":3770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3769,"mutability":"mutable","name":"value","nameLocation":"25917:5:7","nodeType":"VariableDeclaration","scope":3792,"src":"25910:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3768,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:7"},"returnParameters":{"id":3773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3772,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:7","nodeType":"VariableDeclaration","scope":3792,"src":"25947:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":3771,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:7","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:7"},"scope":4223,"src":"25892:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3817,"nodeType":"Block","src":"26513:150:7","statements":[{"expression":{"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3800,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"26523:10:7","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3795,"src":"26543:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":3801,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:7","typeDescriptions":{}}},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:7","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":3806,"nodeType":"ExpressionStatement","src":"26523:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3807,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"26563:10:7","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3795,"src":"26577:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3816,"nodeType":"IfStatement","src":"26559:98:7","trueBody":{"id":3815,"nodeType":"Block","src":"26584:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":3811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:7","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":3812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3795,"src":"26640:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3810,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"26605:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3814,"nodeType":"RevertStatement","src":"26598:48:7"}]}}]},"documentation":{"id":3793,"nodeType":"StructuredDocumentation","src":"26122:312:7","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":3818,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:7","nodeType":"FunctionDefinition","parameters":{"id":3796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3795,"mutability":"mutable","name":"value","nameLocation":"26464:5:7","nodeType":"VariableDeclaration","scope":3818,"src":"26457:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3794,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:7"},"returnParameters":{"id":3799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3798,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:7","nodeType":"VariableDeclaration","scope":3818,"src":"26494:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":3797,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:7","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:7"},"scope":4223,"src":"26439:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3843,"nodeType":"Block","src":"27060:150:7","statements":[{"expression":{"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3826,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"27070:10:7","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"27090:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":3827,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:7","typeDescriptions":{}}},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:7","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":3832,"nodeType":"ExpressionStatement","src":"27070:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3833,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"27110:10:7","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"27124:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3842,"nodeType":"IfStatement","src":"27106:98:7","trueBody":{"id":3841,"nodeType":"Block","src":"27131:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":3837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:7","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":3838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"27187:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3836,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"27152:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3840,"nodeType":"RevertStatement","src":"27145:48:7"}]}}]},"documentation":{"id":3819,"nodeType":"StructuredDocumentation","src":"26669:312:7","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":3844,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:7","nodeType":"FunctionDefinition","parameters":{"id":3822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3821,"mutability":"mutable","name":"value","nameLocation":"27011:5:7","nodeType":"VariableDeclaration","scope":3844,"src":"27004:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3820,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:7"},"returnParameters":{"id":3825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3824,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:7","nodeType":"VariableDeclaration","scope":3844,"src":"27041:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":3823,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:7","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:7"},"scope":4223,"src":"26986:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3869,"nodeType":"Block","src":"27607:150:7","statements":[{"expression":{"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3852,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"27617:10:7","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"27637:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":3853,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:7","typeDescriptions":{}}},"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:7","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":3858,"nodeType":"ExpressionStatement","src":"27617:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3859,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"27657:10:7","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"27671:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3868,"nodeType":"IfStatement","src":"27653:98:7","trueBody":{"id":3867,"nodeType":"Block","src":"27678:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":3863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:7","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":3864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"27734:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3862,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"27699:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3866,"nodeType":"RevertStatement","src":"27692:48:7"}]}}]},"documentation":{"id":3845,"nodeType":"StructuredDocumentation","src":"27216:312:7","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":3870,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:7","nodeType":"FunctionDefinition","parameters":{"id":3848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3847,"mutability":"mutable","name":"value","nameLocation":"27558:5:7","nodeType":"VariableDeclaration","scope":3870,"src":"27551:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3846,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:7"},"returnParameters":{"id":3851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3850,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:7","nodeType":"VariableDeclaration","scope":3870,"src":"27588:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":3849,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:7","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:7"},"scope":4223,"src":"27533:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3895,"nodeType":"Block","src":"28147:148:7","statements":[{"expression":{"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3878,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"28157:10:7","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"28176:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":3879,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:7","typeDescriptions":{}}},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:7","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":3884,"nodeType":"ExpressionStatement","src":"28157:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3885,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"28196:10:7","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"28210:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3894,"nodeType":"IfStatement","src":"28192:97:7","trueBody":{"id":3893,"nodeType":"Block","src":"28217:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":3889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:7","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":3890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"28272:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3888,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"28238:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3892,"nodeType":"RevertStatement","src":"28231:47:7"}]}}]},"documentation":{"id":3871,"nodeType":"StructuredDocumentation","src":"27763:307:7","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":3896,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:7","nodeType":"FunctionDefinition","parameters":{"id":3874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3873,"mutability":"mutable","name":"value","nameLocation":"28099:5:7","nodeType":"VariableDeclaration","scope":3896,"src":"28092:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3872,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:7"},"returnParameters":{"id":3877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3876,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:7","nodeType":"VariableDeclaration","scope":3896,"src":"28129:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":3875,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:7","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:7"},"scope":4223,"src":"28075:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3921,"nodeType":"Block","src":"28685:148:7","statements":[{"expression":{"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3904,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"28695:10:7","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"28714:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":3905,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:7","typeDescriptions":{}}},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:7","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":3910,"nodeType":"ExpressionStatement","src":"28695:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3911,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"28734:10:7","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"28748:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3920,"nodeType":"IfStatement","src":"28730:97:7","trueBody":{"id":3919,"nodeType":"Block","src":"28755:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":3915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:7","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":3916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"28810:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3914,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"28776:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3918,"nodeType":"RevertStatement","src":"28769:47:7"}]}}]},"documentation":{"id":3897,"nodeType":"StructuredDocumentation","src":"28301:307:7","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":3922,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:7","nodeType":"FunctionDefinition","parameters":{"id":3900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3899,"mutability":"mutable","name":"value","nameLocation":"28637:5:7","nodeType":"VariableDeclaration","scope":3922,"src":"28630:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3898,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:7"},"returnParameters":{"id":3903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3902,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:7","nodeType":"VariableDeclaration","scope":3922,"src":"28667:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":3901,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:7","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:7"},"scope":4223,"src":"28613:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3947,"nodeType":"Block","src":"29223:148:7","statements":[{"expression":{"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3930,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"29233:10:7","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"29252:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":3931,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:7","typeDescriptions":{}}},"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:7","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":3936,"nodeType":"ExpressionStatement","src":"29233:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3937,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"29272:10:7","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"29286:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3946,"nodeType":"IfStatement","src":"29268:97:7","trueBody":{"id":3945,"nodeType":"Block","src":"29293:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":3941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:7","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":3942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"29348:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3940,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"29314:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3944,"nodeType":"RevertStatement","src":"29307:47:7"}]}}]},"documentation":{"id":3923,"nodeType":"StructuredDocumentation","src":"28839:307:7","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":3948,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:7","nodeType":"FunctionDefinition","parameters":{"id":3926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3925,"mutability":"mutable","name":"value","nameLocation":"29175:5:7","nodeType":"VariableDeclaration","scope":3948,"src":"29168:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3924,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:7"},"returnParameters":{"id":3929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3928,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:7","nodeType":"VariableDeclaration","scope":3948,"src":"29205:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":3927,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:7","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:7"},"scope":4223,"src":"29151:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3973,"nodeType":"Block","src":"29761:148:7","statements":[{"expression":{"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3956,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"29771:10:7","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"29790:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":3957,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:7","typeDescriptions":{}}},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:7","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":3962,"nodeType":"ExpressionStatement","src":"29771:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3963,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"29810:10:7","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"29824:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3972,"nodeType":"IfStatement","src":"29806:97:7","trueBody":{"id":3971,"nodeType":"Block","src":"29831:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":3967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:7","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":3968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"29886:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3966,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"29852:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3970,"nodeType":"RevertStatement","src":"29845:47:7"}]}}]},"documentation":{"id":3949,"nodeType":"StructuredDocumentation","src":"29377:307:7","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":3974,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:7","nodeType":"FunctionDefinition","parameters":{"id":3952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3951,"mutability":"mutable","name":"value","nameLocation":"29713:5:7","nodeType":"VariableDeclaration","scope":3974,"src":"29706:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3950,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:7"},"returnParameters":{"id":3955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3954,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:7","nodeType":"VariableDeclaration","scope":3974,"src":"29743:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":3953,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:7","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:7"},"scope":4223,"src":"29689:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3999,"nodeType":"Block","src":"30299:148:7","statements":[{"expression":{"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3982,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"30309:10:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"30328:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":3983,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:7","typeDescriptions":{}}},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":3988,"nodeType":"ExpressionStatement","src":"30309:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3989,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"30348:10:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"30362:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3998,"nodeType":"IfStatement","src":"30344:97:7","trueBody":{"id":3997,"nodeType":"Block","src":"30369:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":3993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":3994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"30424:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3992,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"30390:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3996,"nodeType":"RevertStatement","src":"30383:47:7"}]}}]},"documentation":{"id":3975,"nodeType":"StructuredDocumentation","src":"29915:307:7","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":4000,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:7","nodeType":"FunctionDefinition","parameters":{"id":3978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3977,"mutability":"mutable","name":"value","nameLocation":"30251:5:7","nodeType":"VariableDeclaration","scope":4000,"src":"30244:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3976,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:7"},"returnParameters":{"id":3981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3980,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:7","nodeType":"VariableDeclaration","scope":4000,"src":"30281:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3979,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:7"},"scope":4223,"src":"30227:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4025,"nodeType":"Block","src":"30837:148:7","statements":[{"expression":{"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4008,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"30847:10:7","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"30866:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":4009,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:7","typeDescriptions":{}}},"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:7","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":4014,"nodeType":"ExpressionStatement","src":"30847:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4015,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"30886:10:7","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"30900:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4024,"nodeType":"IfStatement","src":"30882:97:7","trueBody":{"id":4023,"nodeType":"Block","src":"30907:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":4019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:7","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":4020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"30962:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4018,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"30928:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4022,"nodeType":"RevertStatement","src":"30921:47:7"}]}}]},"documentation":{"id":4001,"nodeType":"StructuredDocumentation","src":"30453:307:7","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":4026,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:7","nodeType":"FunctionDefinition","parameters":{"id":4004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4003,"mutability":"mutable","name":"value","nameLocation":"30789:5:7","nodeType":"VariableDeclaration","scope":4026,"src":"30782:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4002,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:7"},"returnParameters":{"id":4007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4006,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:7","nodeType":"VariableDeclaration","scope":4026,"src":"30819:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":4005,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:7","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:7"},"scope":4223,"src":"30765:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4051,"nodeType":"Block","src":"31375:148:7","statements":[{"expression":{"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4034,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"31385:10:7","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"31404:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":4035,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:7","typeDescriptions":{}}},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:7","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":4040,"nodeType":"ExpressionStatement","src":"31385:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4041,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"31424:10:7","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"31438:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4050,"nodeType":"IfStatement","src":"31420:97:7","trueBody":{"id":4049,"nodeType":"Block","src":"31445:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":4045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:7","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":4046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"31500:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4044,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"31466:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4048,"nodeType":"RevertStatement","src":"31459:47:7"}]}}]},"documentation":{"id":4027,"nodeType":"StructuredDocumentation","src":"30991:307:7","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":4052,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:7","nodeType":"FunctionDefinition","parameters":{"id":4030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4029,"mutability":"mutable","name":"value","nameLocation":"31327:5:7","nodeType":"VariableDeclaration","scope":4052,"src":"31320:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4028,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:7"},"returnParameters":{"id":4033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4032,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:7","nodeType":"VariableDeclaration","scope":4052,"src":"31357:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":4031,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:7","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:7"},"scope":4223,"src":"31303:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4077,"nodeType":"Block","src":"31913:148:7","statements":[{"expression":{"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4060,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"31923:10:7","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"31942:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":4061,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:7","typeDescriptions":{}}},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:7","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":4066,"nodeType":"ExpressionStatement","src":"31923:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4067,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"31962:10:7","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"31976:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4076,"nodeType":"IfStatement","src":"31958:97:7","trueBody":{"id":4075,"nodeType":"Block","src":"31983:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":4071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:7","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":4072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"32038:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4070,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"32004:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4074,"nodeType":"RevertStatement","src":"31997:47:7"}]}}]},"documentation":{"id":4053,"nodeType":"StructuredDocumentation","src":"31529:307:7","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":4078,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:7","nodeType":"FunctionDefinition","parameters":{"id":4056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4055,"mutability":"mutable","name":"value","nameLocation":"31865:5:7","nodeType":"VariableDeclaration","scope":4078,"src":"31858:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4054,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:7"},"returnParameters":{"id":4059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4058,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:7","nodeType":"VariableDeclaration","scope":4078,"src":"31895:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":4057,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:7","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:7"},"scope":4223,"src":"31841:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4103,"nodeType":"Block","src":"32451:148:7","statements":[{"expression":{"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4086,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"32461:10:7","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"32480:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4087,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:7","typeDescriptions":{}}},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:7","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":4092,"nodeType":"ExpressionStatement","src":"32461:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4093,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"32500:10:7","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"32514:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4102,"nodeType":"IfStatement","src":"32496:97:7","trueBody":{"id":4101,"nodeType":"Block","src":"32521:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":4097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":4098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"32576:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4096,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"32542:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4100,"nodeType":"RevertStatement","src":"32535:47:7"}]}}]},"documentation":{"id":4079,"nodeType":"StructuredDocumentation","src":"32067:307:7","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":4104,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:7","nodeType":"FunctionDefinition","parameters":{"id":4082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4081,"mutability":"mutable","name":"value","nameLocation":"32403:5:7","nodeType":"VariableDeclaration","scope":4104,"src":"32396:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4080,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:7"},"returnParameters":{"id":4085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4084,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:7","nodeType":"VariableDeclaration","scope":4104,"src":"32433:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":4083,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:7","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:7"},"scope":4223,"src":"32379:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4129,"nodeType":"Block","src":"32989:148:7","statements":[{"expression":{"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4112,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"32999:10:7","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"33018:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":4113,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:7","typeDescriptions":{}}},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:7","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":4118,"nodeType":"ExpressionStatement","src":"32999:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4119,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"33038:10:7","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"33052:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4128,"nodeType":"IfStatement","src":"33034:97:7","trueBody":{"id":4127,"nodeType":"Block","src":"33059:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":4123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:7","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":4124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"33114:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4122,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"33080:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4126,"nodeType":"RevertStatement","src":"33073:47:7"}]}}]},"documentation":{"id":4105,"nodeType":"StructuredDocumentation","src":"32605:307:7","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":4130,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:7","nodeType":"FunctionDefinition","parameters":{"id":4108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4107,"mutability":"mutable","name":"value","nameLocation":"32941:5:7","nodeType":"VariableDeclaration","scope":4130,"src":"32934:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4106,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:7"},"returnParameters":{"id":4111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4110,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:7","nodeType":"VariableDeclaration","scope":4130,"src":"32971:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4109,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:7","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:7"},"scope":4223,"src":"32917:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4155,"nodeType":"Block","src":"33527:148:7","statements":[{"expression":{"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4138,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"33537:10:7","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"33556:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":4139,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:7","typeDescriptions":{}}},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:7","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":4144,"nodeType":"ExpressionStatement","src":"33537:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4145,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"33576:10:7","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"33590:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4154,"nodeType":"IfStatement","src":"33572:97:7","trueBody":{"id":4153,"nodeType":"Block","src":"33597:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":4149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":4150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"33652:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4148,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"33618:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4152,"nodeType":"RevertStatement","src":"33611:47:7"}]}}]},"documentation":{"id":4131,"nodeType":"StructuredDocumentation","src":"33143:307:7","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":4156,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:7","nodeType":"FunctionDefinition","parameters":{"id":4134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4133,"mutability":"mutable","name":"value","nameLocation":"33479:5:7","nodeType":"VariableDeclaration","scope":4156,"src":"33472:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4132,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:7"},"returnParameters":{"id":4137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4136,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:7","nodeType":"VariableDeclaration","scope":4156,"src":"33509:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":4135,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:7","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:7"},"scope":4223,"src":"33455:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4181,"nodeType":"Block","src":"34058:146:7","statements":[{"expression":{"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4164,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"34068:10:7","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"34086:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":4165,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:7","typeDescriptions":{}}},"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:7","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":4170,"nodeType":"ExpressionStatement","src":"34068:24:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4171,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"34106:10:7","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"34120:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4180,"nodeType":"IfStatement","src":"34102:96:7","trueBody":{"id":4179,"nodeType":"Block","src":"34127:71:7","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":4175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":4176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"34181:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4174,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"34148:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4178,"nodeType":"RevertStatement","src":"34141:46:7"}]}}]},"documentation":{"id":4157,"nodeType":"StructuredDocumentation","src":"33681:302:7","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":4182,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:7","nodeType":"FunctionDefinition","parameters":{"id":4160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4159,"mutability":"mutable","name":"value","nameLocation":"34011:5:7","nodeType":"VariableDeclaration","scope":4182,"src":"34004:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4158,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:7"},"returnParameters":{"id":4163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4162,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:7","nodeType":"VariableDeclaration","scope":4182,"src":"34041:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":4161,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:7","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:7"},"scope":4223,"src":"33988:216:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4211,"nodeType":"Block","src":"34444:250:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"34557:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":4195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4194,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":4193,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":4197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:7","memberName":"max","nodeType":"MemberAccess","src":"34573:16:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4191,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:7","typeDescriptions":{}}},"id":4198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4205,"nodeType":"IfStatement","src":"34553:105:7","trueBody":{"id":4204,"nodeType":"Block","src":"34592:66:7","statements":[{"errorCall":{"arguments":[{"id":4201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"34641:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4200,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"34613:27:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4203,"nodeType":"RevertStatement","src":"34606:41:7"}]}},{"expression":{"arguments":[{"id":4208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"34681:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4206,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:7","typeDescriptions":{}}},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4189,"id":4210,"nodeType":"Return","src":"34667:20:7"}]},"documentation":{"id":4183,"nodeType":"StructuredDocumentation","src":"34210:165:7","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":4212,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:7","nodeType":"FunctionDefinition","parameters":{"id":4186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4185,"mutability":"mutable","name":"value","nameLocation":"34406:5:7","nodeType":"VariableDeclaration","scope":4212,"src":"34398:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4184,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:7"},"returnParameters":{"id":4189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4212,"src":"34436:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4187,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:7"},"scope":4223,"src":"34380:314:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4221,"nodeType":"Block","src":"34853:87:7","statements":[{"AST":{"nativeSrc":"34888:46:7","nodeType":"YulBlock","src":"34888:46:7","statements":[{"nativeSrc":"34902:22:7","nodeType":"YulAssignment","src":"34902:22:7","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:7","nodeType":"YulIdentifier","src":"34921:1:7"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:7","nodeType":"YulIdentifier","src":"34914:6:7"},"nativeSrc":"34914:9:7","nodeType":"YulFunctionCall","src":"34914:9:7"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:7","nodeType":"YulIdentifier","src":"34907:6:7"},"nativeSrc":"34907:17:7","nodeType":"YulFunctionCall","src":"34907:17:7"},"variableNames":[{"name":"u","nativeSrc":"34902:1:7","nodeType":"YulIdentifier","src":"34902:1:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4215,"isOffset":false,"isSlot":false,"src":"34921:1:7","valueSize":1},{"declaration":4218,"isOffset":false,"isSlot":false,"src":"34902:1:7","valueSize":1}],"flags":["memory-safe"],"id":4220,"nodeType":"InlineAssembly","src":"34863:71:7"}]},"documentation":{"id":4213,"nodeType":"StructuredDocumentation","src":"34700:90:7","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":4222,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:7","nodeType":"FunctionDefinition","parameters":{"id":4216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4215,"mutability":"mutable","name":"b","nameLocation":"34816:1:7","nodeType":"VariableDeclaration","scope":4222,"src":"34811:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4214,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:7"},"returnParameters":{"id":4219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4218,"mutability":"mutable","name":"u","nameLocation":"34850:1:7","nodeType":"VariableDeclaration","scope":4222,"src":"34842:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4217,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:7"},"scope":4223,"src":"34795:145:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4224,"src":"769:34173:7","usedErrors":[2468,2473,2480,2485],"usedEvents":[]}],"src":"192:34751:7"},"id":7},"contracts/Aggregator.sol":{"ast":{"absolutePath":"contracts/Aggregator.sol","exportedSymbols":{"Address":[4829],"Aggregator":[4507],"ERC20":[651],"IDexHandlerFactory":[4534],"IERC20":[729],"SafeERC20":[5054],"SwapMultiHop":[5261]},"id":4508,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4225,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"33:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":4227,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4508,"sourceUnit":730,"src":"61:70:8","symbolAliases":[{"foreign":{"id":4226,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"69:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":4229,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4508,"sourceUnit":652,"src":"133:68:8","symbolAliases":[{"foreign":{"id":4228,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"141:5:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IDexHandlerFactory.sol","file":"./interfaces/IDexHandlerFactory.sol","id":4231,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4508,"sourceUnit":4535,"src":"203:71:8","symbolAliases":[{"foreign":{"id":4230,"name":"IDexHandlerFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4534,"src":"211:18:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/structs/SAggregator.sol","file":"./structs/SAggregator.sol","id":4233,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4508,"sourceUnit":5262,"src":"276:55:8","symbolAliases":[{"foreign":{"id":4232,"name":"SwapMultiHop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"284:12:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/libraries/Address.sol","file":"./libraries/Address.sol","id":4235,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4508,"sourceUnit":4830,"src":"333:48:8","symbolAliases":[{"foreign":{"id":4234,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"341:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/libraries/SafeERC20.sol","file":"./libraries/SafeERC20.sol","id":4237,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4508,"sourceUnit":5055,"src":"383:52:8","symbolAliases":[{"foreign":{"id":4236,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"391:9:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Aggregator","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4507,"linearizedBaseContracts":[4507],"name":"Aggregator","nameLocation":"450:10:8","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4240,"libraryName":{"id":4238,"name":"Address","nameLocations":["474:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":4829,"src":"474:7:8"},"nodeType":"UsingForDirective","src":"468:26:8","typeName":{"id":4239,"name":"address","nodeType":"ElementaryTypeName","src":"486:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"global":false,"id":4244,"libraryName":{"id":4241,"name":"SafeERC20","nameLocations":["506:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":5054,"src":"506:9:8"},"nodeType":"UsingForDirective","src":"500:27:8","typeName":{"id":4243,"nodeType":"UserDefinedTypeName","pathNode":{"id":4242,"name":"IERC20","nameLocations":["520:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"520:6:8"},"referencedDeclaration":729,"src":"520:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}}},{"constant":false,"functionSelector":"c45a0155","id":4247,"mutability":"mutable","name":"factory","nameLocation":"561:7:8","nodeType":"VariableDeclaration","scope":4507,"src":"535:33:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IDexHandlerFactory_$4534","typeString":"contract IDexHandlerFactory"},"typeName":{"id":4246,"nodeType":"UserDefinedTypeName","pathNode":{"id":4245,"name":"IDexHandlerFactory","nameLocations":["535:18:8"],"nodeType":"IdentifierPath","referencedDeclaration":4534,"src":"535:18:8"},"referencedDeclaration":4534,"src":"535:18:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDexHandlerFactory_$4534","typeString":"contract IDexHandlerFactory"}},"visibility":"public"},{"constant":false,"functionSelector":"8da5cb5b","id":4249,"mutability":"mutable","name":"owner","nameLocation":"590:5:8","nodeType":"VariableDeclaration","scope":4507,"src":"575:20:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4248,"name":"address","nodeType":"ElementaryTypeName","src":"575:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"ad5c4648","id":4251,"mutability":"immutable","name":"WETH","nameLocation":"629:4:8","nodeType":"VariableDeclaration","scope":4507,"src":"604:29:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4250,"name":"address","nodeType":"ElementaryTypeName","src":"604:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":true,"id":4257,"mutability":"constant","name":"ETH_ADDRESS","nameLocation":"665:11:8","nodeType":"VariableDeclaration","scope":4507,"src":"640:90:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4252,"name":"address","nodeType":"ElementaryTypeName","src":"640:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"307845656565654565656545654565654565456545656545454565656565456565656565656545456545","id":4255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"687:42:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"679:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4253,"name":"address","nodeType":"ElementaryTypeName","src":"679:7:8","typeDescriptions":{}}},"id":4256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"679:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"canonicalName":"Aggregator.SwapStep","id":4268,"members":[{"constant":false,"id":4259,"mutability":"mutable","name":"router","nameLocation":"774:6:8","nodeType":"VariableDeclaration","scope":4268,"src":"766:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4258,"name":"address","nodeType":"ElementaryTypeName","src":"766:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4261,"mutability":"mutable","name":"tokenIn","nameLocation":"799:7:8","nodeType":"VariableDeclaration","scope":4268,"src":"791:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4260,"name":"address","nodeType":"ElementaryTypeName","src":"791:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4263,"mutability":"mutable","name":"tokenOut","nameLocation":"825:8:8","nodeType":"VariableDeclaration","scope":4268,"src":"817:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4262,"name":"address","nodeType":"ElementaryTypeName","src":"817:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4265,"mutability":"mutable","name":"dexType","nameLocation":"850:7:8","nodeType":"VariableDeclaration","scope":4268,"src":"844:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4264,"name":"uint8","nodeType":"ElementaryTypeName","src":"844:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4267,"mutability":"mutable","name":"fee","nameLocation":"876:3:8","nodeType":"VariableDeclaration","scope":4268,"src":"869:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4266,"name":"uint24","nodeType":"ElementaryTypeName","src":"869:6:8","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"name":"SwapStep","nameLocation":"746:8:8","nodeType":"StructDefinition","scope":4507,"src":"739:164:8","visibility":"public"},{"body":{"id":4279,"nodeType":"Block","src":"963:73:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4271,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"982:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"986:6:8","memberName":"sender","nodeType":"MemberAccess","src":"982:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4273,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"996:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"982:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79206f776e6572","id":4275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1003:12:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d9f114efaa93d67eedad749dd7fd16a6895ff93e28b7a30c667a069f2ed42d","typeString":"literal_string \"Only owner\""},"value":"Only owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d9f114efaa93d67eedad749dd7fd16a6895ff93e28b7a30c667a069f2ed42d","typeString":"literal_string \"Only owner\""}],"id":4270,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"974:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"974:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4277,"nodeType":"ExpressionStatement","src":"974:42:8"},{"id":4278,"nodeType":"PlaceholderStatement","src":"1027:1:8"}]},"id":4280,"name":"onlyOwner","nameLocation":"953:9:8","nodeType":"ModifierDefinition","parameters":{"id":4269,"nodeType":"ParameterList","parameters":[],"src":"963:0:8"},"src":"944:92:8","virtual":false,"visibility":"internal"},{"body":{"id":4306,"nodeType":"Block","src":"1074:155:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4286,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"1093:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1113:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1105:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4287,"name":"address","nodeType":"ElementaryTypeName","src":"1105:7:8","typeDescriptions":{}}},"id":4290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1105:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1093:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420666163746f72792061646472657373","id":4292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1117:25:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_16cfceb364b99915d337c26d8ba3bdcbce06c3595a535f586d679980d6a44d7d","typeString":"literal_string \"Invalid factory address\""},"value":"Invalid factory address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_16cfceb364b99915d337c26d8ba3bdcbce06c3595a535f586d679980d6a44d7d","typeString":"literal_string \"Invalid factory address\""}],"id":4285,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1085:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1085:58:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4294,"nodeType":"ExpressionStatement","src":"1085:58:8"},{"expression":{"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4295,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"1154:7:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDexHandlerFactory_$4534","typeString":"contract IDexHandlerFactory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4297,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"1183:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4296,"name":"IDexHandlerFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4534,"src":"1164:18:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IDexHandlerFactory_$4534_$","typeString":"type(contract IDexHandlerFactory)"}},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1164:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IDexHandlerFactory_$4534","typeString":"contract IDexHandlerFactory"}},"src":"1154:38:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDexHandlerFactory_$4534","typeString":"contract IDexHandlerFactory"}},"id":4300,"nodeType":"ExpressionStatement","src":"1154:38:8"},{"expression":{"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4301,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"1203:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4302,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1211:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1215:6:8","memberName":"sender","nodeType":"MemberAccess","src":"1211:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1203:18:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4305,"nodeType":"ExpressionStatement","src":"1203:18:8"}]},"id":4307,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4282,"mutability":"mutable","name":"_factory","nameLocation":"1064:8:8","nodeType":"VariableDeclaration","scope":4307,"src":"1056:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4281,"name":"address","nodeType":"ElementaryTypeName","src":"1056:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1055:18:8"},"returnParameters":{"id":4284,"nodeType":"ParameterList","parameters":[],"src":"1074:0:8"},"scope":4507,"src":"1044:185:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4310,"nodeType":"Block","src":"1264:2:8","statements":[]},"id":4311,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4308,"nodeType":"ParameterList","parameters":[],"src":"1244:2:8"},"returnParameters":{"id":4309,"nodeType":"ParameterList","parameters":[],"src":"1264:0:8"},"scope":4507,"src":"1237:29:8","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4335,"nodeType":"Block","src":"1356:149:8","statements":[{"condition":{"arguments":[{"id":4322,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4314,"src":"1377:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}],"id":4321,"name":"isETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"1371:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_contract$_IERC20_$729_$returns$_t_bool_$","typeString":"function (contract IERC20) view returns (bool)"}},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1371:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4333,"nodeType":"Block","src":"1440:58:8","statements":[{"expression":{"arguments":[{"id":4330,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"1478:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4328,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4314,"src":"1462:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1468:9:8","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":686,"src":"1462:15:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1462:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4320,"id":4332,"nodeType":"Return","src":"1455:31:8"}]},"id":4334,"nodeType":"IfStatement","src":"1367:131:8","trueBody":{"id":4327,"nodeType":"Block","src":"1385:49:8","statements":[{"expression":{"expression":{"id":4324,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"1407:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1415:7:8","memberName":"balance","nodeType":"MemberAccess","src":"1407:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4320,"id":4326,"nodeType":"Return","src":"1400:22:8"}]}}]},"id":4336,"implemented":true,"kind":"function","modifiers":[],"name":"getBalance","nameLocation":"1283:10:8","nodeType":"FunctionDefinition","parameters":{"id":4317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4314,"mutability":"mutable","name":"token","nameLocation":"1301:5:8","nodeType":"VariableDeclaration","scope":4336,"src":"1294:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},"typeName":{"id":4313,"nodeType":"UserDefinedTypeName","pathNode":{"id":4312,"name":"IERC20","nameLocations":["1294:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"1294:6:8"},"referencedDeclaration":729,"src":"1294:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4316,"mutability":"mutable","name":"account","nameLocation":"1316:7:8","nodeType":"VariableDeclaration","scope":4336,"src":"1308:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4315,"name":"address","nodeType":"ElementaryTypeName","src":"1308:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1293:31:8"},"returnParameters":{"id":4320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4336,"src":"1347:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4318,"name":"uint256","nodeType":"ElementaryTypeName","src":"1347:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1346:9:8"},"scope":4507,"src":"1274:231:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4356,"nodeType":"Block","src":"1577:71:8","statements":[{"expression":{"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4344,"name":"iseth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"1588:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4347,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"1604:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}],"id":4346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1596:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4345,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:8","typeDescriptions":{}}},"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1596:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4349,"name":"ETH_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4257,"src":"1614:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1596:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"66616c7365","id":4352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1635:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1596:44:8","trueExpression":{"hexValue":"74727565","id":4351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1628:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1588:52:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4355,"nodeType":"ExpressionStatement","src":"1588:52:8"}]},"id":4357,"implemented":true,"kind":"function","modifiers":[],"name":"isETH","nameLocation":"1522:5:8","nodeType":"FunctionDefinition","parameters":{"id":4340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4339,"mutability":"mutable","name":"token","nameLocation":"1535:5:8","nodeType":"VariableDeclaration","scope":4357,"src":"1528:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},"typeName":{"id":4338,"nodeType":"UserDefinedTypeName","pathNode":{"id":4337,"name":"IERC20","nameLocations":["1528:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"1528:6:8"},"referencedDeclaration":729,"src":"1528:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"1527:14:8"},"returnParameters":{"id":4343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4342,"mutability":"mutable","name":"iseth","nameLocation":"1570:5:8","nodeType":"VariableDeclaration","scope":4357,"src":"1565:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4341,"name":"bool","nodeType":"ElementaryTypeName","src":"1565:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1564:12:8"},"scope":4507,"src":"1513:135:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4474,"nodeType":"Block","src":"1762:1126:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4366,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"1781:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapMultiHop_$5261_calldata_ptr","typeString":"struct SwapMultiHop calldata"}},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1788:8:8","memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":5257,"src":"1781:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1800:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1781:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54686520616d6f756e7420666f722073776170206973207a65726f","id":4370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1803:29:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_46f23f0df13d0e943c450e2a9aba8f479be58f4951eb3d14222cd3501b7ab991","typeString":"literal_string \"The amount for swap is zero\""},"value":"The amount for swap is zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_46f23f0df13d0e943c450e2a9aba8f479be58f4951eb3d14222cd3501b7ab991","typeString":"literal_string \"The amount for swap is zero\""}],"id":4365,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1773:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1773:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4372,"nodeType":"ExpressionStatement","src":"1773:60:8"},{"assignments":[4374],"declarations":[{"constant":false,"id":4374,"mutability":"mutable","name":"dexHandler","nameLocation":"1852:10:8","nodeType":"VariableDeclaration","scope":4474,"src":"1844:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4373,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4375,"nodeType":"VariableDeclarationStatement","src":"1844:18:8"},{"assignments":[4377],"declarations":[{"constant":false,"id":4377,"mutability":"mutable","name":"amountIn","nameLocation":"1881:8:8","nodeType":"VariableDeclaration","scope":4474,"src":"1873:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4376,"name":"uint256","nodeType":"ElementaryTypeName","src":"1873:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4378,"nodeType":"VariableDeclarationStatement","src":"1873:16:8"},{"expression":{"arguments":[{"expression":{"id":4386,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1941:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1945:6:8","memberName":"sender","nodeType":"MemberAccess","src":"1941:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4390,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1961:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Aggregator_$4507","typeString":"contract Aggregator"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Aggregator_$4507","typeString":"contract Aggregator"}],"id":4389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1953:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4388,"name":"address","nodeType":"ElementaryTypeName","src":"1953:7:8","typeDescriptions":{}}},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1953:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4392,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"1968:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapMultiHop_$5261_calldata_ptr","typeString":"struct SwapMultiHop calldata"}},"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1975:8:8","memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":5257,"src":"1968:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"expression":{"id":4380,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"1909:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapMultiHop_$5261_calldata_ptr","typeString":"struct SwapMultiHop calldata"}},"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1916:7:8","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":5255,"src":"1909:14:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4383,"indexExpression":{"hexValue":"30","id":4382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1924:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1909:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4379,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"1902:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$729_$","typeString":"type(contract IERC20)"}},"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1902:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:12:8","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":728,"src":"1902:38:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1902:82:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4395,"nodeType":"ExpressionStatement","src":"1902:82:8"},{"body":{"id":4472,"nodeType":"Block","src":"2047:834:8","statements":[{"assignments":[4409],"declarations":[{"constant":false,"id":4409,"mutability":"mutable","name":"_tokenIn","nameLocation":"2070:8:8","nodeType":"VariableDeclaration","scope":4472,"src":"2062:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4408,"name":"address","nodeType":"ElementaryTypeName","src":"2062:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4414,"initialValue":{"baseExpression":{"expression":{"id":4410,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"2081:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapMultiHop_$5261_calldata_ptr","typeString":"struct SwapMultiHop calldata"}},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2088:7:8","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":5255,"src":"2081:14:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4413,"indexExpression":{"id":4412,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"2096:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2081:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2062:36:8"},{"expression":{"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4415,"name":"dexHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"2169:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"expression":{"id":4418,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"2202:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapMultiHop_$5261_calldata_ptr","typeString":"struct SwapMultiHop calldata"}},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2209:13:8","memberName":"dexHandlerIds","nodeType":"MemberAccess","referencedDeclaration":5252,"src":"2202:20:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_calldata_ptr","typeString":"uint8[] calldata"}},"id":4421,"indexExpression":{"id":4420,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"2223:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2202:23:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":4416,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"2182:7:8","typeDescriptions":{"typeIdentifier":"t_contract$_IDexHandlerFactory_$4534","typeString":"contract IDexHandlerFactory"}},"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2190:11:8","memberName":"dexHandlers","nodeType":"MemberAccess","referencedDeclaration":4516,"src":"2182:19:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint8_$returns$_t_address_$","typeString":"function (uint8) view external returns (address)"}},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2182:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:57:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4424,"nodeType":"ExpressionStatement","src":"2169:57:8"},{"expression":{"arguments":[{"baseExpression":{"expression":{"id":4429,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"2266:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapMultiHop_$5261_calldata_ptr","typeString":"struct SwapMultiHop calldata"}},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2273:7:8","memberName":"routers","nodeType":"MemberAccess","referencedDeclaration":5249,"src":"2266:14:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4432,"indexExpression":{"id":4431,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"2281:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2266:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4433,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"2285:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapMultiHop_$5261_calldata_ptr","typeString":"struct SwapMultiHop calldata"}},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2292:8:8","memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":5257,"src":"2285:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4426,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"2248:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4425,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"2241:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$729_$","typeString":"type(contract IERC20)"}},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2241:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2258:7:8","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":716,"src":"2241:24:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2241:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4436,"nodeType":"ExpressionStatement","src":"2241:60:8"},{"assignments":[4438],"declarations":[{"constant":false,"id":4438,"mutability":"mutable","name":"result","nameLocation":"2432:6:8","nodeType":"VariableDeclaration","scope":4472,"src":"2419:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4437,"name":"bytes","nodeType":"ElementaryTypeName","src":"2419:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4457,"initialValue":{"arguments":[{"arguments":[{"hexValue":"657865637574655377617028616464726573732c627974657329","id":4446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2506:28:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_03f7c80f3aeb148d33446eaf27a0e656bb89f7d0218f3e4263589294b14612cf","typeString":"literal_string \"executeSwap(address,bytes)\""},"value":"executeSwap(address,bytes)"},{"baseExpression":{"expression":{"id":4447,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"2536:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapMultiHop_$5261_calldata_ptr","typeString":"struct SwapMultiHop calldata"}},"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2543:7:8","memberName":"routers","nodeType":"MemberAccess","referencedDeclaration":5249,"src":"2536:14:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4450,"indexExpression":{"id":4449,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"2551:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2536:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"expression":{"id":4451,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"2555:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapMultiHop_$5261_calldata_ptr","typeString":"struct SwapMultiHop calldata"}},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2562:4:8","memberName":"data","nodeType":"MemberAccess","referencedDeclaration":5260,"src":"2555:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":4454,"indexExpression":{"id":4453,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"2567:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2555:14:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_03f7c80f3aeb148d33446eaf27a0e656bb89f7d0218f3e4263589294b14612cf","typeString":"literal_string \"executeSwap(address,bytes)\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":4444,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2482:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2486:19:8","memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"2482:23:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2482:88:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":4441,"name":"dexHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"2449:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2441:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4439,"name":"address","nodeType":"ElementaryTypeName","src":"2441:7:8","typeDescriptions":{}}},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2441:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2461:20:8","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":4762,"src":"2441:40:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2441:130:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2419:152:8"},{"expression":{"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4458,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"2793:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4461,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"2816:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":4463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2825:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4462,"name":"uint256","nodeType":"ElementaryTypeName","src":"2825:7:8","typeDescriptions":{}}}],"id":4464,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2824:9:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"expression":{"id":4459,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2805:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2809:6:8","memberName":"decode","nodeType":"MemberAccess","src":"2805:10:8","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2805:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2793:41:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4467,"nodeType":"ExpressionStatement","src":"2793:41:8"},{"expression":{"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4468,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"2849:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4469,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"2860:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2849:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4471,"nodeType":"ExpressionStatement","src":"2849:20:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4400,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"2015:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":4401,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"2019:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapMultiHop_$5261_calldata_ptr","typeString":"struct SwapMultiHop calldata"}},"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2026:7:8","memberName":"routers","nodeType":"MemberAccess","referencedDeclaration":5249,"src":"2019:14:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2034:6:8","memberName":"length","nodeType":"MemberAccess","src":"2019:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2015:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4473,"initializationExpression":{"assignments":[4397],"declarations":[{"constant":false,"id":4397,"mutability":"mutable","name":"i","nameLocation":"2008:1:8","nodeType":"VariableDeclaration","scope":4473,"src":"2002:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4396,"name":"uint8","nodeType":"ElementaryTypeName","src":"2002:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4399,"initialValue":{"hexValue":"30","id":4398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2012:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2002:11:8"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2042:3:8","subExpression":{"id":4405,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"2042:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4407,"nodeType":"ExpressionStatement","src":"2042:3:8"},"nodeType":"ForStatement","src":"1997:884:8"}]},"functionSelector":"d4a3f3c7","id":4475,"implemented":true,"kind":"function","modifiers":[],"name":"swapMultiHop","nameLocation":"1669:12:8","nodeType":"FunctionDefinition","parameters":{"id":4361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4360,"mutability":"mutable","name":"params","nameLocation":"1714:6:8","nodeType":"VariableDeclaration","scope":4475,"src":"1692:28:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SwapMultiHop_$5261_calldata_ptr","typeString":"struct SwapMultiHop"},"typeName":{"id":4359,"nodeType":"UserDefinedTypeName","pathNode":{"id":4358,"name":"SwapMultiHop","nameLocations":["1692:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":5261,"src":"1692:12:8"},"referencedDeclaration":5261,"src":"1692:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapMultiHop_$5261_storage_ptr","typeString":"struct SwapMultiHop"}},"visibility":"internal"}],"src":"1681:46:8"},"returnParameters":{"id":4364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4363,"mutability":"mutable","name":"amountOut","nameLocation":"1751:9:8","nodeType":"VariableDeclaration","scope":4475,"src":"1743:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4362,"name":"uint256","nodeType":"ElementaryTypeName","src":"1743:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1742:19:8"},"scope":4507,"src":"1660:1228:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4505,"nodeType":"Block","src":"3004:125:8","statements":[{"body":{"id":4503,"nodeType":"Block","src":"3059:63:8","statements":[{"expression":{"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4495,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4482,"src":"3074:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"baseExpression":{"id":4497,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"3100:6:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapMultiHop_$5261_calldata_ptr_$dyn_calldata_ptr","typeString":"struct SwapMultiHop calldata[] calldata"}},"id":4499,"indexExpression":{"id":4498,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"3107:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3100:9:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapMultiHop_$5261_calldata_ptr","typeString":"struct SwapMultiHop calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_SwapMultiHop_$5261_calldata_ptr","typeString":"struct SwapMultiHop calldata"}],"id":4496,"name":"swapMultiHop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"3087:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_SwapMultiHop_$5261_calldata_ptr_$returns$_t_uint256_$","typeString":"function (struct SwapMultiHop calldata) returns (uint256)"}},"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3087:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3074:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4502,"nodeType":"ExpressionStatement","src":"3074:36:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4488,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"3035:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4489,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"3039:6:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapMultiHop_$5261_calldata_ptr_$dyn_calldata_ptr","typeString":"struct SwapMultiHop calldata[] calldata"}},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3046:6:8","memberName":"length","nodeType":"MemberAccess","src":"3039:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3035:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4504,"initializationExpression":{"assignments":[4485],"declarations":[{"constant":false,"id":4485,"mutability":"mutable","name":"i","nameLocation":"3028:1:8","nodeType":"VariableDeclaration","scope":4504,"src":"3020:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4484,"name":"uint256","nodeType":"ElementaryTypeName","src":"3020:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4487,"initialValue":{"hexValue":"30","id":4486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3020:13:8"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3054:3:8","subExpression":{"id":4492,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"3054:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4494,"nodeType":"ExpressionStatement","src":"3054:3:8"},"nodeType":"ForStatement","src":"3015:107:8"}]},"functionSelector":"11eac87a","id":4506,"implemented":true,"kind":"function","modifiers":[],"name":"swapMultiRoute","nameLocation":"2905:14:8","nodeType":"FunctionDefinition","parameters":{"id":4480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4479,"mutability":"mutable","name":"params","nameLocation":"2954:6:8","nodeType":"VariableDeclaration","scope":4506,"src":"2930:30:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapMultiHop_$5261_calldata_ptr_$dyn_calldata_ptr","typeString":"struct SwapMultiHop[]"},"typeName":{"baseType":{"id":4477,"nodeType":"UserDefinedTypeName","pathNode":{"id":4476,"name":"SwapMultiHop","nameLocations":["2930:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":5261,"src":"2930:12:8"},"referencedDeclaration":5261,"src":"2930:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_SwapMultiHop_$5261_storage_ptr","typeString":"struct SwapMultiHop"}},"id":4478,"nodeType":"ArrayTypeName","src":"2930:14:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapMultiHop_$5261_storage_$dyn_storage_ptr","typeString":"struct SwapMultiHop[]"}},"visibility":"internal"}],"src":"2919:48:8"},"returnParameters":{"id":4483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4482,"mutability":"mutable","name":"amountOut","nameLocation":"2993:9:8","nodeType":"VariableDeclaration","scope":4506,"src":"2985:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4481,"name":"uint256","nodeType":"ElementaryTypeName","src":"2985:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2984:19:8"},"scope":4507,"src":"2896:233:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4508,"src":"441:2701:8","usedErrors":[],"usedEvents":[]}],"src":"33:3109:8"},"id":8},"contracts/interfaces/IDexHandlerFactory.sol":{"ast":{"absolutePath":"contracts/interfaces/IDexHandlerFactory.sol","exportedSymbols":{"IDexHandlerFactory":[4534]},"id":4535,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4509,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"33:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IDexHandlerFactory","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4534,"linearizedBaseContracts":[4534],"name":"IDexHandlerFactory","nameLocation":"71:18:9","nodeType":"ContractDefinition","nodes":[{"functionSelector":"4fa29352","id":4516,"implemented":false,"kind":"function","modifiers":[],"name":"dexHandlers","nameLocation":"163:11:9","nodeType":"FunctionDefinition","parameters":{"id":4512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4516,"src":"175:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4510,"name":"uint8","nodeType":"ElementaryTypeName","src":"175:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"174:7:9"},"returnParameters":{"id":4515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4516,"src":"205:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4513,"name":"address","nodeType":"ElementaryTypeName","src":"205:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"204:9:9"},"scope":4534,"src":"154:60:9","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8da5cb5b","id":4521,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"274:5:9","nodeType":"FunctionDefinition","parameters":{"id":4517,"nodeType":"ParameterList","parameters":[],"src":"279:2:9"},"returnParameters":{"id":4520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4521,"src":"305:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4518,"name":"address","nodeType":"ElementaryTypeName","src":"305:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"304:9:9"},"scope":4534,"src":"265:49:9","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"af640d0f","id":4526,"implemented":false,"kind":"function","modifiers":[],"name":"id","nameLocation":"366:2:9","nodeType":"FunctionDefinition","parameters":{"id":4522,"nodeType":"ParameterList","parameters":[],"src":"368:2:9"},"returnParameters":{"id":4525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4526,"src":"394:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4523,"name":"uint8","nodeType":"ElementaryTypeName","src":"394:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"393:7:9"},"scope":4534,"src":"357:44:9","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b6b2a82f","id":4533,"implemented":false,"kind":"function","modifiers":[],"name":"setDexHandler","nameLocation":"463:13:9","nodeType":"FunctionDefinition","parameters":{"id":4529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4528,"mutability":"mutable","name":"dexHandler","nameLocation":"485:10:9","nodeType":"VariableDeclaration","scope":4533,"src":"477:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4527,"name":"address","nodeType":"ElementaryTypeName","src":"477:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"476:20:9"},"returnParameters":{"id":4532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4533,"src":"515:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4530,"name":"uint8","nodeType":"ElementaryTypeName","src":"515:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"514:7:9"},"scope":4534,"src":"454:68:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4535,"src":"61:464:9","usedErrors":[],"usedEvents":[]}],"src":"33:492:9"},"id":9},"contracts/libraries/Address.sol":{"ast":{"absolutePath":"contracts/libraries/Address.sol","exportedSymbols":{"Address":[4829]},"id":4830,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4536,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"33:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":4537,"nodeType":"StructuredDocumentation","src":"61:69:10","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":4829,"linearizedBaseContracts":[4829],"name":"Address","nameLocation":"140:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":4551,"nodeType":"Block","src":"1206:260:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":4545,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"1435:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1443:4:10","memberName":"code","nodeType":"MemberAccess","src":"1435:12:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1448:6:10","memberName":"length","nodeType":"MemberAccess","src":"1435:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1457:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1435:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4544,"id":4550,"nodeType":"Return","src":"1428:30:10"}]},"documentation":{"id":4538,"nodeType":"StructuredDocumentation","src":"155:979:10","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":4552,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1149:10:10","nodeType":"FunctionDefinition","parameters":{"id":4541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4540,"mutability":"mutable","name":"account","nameLocation":"1168:7:10","nodeType":"VariableDeclaration","scope":4552,"src":"1160:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4539,"name":"address","nodeType":"ElementaryTypeName","src":"1160:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1159:17:10"},"returnParameters":{"id":4544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4552,"src":"1200:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4542,"name":"bool","nodeType":"ElementaryTypeName","src":"1200:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1199:6:10"},"scope":4829,"src":"1140:326:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4585,"nodeType":"Block","src":"2472:246:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4563,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2499:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$4829","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$4829","typeString":"library Address"}],"id":4562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2491:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4561,"name":"address","nodeType":"ElementaryTypeName","src":"2491:7:10","typeDescriptions":{}}},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2491:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2505:7:10","memberName":"balance","nodeType":"MemberAccess","src":"2491:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4566,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"2516:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2491:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":4568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2524:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":4560,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2483:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2483:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4570,"nodeType":"ExpressionStatement","src":"2483:73:10"},{"assignments":[4572,null],"declarations":[{"constant":false,"id":4572,"mutability":"mutable","name":"success","nameLocation":"2575:7:10","nodeType":"VariableDeclaration","scope":4585,"src":"2570:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4571,"name":"bool","nodeType":"ElementaryTypeName","src":"2570:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":4579,"initialValue":{"arguments":[{"hexValue":"","id":4577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2618:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":4573,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"2588:9:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2598:4:10","memberName":"call","nodeType":"MemberAccess","src":"2588:14:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4575,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"2610:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2588:29:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2588:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2569:52:10"},{"expression":{"arguments":[{"id":4581,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"2640:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":4582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2649:60:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":4580,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2632:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2632:78:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4584,"nodeType":"ExpressionStatement","src":"2632:78:10"}]},"documentation":{"id":4553,"nodeType":"StructuredDocumentation","src":"1474:921:10","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":4586,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2410:9:10","nodeType":"FunctionDefinition","parameters":{"id":4558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4555,"mutability":"mutable","name":"recipient","nameLocation":"2436:9:10","nodeType":"VariableDeclaration","scope":4586,"src":"2420:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":4554,"name":"address","nodeType":"ElementaryTypeName","src":"2420:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":4557,"mutability":"mutable","name":"amount","nameLocation":"2455:6:10","nodeType":"VariableDeclaration","scope":4586,"src":"2447:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4556,"name":"uint256","nodeType":"ElementaryTypeName","src":"2447:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2419:43:10"},"returnParameters":{"id":4559,"nodeType":"ParameterList","parameters":[],"src":"2472:0:10"},"scope":4829,"src":"2401:317:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4602,"nodeType":"Block","src":"3569:86:10","statements":[{"expression":{"arguments":[{"id":4597,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4589,"src":"3600:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4598,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"3608:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":4599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3614:32:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":4596,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[4603,4623],"referencedDeclaration":4623,"src":"3587:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3587:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4595,"id":4601,"nodeType":"Return","src":"3580:67:10"}]},"documentation":{"id":4587,"nodeType":"StructuredDocumentation","src":"2726:748:10","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":4603,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3489:12:10","nodeType":"FunctionDefinition","parameters":{"id":4592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4589,"mutability":"mutable","name":"target","nameLocation":"3510:6:10","nodeType":"VariableDeclaration","scope":4603,"src":"3502:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4588,"name":"address","nodeType":"ElementaryTypeName","src":"3502:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4591,"mutability":"mutable","name":"data","nameLocation":"3531:4:10","nodeType":"VariableDeclaration","scope":4603,"src":"3518:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4590,"name":"bytes","nodeType":"ElementaryTypeName","src":"3518:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3501:35:10"},"returnParameters":{"id":4595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4603,"src":"3555:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4593,"name":"bytes","nodeType":"ElementaryTypeName","src":"3555:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3554:14:10"},"scope":4829,"src":"3480:175:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4622,"nodeType":"Block","src":"4036:78:10","statements":[{"expression":{"arguments":[{"id":4616,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"4076:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4617,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"4084:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":4618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4090:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4619,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"4093:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4615,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[4643,4693],"referencedDeclaration":4693,"src":"4054:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4054:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4614,"id":4621,"nodeType":"Return","src":"4047:59:10"}]},"documentation":{"id":4604,"nodeType":"StructuredDocumentation","src":"3663:216:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":4623,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3894:12:10","nodeType":"FunctionDefinition","parameters":{"id":4611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4606,"mutability":"mutable","name":"target","nameLocation":"3925:6:10","nodeType":"VariableDeclaration","scope":4623,"src":"3917:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4605,"name":"address","nodeType":"ElementaryTypeName","src":"3917:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4608,"mutability":"mutable","name":"data","nameLocation":"3955:4:10","nodeType":"VariableDeclaration","scope":4623,"src":"3942:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4607,"name":"bytes","nodeType":"ElementaryTypeName","src":"3942:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4610,"mutability":"mutable","name":"errorMessage","nameLocation":"3984:12:10","nodeType":"VariableDeclaration","scope":4623,"src":"3970:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4609,"name":"string","nodeType":"ElementaryTypeName","src":"3970:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3906:97:10"},"returnParameters":{"id":4614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4623,"src":"4022:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4612,"name":"bytes","nodeType":"ElementaryTypeName","src":"4022:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4021:14:10"},"scope":4829,"src":"3885:229:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4642,"nodeType":"Block","src":"4636:113:10","statements":[{"expression":{"arguments":[{"id":4636,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"4676:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4637,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"4684:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"4690:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":4639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4697:43:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":4635,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[4643,4693],"referencedDeclaration":4693,"src":"4654:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4654:87:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4634,"id":4641,"nodeType":"Return","src":"4647:94:10"}]},"documentation":{"id":4624,"nodeType":"StructuredDocumentation","src":"4122:361:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":4643,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4498:21:10","nodeType":"FunctionDefinition","parameters":{"id":4631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4626,"mutability":"mutable","name":"target","nameLocation":"4538:6:10","nodeType":"VariableDeclaration","scope":4643,"src":"4530:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4625,"name":"address","nodeType":"ElementaryTypeName","src":"4530:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4628,"mutability":"mutable","name":"data","nameLocation":"4568:4:10","nodeType":"VariableDeclaration","scope":4643,"src":"4555:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4627,"name":"bytes","nodeType":"ElementaryTypeName","src":"4555:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4630,"mutability":"mutable","name":"value","nameLocation":"4591:5:10","nodeType":"VariableDeclaration","scope":4643,"src":"4583:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4629,"name":"uint256","nodeType":"ElementaryTypeName","src":"4583:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4519:84:10"},"returnParameters":{"id":4634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4643,"src":"4622:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4632,"name":"bytes","nodeType":"ElementaryTypeName","src":"4622:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4621:14:10"},"scope":4829,"src":"4489:260:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4692,"nodeType":"Block","src":"5189:326:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4660,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5216:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$4829","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$4829","typeString":"library Address"}],"id":4659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5208:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4658,"name":"address","nodeType":"ElementaryTypeName","src":"5208:7:10","typeDescriptions":{}}},"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5208:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5222:7:10","memberName":"balance","nodeType":"MemberAccess","src":"5208:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"5233:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5208:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":4665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5240:40:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":4657,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5200:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5200:81:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4667,"nodeType":"ExpressionStatement","src":"5200:81:10"},{"expression":{"arguments":[{"arguments":[{"id":4670,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4646,"src":"5311:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4669,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"5300:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":4671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5300:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":4672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5320:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":4668,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5292:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5292:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4674,"nodeType":"ExpressionStatement","src":"5292:60:10"},{"assignments":[4676,4678],"declarations":[{"constant":false,"id":4676,"mutability":"mutable","name":"success","nameLocation":"5371:7:10","nodeType":"VariableDeclaration","scope":4692,"src":"5366:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4675,"name":"bool","nodeType":"ElementaryTypeName","src":"5366:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4678,"mutability":"mutable","name":"returndata","nameLocation":"5393:10:10","nodeType":"VariableDeclaration","scope":4692,"src":"5380:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4677,"name":"bytes","nodeType":"ElementaryTypeName","src":"5380:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4685,"initialValue":{"arguments":[{"id":4683,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"5433:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4679,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4646,"src":"5407:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5414:4:10","memberName":"call","nodeType":"MemberAccess","src":"5407:11:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"5426:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5407:25:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5365:73:10"},{"expression":{"arguments":[{"id":4687,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"5473:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4688,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"5482:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4689,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"5494:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4686,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"5456:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5456:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4656,"id":4691,"nodeType":"Return","src":"5449:58:10"}]},"documentation":{"id":4644,"nodeType":"StructuredDocumentation","src":"4757:242:10","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":4693,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5014:21:10","nodeType":"FunctionDefinition","parameters":{"id":4653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4646,"mutability":"mutable","name":"target","nameLocation":"5054:6:10","nodeType":"VariableDeclaration","scope":4693,"src":"5046:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4645,"name":"address","nodeType":"ElementaryTypeName","src":"5046:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4648,"mutability":"mutable","name":"data","nameLocation":"5084:4:10","nodeType":"VariableDeclaration","scope":4693,"src":"5071:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4647,"name":"bytes","nodeType":"ElementaryTypeName","src":"5071:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4650,"mutability":"mutable","name":"value","nameLocation":"5107:5:10","nodeType":"VariableDeclaration","scope":4693,"src":"5099:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4649,"name":"uint256","nodeType":"ElementaryTypeName","src":"5099:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4652,"mutability":"mutable","name":"errorMessage","nameLocation":"5137:12:10","nodeType":"VariableDeclaration","scope":4693,"src":"5123:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4651,"name":"string","nodeType":"ElementaryTypeName","src":"5123:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5035:121:10"},"returnParameters":{"id":4656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4693,"src":"5175:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4654,"name":"bytes","nodeType":"ElementaryTypeName","src":"5175:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5174:14:10"},"scope":4829,"src":"5005:510:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4709,"nodeType":"Block","src":"5800:99:10","statements":[{"expression":{"arguments":[{"id":4704,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4696,"src":"5837:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4705,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"5845:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":4706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5851:39:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":4703,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[4710,4745],"referencedDeclaration":4745,"src":"5818:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5818:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4702,"id":4708,"nodeType":"Return","src":"5811:80:10"}]},"documentation":{"id":4694,"nodeType":"StructuredDocumentation","src":"5523:171:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":4710,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5709:18:10","nodeType":"FunctionDefinition","parameters":{"id":4699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4696,"mutability":"mutable","name":"target","nameLocation":"5736:6:10","nodeType":"VariableDeclaration","scope":4710,"src":"5728:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4695,"name":"address","nodeType":"ElementaryTypeName","src":"5728:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4698,"mutability":"mutable","name":"data","nameLocation":"5757:4:10","nodeType":"VariableDeclaration","scope":4710,"src":"5744:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4697,"name":"bytes","nodeType":"ElementaryTypeName","src":"5744:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5727:35:10"},"returnParameters":{"id":4702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4710,"src":"5786:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4700,"name":"bytes","nodeType":"ElementaryTypeName","src":"5786:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5785:14:10"},"scope":4829,"src":"5700:199:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4744,"nodeType":"Block","src":"6253:233:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":4724,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4713,"src":"6283:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4723,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"6272:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6272:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":4726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6292:38:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":4722,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6264:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6264:67:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4728,"nodeType":"ExpressionStatement","src":"6264:67:10"},{"assignments":[4730,4732],"declarations":[{"constant":false,"id":4730,"mutability":"mutable","name":"success","nameLocation":"6350:7:10","nodeType":"VariableDeclaration","scope":4744,"src":"6345:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4729,"name":"bool","nodeType":"ElementaryTypeName","src":"6345:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4732,"mutability":"mutable","name":"returndata","nameLocation":"6372:10:10","nodeType":"VariableDeclaration","scope":4744,"src":"6359:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4731,"name":"bytes","nodeType":"ElementaryTypeName","src":"6359:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4737,"initialValue":{"arguments":[{"id":4735,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"6404:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4733,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4713,"src":"6386:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6393:10:10","memberName":"staticcall","nodeType":"MemberAccess","src":"6386:17:10","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6386:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6344:65:10"},{"expression":{"arguments":[{"id":4739,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4730,"src":"6444:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4740,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"6453:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4741,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"6465:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4738,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"6427:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6427:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4721,"id":4743,"nodeType":"Return","src":"6420:58:10"}]},"documentation":{"id":4711,"nodeType":"StructuredDocumentation","src":"5907:178:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":4745,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6100:18:10","nodeType":"FunctionDefinition","parameters":{"id":4718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4713,"mutability":"mutable","name":"target","nameLocation":"6137:6:10","nodeType":"VariableDeclaration","scope":4745,"src":"6129:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4712,"name":"address","nodeType":"ElementaryTypeName","src":"6129:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4715,"mutability":"mutable","name":"data","nameLocation":"6167:4:10","nodeType":"VariableDeclaration","scope":4745,"src":"6154:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4714,"name":"bytes","nodeType":"ElementaryTypeName","src":"6154:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4717,"mutability":"mutable","name":"errorMessage","nameLocation":"6196:12:10","nodeType":"VariableDeclaration","scope":4745,"src":"6182:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4716,"name":"string","nodeType":"ElementaryTypeName","src":"6182:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6118:97:10"},"returnParameters":{"id":4721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4745,"src":"6239:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4719,"name":"bytes","nodeType":"ElementaryTypeName","src":"6239:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6238:14:10"},"scope":4829,"src":"6091:395:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4761,"nodeType":"Block","src":"6770:103:10","statements":[{"expression":{"arguments":[{"id":4756,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4748,"src":"6809:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4757,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"6817:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":4758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":4755,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[4762,4797],"referencedDeclaration":4797,"src":"6788:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4754,"id":4760,"nodeType":"Return","src":"6781:84:10"}]},"documentation":{"id":4746,"nodeType":"StructuredDocumentation","src":"6494:173:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":4762,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6682:20:10","nodeType":"FunctionDefinition","parameters":{"id":4751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4748,"mutability":"mutable","name":"target","nameLocation":"6711:6:10","nodeType":"VariableDeclaration","scope":4762,"src":"6703:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4747,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4750,"mutability":"mutable","name":"data","nameLocation":"6732:4:10","nodeType":"VariableDeclaration","scope":4762,"src":"6719:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4749,"name":"bytes","nodeType":"ElementaryTypeName","src":"6719:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6702:35:10"},"returnParameters":{"id":4754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4762,"src":"6756:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4752,"name":"bytes","nodeType":"ElementaryTypeName","src":"6756:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6755:14:10"},"scope":4829,"src":"6673:200:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4796,"nodeType":"Block","src":"7226:237:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":4776,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"7256:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4775,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"7245:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7245:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":4778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7265:40:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":4774,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7237:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7237:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4780,"nodeType":"ExpressionStatement","src":"7237:69:10"},{"assignments":[4782,4784],"declarations":[{"constant":false,"id":4782,"mutability":"mutable","name":"success","nameLocation":"7325:7:10","nodeType":"VariableDeclaration","scope":4796,"src":"7320:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4781,"name":"bool","nodeType":"ElementaryTypeName","src":"7320:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4784,"mutability":"mutable","name":"returndata","nameLocation":"7347:10:10","nodeType":"VariableDeclaration","scope":4796,"src":"7334:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4783,"name":"bytes","nodeType":"ElementaryTypeName","src":"7334:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4789,"initialValue":{"arguments":[{"id":4787,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"7381:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4785,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"7361:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7368:12:10","memberName":"delegatecall","nodeType":"MemberAccess","src":"7361:19:10","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7361:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7319:67:10"},{"expression":{"arguments":[{"id":4791,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"7421:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4792,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4784,"src":"7430:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4793,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"7442:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4790,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"7404:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4773,"id":4795,"nodeType":"Return","src":"7397:58:10"}]},"documentation":{"id":4763,"nodeType":"StructuredDocumentation","src":"6881:180:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":4797,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7076:20:10","nodeType":"FunctionDefinition","parameters":{"id":4770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4765,"mutability":"mutable","name":"target","nameLocation":"7115:6:10","nodeType":"VariableDeclaration","scope":4797,"src":"7107:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4764,"name":"address","nodeType":"ElementaryTypeName","src":"7107:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4767,"mutability":"mutable","name":"data","nameLocation":"7145:4:10","nodeType":"VariableDeclaration","scope":4797,"src":"7132:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4766,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4769,"mutability":"mutable","name":"errorMessage","nameLocation":"7174:12:10","nodeType":"VariableDeclaration","scope":4797,"src":"7160:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4768,"name":"string","nodeType":"ElementaryTypeName","src":"7160:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7096:97:10"},"returnParameters":{"id":4773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4797,"src":"7212:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4771,"name":"bytes","nodeType":"ElementaryTypeName","src":"7212:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7211:14:10"},"scope":4829,"src":"7067:396:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4827,"nodeType":"Block","src":"7855:548:10","statements":[{"condition":{"id":4809,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"7870:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4825,"nodeType":"Block","src":"7929:467:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4813,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"8015:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8026:6:10","memberName":"length","nodeType":"MemberAccess","src":"8015:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8035:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8015:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4823,"nodeType":"Block","src":"8330:55:10","statements":[{"expression":{"arguments":[{"id":4820,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"8356:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4819,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8349:6:10","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8349:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4822,"nodeType":"ExpressionStatement","src":"8349:20:10"}]},"id":4824,"nodeType":"IfStatement","src":"8011:374:10","trueBody":{"id":4818,"nodeType":"Block","src":"8038:286:10","statements":[{"AST":{"nativeSrc":"8161:148:10","nodeType":"YulBlock","src":"8161:148:10","statements":[{"nativeSrc":"8184:40:10","nodeType":"YulVariableDeclaration","src":"8184:40:10","value":{"arguments":[{"name":"returndata","nativeSrc":"8213:10:10","nodeType":"YulIdentifier","src":"8213:10:10"}],"functionName":{"name":"mload","nativeSrc":"8207:5:10","nodeType":"YulIdentifier","src":"8207:5:10"},"nativeSrc":"8207:17:10","nodeType":"YulFunctionCall","src":"8207:17:10"},"variables":[{"name":"returndata_size","nativeSrc":"8188:15:10","nodeType":"YulTypedName","src":"8188:15:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"8257:2:10","nodeType":"YulLiteral","src":"8257:2:10","type":"","value":"32"},{"name":"returndata","nativeSrc":"8261:10:10","nodeType":"YulIdentifier","src":"8261:10:10"}],"functionName":{"name":"add","nativeSrc":"8253:3:10","nodeType":"YulIdentifier","src":"8253:3:10"},"nativeSrc":"8253:19:10","nodeType":"YulFunctionCall","src":"8253:19:10"},{"name":"returndata_size","nativeSrc":"8274:15:10","nodeType":"YulIdentifier","src":"8274:15:10"}],"functionName":{"name":"revert","nativeSrc":"8246:6:10","nodeType":"YulIdentifier","src":"8246:6:10"},"nativeSrc":"8246:44:10","nodeType":"YulFunctionCall","src":"8246:44:10"},"nativeSrc":"8246:44:10","nodeType":"YulExpressionStatement","src":"8246:44:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":4802,"isOffset":false,"isSlot":false,"src":"8213:10:10","valueSize":1},{"declaration":4802,"isOffset":false,"isSlot":false,"src":"8261:10:10","valueSize":1}],"id":4817,"nodeType":"InlineAssembly","src":"8152:157:10"}]}}]},"id":4826,"nodeType":"IfStatement","src":"7866:530:10","trueBody":{"id":4812,"nodeType":"Block","src":"7879:44:10","statements":[{"expression":{"id":4810,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"7901:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4808,"id":4811,"nodeType":"Return","src":"7894:17:10"}]}}]},"documentation":{"id":4798,"nodeType":"StructuredDocumentation","src":"7471:214:10","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":4828,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7700:16:10","nodeType":"FunctionDefinition","parameters":{"id":4805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4800,"mutability":"mutable","name":"success","nameLocation":"7732:7:10","nodeType":"VariableDeclaration","scope":4828,"src":"7727:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4799,"name":"bool","nodeType":"ElementaryTypeName","src":"7727:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4802,"mutability":"mutable","name":"returndata","nameLocation":"7763:10:10","nodeType":"VariableDeclaration","scope":4828,"src":"7750:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4801,"name":"bytes","nodeType":"ElementaryTypeName","src":"7750:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4804,"mutability":"mutable","name":"errorMessage","nameLocation":"7798:12:10","nodeType":"VariableDeclaration","scope":4828,"src":"7784:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4803,"name":"string","nodeType":"ElementaryTypeName","src":"7784:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7716:101:10"},"returnParameters":{"id":4808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4828,"src":"7841:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4806,"name":"bytes","nodeType":"ElementaryTypeName","src":"7841:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7840:14:10"},"scope":4829,"src":"7691:712:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4830,"src":"132:8274:10","usedErrors":[],"usedEvents":[]}],"src":"33:8373:10"},"id":10},"contracts/libraries/SafeERC20.sol":{"ast":{"absolutePath":"contracts/libraries/SafeERC20.sol","exportedSymbols":{"Address":[4829],"IERC20":[729],"SafeERC20":[5054]},"id":5055,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4831,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"33:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":4833,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5055,"sourceUnit":730,"src":"61:70:11","symbolAliases":[{"foreign":{"id":4832,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"69:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/libraries/Address.sol","file":"./Address.sol","id":4835,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5055,"sourceUnit":4830,"src":"133:38:11","symbolAliases":[{"foreign":{"id":4834,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"141:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":5054,"linearizedBaseContracts":[5054],"name":"SafeERC20","nameLocation":"181:9:11","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4838,"libraryName":{"id":4836,"name":"Address","nameLocations":["204:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":4829,"src":"204:7:11"},"nodeType":"UsingForDirective","src":"198:26:11","typeName":{"id":4837,"name":"address","nodeType":"ElementaryTypeName","src":"216:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":4860,"nodeType":"Block","src":"304:142:11","statements":[{"expression":{"arguments":[{"id":4849,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"349:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":4852,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"392:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"398:8:11","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":696,"src":"392:14:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"407:8:11","memberName":"selector","nodeType":"MemberAccess","src":"392:23:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4855,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4843,"src":"417:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4845,"src":"421:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4850,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"369:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"373:18:11","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"369:22:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"369:58:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4848,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"315:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"315:123:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4859,"nodeType":"ExpressionStatement","src":"315:123:11"}]},"id":4861,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"241:12:11","nodeType":"FunctionDefinition","parameters":{"id":4846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4841,"mutability":"mutable","name":"token","nameLocation":"261:5:11","nodeType":"VariableDeclaration","scope":4861,"src":"254:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},"typeName":{"id":4840,"nodeType":"UserDefinedTypeName","pathNode":{"id":4839,"name":"IERC20","nameLocations":["254:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"254:6:11"},"referencedDeclaration":729,"src":"254:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4843,"mutability":"mutable","name":"to","nameLocation":"276:2:11","nodeType":"VariableDeclaration","scope":4861,"src":"268:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4842,"name":"address","nodeType":"ElementaryTypeName","src":"268:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4845,"mutability":"mutable","name":"value","nameLocation":"288:5:11","nodeType":"VariableDeclaration","scope":4861,"src":"280:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4844,"name":"uint256","nodeType":"ElementaryTypeName","src":"280:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"253:41:11"},"returnParameters":{"id":4847,"nodeType":"ParameterList","parameters":[],"src":"304:0:11"},"scope":5054,"src":"232:214:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4886,"nodeType":"Block","src":"587:152:11","statements":[{"expression":{"arguments":[{"id":4874,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"632:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":4877,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"675:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"681:12:11","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":728,"src":"675:18:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"694:8:11","memberName":"selector","nodeType":"MemberAccess","src":"675:27:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4880,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"704:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4881,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"710:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"714:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4875,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"652:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"656:18:11","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"652:22:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"652:68:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4873,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"598:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"598:133:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4885,"nodeType":"ExpressionStatement","src":"598:133:11"}]},"id":4887,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"463:16:11","nodeType":"FunctionDefinition","parameters":{"id":4871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4864,"mutability":"mutable","name":"token","nameLocation":"497:5:11","nodeType":"VariableDeclaration","scope":4887,"src":"490:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},"typeName":{"id":4863,"nodeType":"UserDefinedTypeName","pathNode":{"id":4862,"name":"IERC20","nameLocations":["490:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"490:6:11"},"referencedDeclaration":729,"src":"490:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4866,"mutability":"mutable","name":"from","nameLocation":"521:4:11","nodeType":"VariableDeclaration","scope":4887,"src":"513:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4865,"name":"address","nodeType":"ElementaryTypeName","src":"513:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4868,"mutability":"mutable","name":"to","nameLocation":"544:2:11","nodeType":"VariableDeclaration","scope":4887,"src":"536:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4867,"name":"address","nodeType":"ElementaryTypeName","src":"536:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4870,"mutability":"mutable","name":"value","nameLocation":"565:5:11","nodeType":"VariableDeclaration","scope":4887,"src":"557:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4869,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"479:98:11"},"returnParameters":{"id":4872,"nodeType":"ParameterList","parameters":[],"src":"587:0:11"},"scope":5054,"src":"454:285:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4930,"nodeType":"Block","src":"1118:543:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"1372:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1381:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1372:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4902,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1371:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4907,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1412:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$5054","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$5054","typeString":"library SafeERC20"}],"id":4906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1404:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4905,"name":"address","nodeType":"ElementaryTypeName","src":"1404:7:11","typeDescriptions":{}}},"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1404:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4909,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"1419:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4903,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"1388:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1394:9:11","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":706,"src":"1388:15:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1388:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1431:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1388:44:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4913,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1387:46:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1371:62:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":4915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1448:56:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":4898,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1349:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1349:166:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4917,"nodeType":"ExpressionStatement","src":"1349:166:11"},{"expression":{"arguments":[{"id":4919,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"1560:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":4922,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"1603:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1609:7:11","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":716,"src":"1603:13:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1617:8:11","memberName":"selector","nodeType":"MemberAccess","src":"1603:22:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4925,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"1627:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"1636:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4920,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1580:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1584:18:11","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1580:22:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1580:62:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4918,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"1526:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1526:127:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4929,"nodeType":"ExpressionStatement","src":"1526:127:11"}]},"documentation":{"id":4888,"nodeType":"StructuredDocumentation","src":"747:255:11","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":4931,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1017:11:11","nodeType":"FunctionDefinition","parameters":{"id":4896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4891,"mutability":"mutable","name":"token","nameLocation":"1046:5:11","nodeType":"VariableDeclaration","scope":4931,"src":"1039:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},"typeName":{"id":4890,"nodeType":"UserDefinedTypeName","pathNode":{"id":4889,"name":"IERC20","nameLocations":["1039:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"1039:6:11"},"referencedDeclaration":729,"src":"1039:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4893,"mutability":"mutable","name":"spender","nameLocation":"1070:7:11","nodeType":"VariableDeclaration","scope":4931,"src":"1062:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4892,"name":"address","nodeType":"ElementaryTypeName","src":"1062:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4895,"mutability":"mutable","name":"value","nameLocation":"1096:5:11","nodeType":"VariableDeclaration","scope":4931,"src":"1088:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4894,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1028:80:11"},"returnParameters":{"id":4897,"nodeType":"ParameterList","parameters":[],"src":"1118:0:11"},"scope":5054,"src":"1008:653:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4966,"nodeType":"Block","src":"1789:300:11","statements":[{"assignments":[4942],"declarations":[{"constant":false,"id":4942,"mutability":"mutable","name":"newAllowance","nameLocation":"1808:12:11","nodeType":"VariableDeclaration","scope":4966,"src":"1800:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4941,"name":"uint256","nodeType":"ElementaryTypeName","src":"1800:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4953,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4947,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1847:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$5054","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$5054","typeString":"library SafeERC20"}],"id":4946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1839:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4945,"name":"address","nodeType":"ElementaryTypeName","src":"1839:7:11","typeDescriptions":{}}},"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1839:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4949,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4936,"src":"1854:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4943,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"1823:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1829:9:11","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":706,"src":"1823:15:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"1865:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1823:47:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1800:70:11"},{"expression":{"arguments":[{"id":4955,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"1915:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":4958,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"1976:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":4959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1982:7:11","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":716,"src":"1976:13:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1990:8:11","memberName":"selector","nodeType":"MemberAccess","src":"1976:22:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4961,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4936,"src":"2017:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4962,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4942,"src":"2043:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4956,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1935:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1939:18:11","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1935:22:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1935:135:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4954,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"1881:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":4964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1881:200:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4965,"nodeType":"ExpressionStatement","src":"1881:200:11"}]},"id":4967,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"1678:21:11","nodeType":"FunctionDefinition","parameters":{"id":4939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4934,"mutability":"mutable","name":"token","nameLocation":"1717:5:11","nodeType":"VariableDeclaration","scope":4967,"src":"1710:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},"typeName":{"id":4933,"nodeType":"UserDefinedTypeName","pathNode":{"id":4932,"name":"IERC20","nameLocations":["1710:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"1710:6:11"},"referencedDeclaration":729,"src":"1710:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4936,"mutability":"mutable","name":"spender","nameLocation":"1741:7:11","nodeType":"VariableDeclaration","scope":4967,"src":"1733:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4935,"name":"address","nodeType":"ElementaryTypeName","src":"1733:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4938,"mutability":"mutable","name":"value","nameLocation":"1767:5:11","nodeType":"VariableDeclaration","scope":4967,"src":"1759:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4937,"name":"uint256","nodeType":"ElementaryTypeName","src":"1759:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1699:80:11"},"returnParameters":{"id":4940,"nodeType":"ParameterList","parameters":[],"src":"1789:0:11"},"scope":5054,"src":"1669:420:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5014,"nodeType":"Block","src":"2217:557:11","statements":[{"id":5013,"nodeType":"UncheckedBlock","src":"2228:539:11","statements":[{"assignments":[4978],"declarations":[{"constant":false,"id":4978,"mutability":"mutable","name":"oldAllowance","nameLocation":"2261:12:11","nodeType":"VariableDeclaration","scope":5013,"src":"2253:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4977,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4987,"initialValue":{"arguments":[{"arguments":[{"id":4983,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2300:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$5054","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$5054","typeString":"library SafeERC20"}],"id":4982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2292:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4981,"name":"address","nodeType":"ElementaryTypeName","src":"2292:7:11","typeDescriptions":{}}},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2292:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4985,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4972,"src":"2307:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4979,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"2276:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2282:9:11","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":706,"src":"2276:15:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":4986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2276:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:62:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4989,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"2356:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4974,"src":"2372:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2356:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":4992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2396:43:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":4988,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2330:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2330:124:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4994,"nodeType":"ExpressionStatement","src":"2330:124:11"},{"assignments":[4996],"declarations":[{"constant":false,"id":4996,"mutability":"mutable","name":"newAllowance","nameLocation":"2477:12:11","nodeType":"VariableDeclaration","scope":5013,"src":"2469:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4995,"name":"uint256","nodeType":"ElementaryTypeName","src":"2469:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5000,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4997,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"2492:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4974,"src":"2507:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2492:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2469:43:11"},{"expression":{"arguments":[{"id":5002,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"2565:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":5005,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"2634:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2640:7:11","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":716,"src":"2634:13:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2648:8:11","memberName":"selector","nodeType":"MemberAccess","src":"2634:22:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":5008,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4972,"src":"2679:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5009,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"2709:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5003,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2589:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2593:18:11","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2589:22:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2589:151:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5001,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"2527:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2527:228:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5012,"nodeType":"ExpressionStatement","src":"2527:228:11"}]}]},"id":5015,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2106:21:11","nodeType":"FunctionDefinition","parameters":{"id":4975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4970,"mutability":"mutable","name":"token","nameLocation":"2145:5:11","nodeType":"VariableDeclaration","scope":5015,"src":"2138:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},"typeName":{"id":4969,"nodeType":"UserDefinedTypeName","pathNode":{"id":4968,"name":"IERC20","nameLocations":["2138:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"2138:6:11"},"referencedDeclaration":729,"src":"2138:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4972,"mutability":"mutable","name":"spender","nameLocation":"2169:7:11","nodeType":"VariableDeclaration","scope":5015,"src":"2161:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4971,"name":"address","nodeType":"ElementaryTypeName","src":"2161:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4974,"mutability":"mutable","name":"value","nameLocation":"2195:5:11","nodeType":"VariableDeclaration","scope":5015,"src":"2187:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4973,"name":"uint256","nodeType":"ElementaryTypeName","src":"2187:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2127:80:11"},"returnParameters":{"id":4976,"nodeType":"ParameterList","parameters":[],"src":"2217:0:11"},"scope":5054,"src":"2097:677:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5052,"nodeType":"Block","src":"3235:732:11","statements":[{"assignments":[5025],"declarations":[{"constant":false,"id":5025,"mutability":"mutable","name":"returndata","nameLocation":"3602:10:11","nodeType":"VariableDeclaration","scope":5052,"src":"3589:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5024,"name":"bytes","nodeType":"ElementaryTypeName","src":"3589:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5034,"initialValue":{"arguments":[{"id":5031,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5021,"src":"3657:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":5032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3676:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":5028,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"3623:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}],"id":5027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3615:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5026,"name":"address","nodeType":"ElementaryTypeName","src":"3615:7:11","typeDescriptions":{}}},"id":5029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3615:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3630:12:11","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":4623,"src":"3615:27:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3615:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3589:132:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5035,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"3736:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3747:6:11","memberName":"length","nodeType":"MemberAccess","src":"3736:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3756:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3736:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5051,"nodeType":"IfStatement","src":"3732:228:11","trueBody":{"id":5050,"nodeType":"Block","src":"3759:201:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":5042,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"3851:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":5044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3864:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":5043,"name":"bool","nodeType":"ElementaryTypeName","src":"3864:4:11","typeDescriptions":{}}}],"id":5045,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3863:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":5040,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3840:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3844:6:11","memberName":"decode","nodeType":"MemberAccess","src":"3840:10:11","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3840:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":5047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3889:44:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":5039,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3814:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3814:134:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5049,"nodeType":"ExpressionStatement","src":"3814:134:11"}]}}]},"documentation":{"id":5016,"nodeType":"StructuredDocumentation","src":"2782:377:11","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":5053,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"3174:19:11","nodeType":"FunctionDefinition","parameters":{"id":5022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5019,"mutability":"mutable","name":"token","nameLocation":"3201:5:11","nodeType":"VariableDeclaration","scope":5053,"src":"3194:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},"typeName":{"id":5018,"nodeType":"UserDefinedTypeName","pathNode":{"id":5017,"name":"IERC20","nameLocations":["3194:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"3194:6:11"},"referencedDeclaration":729,"src":"3194:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":5021,"mutability":"mutable","name":"data","nameLocation":"3221:4:11","nodeType":"VariableDeclaration","scope":5053,"src":"3208:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5020,"name":"bytes","nodeType":"ElementaryTypeName","src":"3208:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3193:33:11"},"returnParameters":{"id":5023,"nodeType":"ParameterList","parameters":[],"src":"3235:0:11"},"scope":5054,"src":"3165:802:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":5055,"src":"173:3797:11","usedErrors":[],"usedEvents":[]}],"src":"33:3939:11"},"id":11},"contracts/libraries/UniERC20.sol":{"ast":{"absolutePath":"contracts/libraries/UniERC20.sol","exportedSymbols":{"Address":[4829],"IERC20":[729],"Math":[2458],"Panic":[837],"SafeCast":[4223],"SafeERC20":[5054],"UniERC20":[5227]},"id":5228,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5056,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"33:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"@openzeppelin/contracts/utils/math/Math.sol","id":5057,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5228,"sourceUnit":2459,"src":"61:53:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":5058,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5228,"sourceUnit":730,"src":"116:56:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/SafeERC20.sol","file":"./SafeERC20.sol","id":5059,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5228,"sourceUnit":5055,"src":"174:25:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"UniERC20","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":5227,"linearizedBaseContracts":[5227],"name":"UniERC20","nameLocation":"213:8:12","nodeType":"ContractDefinition","nodes":[{"global":false,"id":5062,"libraryName":{"id":5060,"name":"Math","nameLocations":["235:4:12"],"nodeType":"IdentifierPath","referencedDeclaration":2458,"src":"235:4:12"},"nodeType":"UsingForDirective","src":"229:23:12","typeName":{"id":5061,"name":"uint256","nodeType":"ElementaryTypeName","src":"244:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"global":false,"id":5066,"libraryName":{"id":5063,"name":"SafeERC20","nameLocations":["264:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":5054,"src":"264:9:12"},"nodeType":"UsingForDirective","src":"258:27:12","typeName":{"id":5065,"nodeType":"UserDefinedTypeName","pathNode":{"id":5064,"name":"IERC20","nameLocations":["278:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"278:6:12"},"referencedDeclaration":729,"src":"278:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}}},{"constant":true,"id":5072,"mutability":"constant","name":"_ETH_ADDRESS","nameLocation":"317:12:12","nodeType":"VariableDeclaration","scope":5227,"src":"293:89:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},"typeName":{"id":5068,"nodeType":"UserDefinedTypeName","pathNode":{"id":5067,"name":"IERC20","nameLocations":["293:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"293:6:12"},"referencedDeclaration":729,"src":"293:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"value":{"arguments":[{"hexValue":"307845656565654565656545654565654565456545656545454565656565456565656565656545456545","id":5070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"339:42:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5069,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"332:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$729_$","typeString":"type(contract IERC20)"}},"id":5071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"332:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"visibility":"private"},{"constant":true,"id":5081,"mutability":"constant","name":"_ZERO_ADDRESS","nameLocation":"413:13:12","nodeType":"VariableDeclaration","scope":5227,"src":"389:58:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},"typeName":{"id":5074,"nodeType":"UserDefinedTypeName","pathNode":{"id":5073,"name":"IERC20","nameLocations":["389:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"389:6:12"},"referencedDeclaration":729,"src":"389:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"value":{"arguments":[{"arguments":[{"hexValue":"30","id":5078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"444:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"436:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5076,"name":"address","nodeType":"ElementaryTypeName","src":"436:7:12","typeDescriptions":{}}},"id":5079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"436:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5075,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"429:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$729_$","typeString":"type(contract IERC20)"}},"id":5080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"429:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"visibility":"private"},{"body":{"id":5098,"nodeType":"Block","src":"514:75:12","statements":[{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},"id":5091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5089,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"533:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5090,"name":"_ZERO_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5081,"src":"542:13:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"src":"533:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5092,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"559:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5093,"name":"_ETH_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5072,"src":"568:12:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"src":"559:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"533:47:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5096,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"532:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5088,"id":5097,"nodeType":"Return","src":"525:56:12"}]},"id":5099,"implemented":true,"kind":"function","modifiers":[],"name":"isETH","nameLocation":"465:5:12","nodeType":"FunctionDefinition","parameters":{"id":5085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5084,"mutability":"mutable","name":"token","nameLocation":"478:5:12","nodeType":"VariableDeclaration","scope":5099,"src":"471:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},"typeName":{"id":5083,"nodeType":"UserDefinedTypeName","pathNode":{"id":5082,"name":"IERC20","nameLocations":["471:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"471:6:12"},"referencedDeclaration":729,"src":"471:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"470:14:12"},"returnParameters":{"id":5088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5099,"src":"508:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5086,"name":"bool","nodeType":"ElementaryTypeName","src":"508:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"507:6:12"},"scope":5227,"src":"456:133:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5123,"nodeType":"Block","src":"682:149:12","statements":[{"condition":{"arguments":[{"id":5110,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"703:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}],"id":5109,"name":"isETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5099,"src":"697:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_contract$_IERC20_$729_$returns$_t_bool_$","typeString":"function (contract IERC20) pure returns (bool)"}},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"697:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5121,"nodeType":"Block","src":"766:58:12","statements":[{"expression":{"arguments":[{"id":5118,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"804:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5116,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"788:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":5117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"794:9:12","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":686,"src":"788:15:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"788:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5108,"id":5120,"nodeType":"Return","src":"781:31:12"}]},"id":5122,"nodeType":"IfStatement","src":"693:131:12","trueBody":{"id":5115,"nodeType":"Block","src":"711:49:12","statements":[{"expression":{"expression":{"id":5112,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"733:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"741:7:12","memberName":"balance","nodeType":"MemberAccess","src":"733:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5108,"id":5114,"nodeType":"Return","src":"726:22:12"}]}}]},"id":5124,"implemented":true,"kind":"function","modifiers":[],"name":"uniBalanceOf","nameLocation":"606:12:12","nodeType":"FunctionDefinition","parameters":{"id":5105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5102,"mutability":"mutable","name":"token","nameLocation":"626:5:12","nodeType":"VariableDeclaration","scope":5124,"src":"619:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},"typeName":{"id":5101,"nodeType":"UserDefinedTypeName","pathNode":{"id":5100,"name":"IERC20","nameLocations":["619:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"619:6:12"},"referencedDeclaration":729,"src":"619:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":5104,"mutability":"mutable","name":"account","nameLocation":"641:7:12","nodeType":"VariableDeclaration","scope":5124,"src":"633:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5103,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"618:31:12"},"returnParameters":{"id":5108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5124,"src":"673:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5106,"name":"uint256","nodeType":"ElementaryTypeName","src":"673:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"672:9:12"},"scope":5227,"src":"597:234:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5158,"nodeType":"Block","src":"919:203:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5134,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"934:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"943:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"934:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5157,"nodeType":"IfStatement","src":"930:185:12","trueBody":{"id":5156,"nodeType":"Block","src":"946:169:12","statements":[{"condition":{"arguments":[{"id":5138,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5127,"src":"971:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}],"id":5137,"name":"isETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5099,"src":"965:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_contract$_IERC20_$729_$returns$_t_bool_$","typeString":"function (contract IERC20) pure returns (bool)"}},"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"965:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5154,"nodeType":"Block","src":"1039:65:12","statements":[{"expression":{"arguments":[{"id":5150,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5129,"src":"1077:2:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":5151,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"1081:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5147,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5127,"src":"1058:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1064:12:12","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":4861,"src":"1058:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$729_$","typeString":"function (contract IERC20,address,uint256)"}},"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1058:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5153,"nodeType":"ExpressionStatement","src":"1058:30:12"}]},"id":5155,"nodeType":"IfStatement","src":"961:143:12","trueBody":{"id":5146,"nodeType":"Block","src":"979:54:12","statements":[{"expression":{"arguments":[{"id":5143,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"1010:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5140,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5129,"src":"998:2:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1001:8:12","memberName":"transfer","nodeType":"MemberAccess","src":"998:11:12","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"998:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5145,"nodeType":"ExpressionStatement","src":"998:19:12"}]}}]}}]},"id":5159,"implemented":true,"kind":"function","modifiers":[],"name":"uniTransfer","nameLocation":"848:11:12","nodeType":"FunctionDefinition","parameters":{"id":5132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5127,"mutability":"mutable","name":"token","nameLocation":"867:5:12","nodeType":"VariableDeclaration","scope":5159,"src":"860:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},"typeName":{"id":5126,"nodeType":"UserDefinedTypeName","pathNode":{"id":5125,"name":"IERC20","nameLocations":["860:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"860:6:12"},"referencedDeclaration":729,"src":"860:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":5129,"mutability":"mutable","name":"to","nameLocation":"890:2:12","nodeType":"VariableDeclaration","scope":5159,"src":"874:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":5128,"name":"address","nodeType":"ElementaryTypeName","src":"874:15:12","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":5131,"mutability":"mutable","name":"amount","nameLocation":"902:6:12","nodeType":"VariableDeclaration","scope":5159,"src":"894:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5130,"name":"uint256","nodeType":"ElementaryTypeName","src":"894:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"859:50:12"},"returnParameters":{"id":5133,"nodeType":"ParameterList","parameters":[],"src":"919:0:12"},"scope":5227,"src":"839:283:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5225,"nodeType":"Block","src":"1201:439:12","statements":[{"expression":{"arguments":[{"id":5173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1220:13:12","subExpression":{"arguments":[{"id":5171,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5162,"src":"1227:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}],"id":5170,"name":"isETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5099,"src":"1221:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_contract$_IERC20_$729_$returns$_t_bool_$","typeString":"function (contract IERC20) pure returns (bool)"}},"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1221:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"417070726f76652063616c6c6564206f6e20455448","id":5174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1235:23:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_65c04b471d9d1a5bfab6c69dc6ac81fe60a6f432d60c04212cb50b1c9f8796ac","typeString":"literal_string \"Approve called on ETH\""},"value":"Approve called on ETH"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_65c04b471d9d1a5bfab6c69dc6ac81fe60a6f432d60c04212cb50b1c9f8796ac","typeString":"literal_string \"Approve called on ETH\""}],"id":5169,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1212:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1212:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5176,"nodeType":"ExpressionStatement","src":"1212:47:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5177,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"1276:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1286:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1276:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5223,"nodeType":"Block","src":"1346:287:12","statements":[{"assignments":[5189],"declarations":[{"constant":false,"id":5189,"mutability":"mutable","name":"allowance","nameLocation":"1369:9:12","nodeType":"VariableDeclaration","scope":5223,"src":"1361:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5188,"name":"uint256","nodeType":"ElementaryTypeName","src":"1361:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5198,"initialValue":{"arguments":[{"arguments":[{"id":5194,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1405:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_UniERC20_$5227","typeString":"library UniERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UniERC20_$5227","typeString":"library UniERC20"}],"id":5193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1397:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5192,"name":"address","nodeType":"ElementaryTypeName","src":"1397:7:12","typeDescriptions":{}}},"id":5195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1397:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5196,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5164,"src":"1412:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5190,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5162,"src":"1381:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":5191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1387:9:12","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":706,"src":"1381:15:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1381:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1361:54:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5199,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"1434:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5200,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"1446:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1434:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5222,"nodeType":"IfStatement","src":"1430:192:12","trueBody":{"id":5221,"nodeType":"Block","src":"1454:168:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5202,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"1477:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1489:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1477:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5213,"nodeType":"IfStatement","src":"1473:86:12","trueBody":{"id":5212,"nodeType":"Block","src":"1492:67:12","statements":[{"expression":{"arguments":[{"id":5208,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5164,"src":"1533:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":5209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1537:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":5205,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5162,"src":"1515:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1521:11:12","memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":4931,"src":"1515:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$729_$","typeString":"function (contract IERC20,address,uint256)"}},"id":5210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1515:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5211,"nodeType":"ExpressionStatement","src":"1515:24:12"}]}},{"expression":{"arguments":[{"id":5217,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5164,"src":"1595:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5218,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"1599:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5214,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5162,"src":"1577:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1583:11:12","memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":4931,"src":"1577:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$729_$","typeString":"function (contract IERC20,address,uint256)"}},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1577:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5220,"nodeType":"ExpressionStatement","src":"1577:29:12"}]}}]},"id":5224,"nodeType":"IfStatement","src":"1272:361:12","trueBody":{"id":5187,"nodeType":"Block","src":"1289:51:12","statements":[{"expression":{"arguments":[{"id":5183,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5164,"src":"1322:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":5184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1326:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":5180,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5162,"src":"1304:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1310:11:12","memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":4931,"src":"1304:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$729_$","typeString":"function (contract IERC20,address,uint256)"}},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1304:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5186,"nodeType":"ExpressionStatement","src":"1304:24:12"}]}}]},"id":5226,"implemented":true,"kind":"function","modifiers":[],"name":"uniApprove","nameLocation":"1139:10:12","nodeType":"FunctionDefinition","parameters":{"id":5167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5162,"mutability":"mutable","name":"token","nameLocation":"1157:5:12","nodeType":"VariableDeclaration","scope":5226,"src":"1150:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},"typeName":{"id":5161,"nodeType":"UserDefinedTypeName","pathNode":{"id":5160,"name":"IERC20","nameLocations":["1150:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"1150:6:12"},"referencedDeclaration":729,"src":"1150:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":5164,"mutability":"mutable","name":"to","nameLocation":"1172:2:12","nodeType":"VariableDeclaration","scope":5226,"src":"1164:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5163,"name":"address","nodeType":"ElementaryTypeName","src":"1164:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5166,"mutability":"mutable","name":"amount","nameLocation":"1184:6:12","nodeType":"VariableDeclaration","scope":5226,"src":"1176:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5165,"name":"uint256","nodeType":"ElementaryTypeName","src":"1176:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1149:42:12"},"returnParameters":{"id":5168,"nodeType":"ParameterList","parameters":[],"src":"1201:0:12"},"scope":5227,"src":"1130:510:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":5228,"src":"205:1438:12","usedErrors":[],"usedEvents":[]}],"src":"33:1610:12"},"id":12},"contracts/structs/SAggregator.sol":{"ast":{"absolutePath":"contracts/structs/SAggregator.sol","exportedSymbols":{"SwapMultiHop":[5261],"UniswapV3SwapData":[5246]},"id":5262,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5229,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"33:24:13"},{"canonicalName":"UniswapV3SwapData","id":5246,"members":[{"constant":false,"id":5231,"mutability":"mutable","name":"router","nameLocation":"100:6:13","nodeType":"VariableDeclaration","scope":5246,"src":"92:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5230,"name":"address","nodeType":"ElementaryTypeName","src":"92:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5233,"mutability":"mutable","name":"tokenIn","nameLocation":"121:7:13","nodeType":"VariableDeclaration","scope":5246,"src":"113:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5232,"name":"uint256","nodeType":"ElementaryTypeName","src":"113:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5235,"mutability":"mutable","name":"tokenOut","nameLocation":"143:8:13","nodeType":"VariableDeclaration","scope":5246,"src":"135:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5234,"name":"uint256","nodeType":"ElementaryTypeName","src":"135:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5237,"mutability":"mutable","name":"fee","nameLocation":"165:3:13","nodeType":"VariableDeclaration","scope":5246,"src":"158:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5236,"name":"uint24","nodeType":"ElementaryTypeName","src":"158:6:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":5239,"mutability":"mutable","name":"dealine","nameLocation":"183:7:13","nodeType":"VariableDeclaration","scope":5246,"src":"175:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5238,"name":"uint256","nodeType":"ElementaryTypeName","src":"175:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5241,"mutability":"mutable","name":"amountIn","nameLocation":"205:8:13","nodeType":"VariableDeclaration","scope":5246,"src":"197:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5240,"name":"uint256","nodeType":"ElementaryTypeName","src":"197:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5243,"mutability":"mutable","name":"amountOutMin","nameLocation":"228:12:13","nodeType":"VariableDeclaration","scope":5246,"src":"220:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5242,"name":"uint256","nodeType":"ElementaryTypeName","src":"220:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5245,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"255:17:13","nodeType":"VariableDeclaration","scope":5246,"src":"247:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5244,"name":"uint160","nodeType":"ElementaryTypeName","src":"247:7:13","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"UniswapV3SwapData","nameLocation":"68:17:13","nodeType":"StructDefinition","scope":5262,"src":"61:215:13","visibility":"public"},{"canonicalName":"SwapMultiHop","id":5261,"members":[{"constant":false,"id":5249,"mutability":"mutable","name":"routers","nameLocation":"317:7:13","nodeType":"VariableDeclaration","scope":5261,"src":"307:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5247,"name":"address","nodeType":"ElementaryTypeName","src":"307:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5248,"nodeType":"ArrayTypeName","src":"307:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5252,"mutability":"mutable","name":"dexHandlerIds","nameLocation":"340:13:13","nodeType":"VariableDeclaration","scope":5261,"src":"332:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage_ptr","typeString":"uint8[]"},"typeName":{"baseType":{"id":5250,"name":"uint8","nodeType":"ElementaryTypeName","src":"332:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":5251,"nodeType":"ArrayTypeName","src":"332:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage_ptr","typeString":"uint8[]"}},"visibility":"internal"},{"constant":false,"id":5255,"mutability":"mutable","name":"tokenIn","nameLocation":"370:7:13","nodeType":"VariableDeclaration","scope":5261,"src":"360:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5253,"name":"address","nodeType":"ElementaryTypeName","src":"360:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5254,"nodeType":"ArrayTypeName","src":"360:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5257,"mutability":"mutable","name":"amountIn","nameLocation":"392:8:13","nodeType":"VariableDeclaration","scope":5261,"src":"384:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5256,"name":"uint256","nodeType":"ElementaryTypeName","src":"384:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5260,"mutability":"mutable","name":"data","nameLocation":"415:4:13","nodeType":"VariableDeclaration","scope":5261,"src":"407:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":5258,"name":"bytes","nodeType":"ElementaryTypeName","src":"407:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":5259,"nodeType":"ArrayTypeName","src":"407:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"name":"SwapMultiHop","nameLocation":"287:12:13","nodeType":"StructDefinition","scope":5262,"src":"280:143:13","visibility":"public"}],"src":"33:390:13"},"id":13}},"contracts":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":159,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":165,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":167,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":169,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":171,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077124401dfaf97cd08e586bc2b3443f93be8e32f34d83a0070dc4d71d29e014964736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x124401DFAF97CD08E586BC2B3443F93BE8E32F34D83A0070 0xDC 0x4D PUSH18 0xD29E014964736F6C63430008180033000000 ","sourceMap":"657:1315:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077124401dfaf97cd08e586bc2b3443f93be8e32f34d83a0070dc4d71d29e014964736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x124401DFAF97CD08E586BC2B3443F93BE8E32F34D83A0070 0xDC 0x4D PUSH18 0xD29E014964736F6C63430008180033000000 ","sourceMap":"657:1315:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208b7b41f54597a34a30fbcb9caa7557b2f85918a264c26e26cdfc0122e9fc879064736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 PUSH28 0x41F54597A34A30FBCB9CAA7557B2F85918A264C26E26CDFC0122E9FC DUP8 SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"281:31863:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208b7b41f54597a34a30fbcb9caa7557b2f85918a264c26e26cdfc0122e9fc879064736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 PUSH28 0x41F54597A34A30FBCB9CAA7557B2F85918A264C26E26CDFC0122E9FC DUP8 SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"281:31863:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b5f566bcc33798f030e57f140ce005b7099829e7434ae2c81bd24cfd7eb2b16a64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 CREATE2 PUSH7 0xBCC33798F030E5 PUSH32 0x140CE005B7099829E7434AE2C81BD24CFD7EB2B16A64736F6C63430008180033 ","sourceMap":"769:34173:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b5f566bcc33798f030e57f140ce005b7099829e7434ae2c81bd24cfd7eb2b16a64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 CREATE2 PUSH7 0xBCC33798F030E5 PUSH32 0x140CE005B7099829E7434AE2C81BD24CFD7EB2B16A64736F6C63430008180033 ","sourceMap":"769:34173:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/Aggregator.sol":{"Aggregator":{"abi":[{"inputs":[{"internalType":"address","name":"_factory","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"WETH","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"contract IDexHandlerFactory","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address[]","name":"routers","type":"address[]"},{"internalType":"uint8[]","name":"dexHandlerIds","type":"uint8[]"},{"internalType":"address[]","name":"tokenIn","type":"address[]"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"internalType":"struct SwapMultiHop","name":"params","type":"tuple"}],"name":"swapMultiHop","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address[]","name":"routers","type":"address[]"},{"internalType":"uint8[]","name":"dexHandlerIds","type":"uint8[]"},{"internalType":"address[]","name":"tokenIn","type":"address[]"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"internalType":"struct SwapMultiHop[]","name":"params","type":"tuple[]"}],"name":"swapMultiRoute","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_4307":{"entryPoint":null,"id":4307,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":388,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":411,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_16cfceb364b99915d337c26d8ba3bdcbce06c3595a535f586d679980d6a44d7d_to_t_string_memory_ptr_fromStack":{"entryPoint":519,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_16cfceb364b99915d337c26d8ba3bdcbce06c3595a535f586d679980d6a44d7d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":558,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":461,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":342,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":310,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":305,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_16cfceb364b99915d337c26d8ba3bdcbce06c3595a535f586d679980d6a44d7d":{"entryPoint":478,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":362,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:2350:14","nodeType":"YulBlock","src":"0:2350:14","statements":[{"body":{"nativeSrc":"47:35:14","nodeType":"YulBlock","src":"47:35:14","statements":[{"nativeSrc":"57:19:14","nodeType":"YulAssignment","src":"57:19:14","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:14","nodeType":"YulLiteral","src":"73:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:14","nodeType":"YulIdentifier","src":"67:5:14"},"nativeSrc":"67:9:14","nodeType":"YulFunctionCall","src":"67:9:14"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:14","nodeType":"YulIdentifier","src":"57:6:14"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:14","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:14","nodeType":"YulTypedName","src":"40:6:14","type":""}],"src":"7:75:14"},{"body":{"nativeSrc":"177:28:14","nodeType":"YulBlock","src":"177:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:14","nodeType":"YulLiteral","src":"194:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:14","nodeType":"YulLiteral","src":"197:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:14","nodeType":"YulIdentifier","src":"187:6:14"},"nativeSrc":"187:12:14","nodeType":"YulFunctionCall","src":"187:12:14"},"nativeSrc":"187:12:14","nodeType":"YulExpressionStatement","src":"187:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:14","nodeType":"YulFunctionDefinition","src":"88:117:14"},{"body":{"nativeSrc":"300:28:14","nodeType":"YulBlock","src":"300:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:14","nodeType":"YulLiteral","src":"317:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:14","nodeType":"YulLiteral","src":"320:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:14","nodeType":"YulIdentifier","src":"310:6:14"},"nativeSrc":"310:12:14","nodeType":"YulFunctionCall","src":"310:12:14"},"nativeSrc":"310:12:14","nodeType":"YulExpressionStatement","src":"310:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:14","nodeType":"YulFunctionDefinition","src":"211:117:14"},{"body":{"nativeSrc":"379:81:14","nodeType":"YulBlock","src":"379:81:14","statements":[{"nativeSrc":"389:65:14","nodeType":"YulAssignment","src":"389:65:14","value":{"arguments":[{"name":"value","nativeSrc":"404:5:14","nodeType":"YulIdentifier","src":"404:5:14"},{"kind":"number","nativeSrc":"411:42:14","nodeType":"YulLiteral","src":"411:42:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:14","nodeType":"YulIdentifier","src":"400:3:14"},"nativeSrc":"400:54:14","nodeType":"YulFunctionCall","src":"400:54:14"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:14","nodeType":"YulIdentifier","src":"389:7:14"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:14","nodeType":"YulTypedName","src":"361:5:14","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:14","nodeType":"YulTypedName","src":"371:7:14","type":""}],"src":"334:126:14"},{"body":{"nativeSrc":"511:51:14","nodeType":"YulBlock","src":"511:51:14","statements":[{"nativeSrc":"521:35:14","nodeType":"YulAssignment","src":"521:35:14","value":{"arguments":[{"name":"value","nativeSrc":"550:5:14","nodeType":"YulIdentifier","src":"550:5:14"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:14","nodeType":"YulIdentifier","src":"532:17:14"},"nativeSrc":"532:24:14","nodeType":"YulFunctionCall","src":"532:24:14"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:14","nodeType":"YulIdentifier","src":"521:7:14"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:14","nodeType":"YulTypedName","src":"493:5:14","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:14","nodeType":"YulTypedName","src":"503:7:14","type":""}],"src":"466:96:14"},{"body":{"nativeSrc":"611:79:14","nodeType":"YulBlock","src":"611:79:14","statements":[{"body":{"nativeSrc":"668:16:14","nodeType":"YulBlock","src":"668:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:14","nodeType":"YulLiteral","src":"677:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:14","nodeType":"YulLiteral","src":"680:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:14","nodeType":"YulIdentifier","src":"670:6:14"},"nativeSrc":"670:12:14","nodeType":"YulFunctionCall","src":"670:12:14"},"nativeSrc":"670:12:14","nodeType":"YulExpressionStatement","src":"670:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:14","nodeType":"YulIdentifier","src":"634:5:14"},{"arguments":[{"name":"value","nativeSrc":"659:5:14","nodeType":"YulIdentifier","src":"659:5:14"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:14","nodeType":"YulIdentifier","src":"641:17:14"},"nativeSrc":"641:24:14","nodeType":"YulFunctionCall","src":"641:24:14"}],"functionName":{"name":"eq","nativeSrc":"631:2:14","nodeType":"YulIdentifier","src":"631:2:14"},"nativeSrc":"631:35:14","nodeType":"YulFunctionCall","src":"631:35:14"}],"functionName":{"name":"iszero","nativeSrc":"624:6:14","nodeType":"YulIdentifier","src":"624:6:14"},"nativeSrc":"624:43:14","nodeType":"YulFunctionCall","src":"624:43:14"},"nativeSrc":"621:63:14","nodeType":"YulIf","src":"621:63:14"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:14","nodeType":"YulTypedName","src":"604:5:14","type":""}],"src":"568:122:14"},{"body":{"nativeSrc":"759:80:14","nodeType":"YulBlock","src":"759:80:14","statements":[{"nativeSrc":"769:22:14","nodeType":"YulAssignment","src":"769:22:14","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:14","nodeType":"YulIdentifier","src":"784:6:14"}],"functionName":{"name":"mload","nativeSrc":"778:5:14","nodeType":"YulIdentifier","src":"778:5:14"},"nativeSrc":"778:13:14","nodeType":"YulFunctionCall","src":"778:13:14"},"variableNames":[{"name":"value","nativeSrc":"769:5:14","nodeType":"YulIdentifier","src":"769:5:14"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:14","nodeType":"YulIdentifier","src":"827:5:14"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:14","nodeType":"YulIdentifier","src":"800:26:14"},"nativeSrc":"800:33:14","nodeType":"YulFunctionCall","src":"800:33:14"},"nativeSrc":"800:33:14","nodeType":"YulExpressionStatement","src":"800:33:14"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:14","nodeType":"YulTypedName","src":"737:6:14","type":""},{"name":"end","nativeSrc":"745:3:14","nodeType":"YulTypedName","src":"745:3:14","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:14","nodeType":"YulTypedName","src":"753:5:14","type":""}],"src":"696:143:14"},{"body":{"nativeSrc":"922:274:14","nodeType":"YulBlock","src":"922:274:14","statements":[{"body":{"nativeSrc":"968:83:14","nodeType":"YulBlock","src":"968:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"970:77:14","nodeType":"YulIdentifier","src":"970:77:14"},"nativeSrc":"970:79:14","nodeType":"YulFunctionCall","src":"970:79:14"},"nativeSrc":"970:79:14","nodeType":"YulExpressionStatement","src":"970:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"943:7:14","nodeType":"YulIdentifier","src":"943:7:14"},{"name":"headStart","nativeSrc":"952:9:14","nodeType":"YulIdentifier","src":"952:9:14"}],"functionName":{"name":"sub","nativeSrc":"939:3:14","nodeType":"YulIdentifier","src":"939:3:14"},"nativeSrc":"939:23:14","nodeType":"YulFunctionCall","src":"939:23:14"},{"kind":"number","nativeSrc":"964:2:14","nodeType":"YulLiteral","src":"964:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"935:3:14","nodeType":"YulIdentifier","src":"935:3:14"},"nativeSrc":"935:32:14","nodeType":"YulFunctionCall","src":"935:32:14"},"nativeSrc":"932:119:14","nodeType":"YulIf","src":"932:119:14"},{"nativeSrc":"1061:128:14","nodeType":"YulBlock","src":"1061:128:14","statements":[{"nativeSrc":"1076:15:14","nodeType":"YulVariableDeclaration","src":"1076:15:14","value":{"kind":"number","nativeSrc":"1090:1:14","nodeType":"YulLiteral","src":"1090:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1080:6:14","nodeType":"YulTypedName","src":"1080:6:14","type":""}]},{"nativeSrc":"1105:74:14","nodeType":"YulAssignment","src":"1105:74:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1151:9:14","nodeType":"YulIdentifier","src":"1151:9:14"},{"name":"offset","nativeSrc":"1162:6:14","nodeType":"YulIdentifier","src":"1162:6:14"}],"functionName":{"name":"add","nativeSrc":"1147:3:14","nodeType":"YulIdentifier","src":"1147:3:14"},"nativeSrc":"1147:22:14","nodeType":"YulFunctionCall","src":"1147:22:14"},{"name":"dataEnd","nativeSrc":"1171:7:14","nodeType":"YulIdentifier","src":"1171:7:14"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1115:31:14","nodeType":"YulIdentifier","src":"1115:31:14"},"nativeSrc":"1115:64:14","nodeType":"YulFunctionCall","src":"1115:64:14"},"variableNames":[{"name":"value0","nativeSrc":"1105:6:14","nodeType":"YulIdentifier","src":"1105:6:14"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"845:351:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"892:9:14","nodeType":"YulTypedName","src":"892:9:14","type":""},{"name":"dataEnd","nativeSrc":"903:7:14","nodeType":"YulTypedName","src":"903:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"915:6:14","nodeType":"YulTypedName","src":"915:6:14","type":""}],"src":"845:351:14"},{"body":{"nativeSrc":"1298:73:14","nodeType":"YulBlock","src":"1298:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1315:3:14","nodeType":"YulIdentifier","src":"1315:3:14"},{"name":"length","nativeSrc":"1320:6:14","nodeType":"YulIdentifier","src":"1320:6:14"}],"functionName":{"name":"mstore","nativeSrc":"1308:6:14","nodeType":"YulIdentifier","src":"1308:6:14"},"nativeSrc":"1308:19:14","nodeType":"YulFunctionCall","src":"1308:19:14"},"nativeSrc":"1308:19:14","nodeType":"YulExpressionStatement","src":"1308:19:14"},{"nativeSrc":"1336:29:14","nodeType":"YulAssignment","src":"1336:29:14","value":{"arguments":[{"name":"pos","nativeSrc":"1355:3:14","nodeType":"YulIdentifier","src":"1355:3:14"},{"kind":"number","nativeSrc":"1360:4:14","nodeType":"YulLiteral","src":"1360:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1351:3:14","nodeType":"YulIdentifier","src":"1351:3:14"},"nativeSrc":"1351:14:14","nodeType":"YulFunctionCall","src":"1351:14:14"},"variableNames":[{"name":"updated_pos","nativeSrc":"1336:11:14","nodeType":"YulIdentifier","src":"1336:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1202:169:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1270:3:14","nodeType":"YulTypedName","src":"1270:3:14","type":""},{"name":"length","nativeSrc":"1275:6:14","nodeType":"YulTypedName","src":"1275:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1286:11:14","nodeType":"YulTypedName","src":"1286:11:14","type":""}],"src":"1202:169:14"},{"body":{"nativeSrc":"1483:67:14","nodeType":"YulBlock","src":"1483:67:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"1505:6:14","nodeType":"YulIdentifier","src":"1505:6:14"},{"kind":"number","nativeSrc":"1513:1:14","nodeType":"YulLiteral","src":"1513:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1501:3:14","nodeType":"YulIdentifier","src":"1501:3:14"},"nativeSrc":"1501:14:14","nodeType":"YulFunctionCall","src":"1501:14:14"},{"hexValue":"496e76616c696420666163746f72792061646472657373","kind":"string","nativeSrc":"1517:25:14","nodeType":"YulLiteral","src":"1517:25:14","type":"","value":"Invalid factory address"}],"functionName":{"name":"mstore","nativeSrc":"1494:6:14","nodeType":"YulIdentifier","src":"1494:6:14"},"nativeSrc":"1494:49:14","nodeType":"YulFunctionCall","src":"1494:49:14"},"nativeSrc":"1494:49:14","nodeType":"YulExpressionStatement","src":"1494:49:14"}]},"name":"store_literal_in_memory_16cfceb364b99915d337c26d8ba3bdcbce06c3595a535f586d679980d6a44d7d","nativeSrc":"1377:173:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"1475:6:14","nodeType":"YulTypedName","src":"1475:6:14","type":""}],"src":"1377:173:14"},{"body":{"nativeSrc":"1702:220:14","nodeType":"YulBlock","src":"1702:220:14","statements":[{"nativeSrc":"1712:74:14","nodeType":"YulAssignment","src":"1712:74:14","value":{"arguments":[{"name":"pos","nativeSrc":"1778:3:14","nodeType":"YulIdentifier","src":"1778:3:14"},{"kind":"number","nativeSrc":"1783:2:14","nodeType":"YulLiteral","src":"1783:2:14","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1719:58:14","nodeType":"YulIdentifier","src":"1719:58:14"},"nativeSrc":"1719:67:14","nodeType":"YulFunctionCall","src":"1719:67:14"},"variableNames":[{"name":"pos","nativeSrc":"1712:3:14","nodeType":"YulIdentifier","src":"1712:3:14"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"1884:3:14","nodeType":"YulIdentifier","src":"1884:3:14"}],"functionName":{"name":"store_literal_in_memory_16cfceb364b99915d337c26d8ba3bdcbce06c3595a535f586d679980d6a44d7d","nativeSrc":"1795:88:14","nodeType":"YulIdentifier","src":"1795:88:14"},"nativeSrc":"1795:93:14","nodeType":"YulFunctionCall","src":"1795:93:14"},"nativeSrc":"1795:93:14","nodeType":"YulExpressionStatement","src":"1795:93:14"},{"nativeSrc":"1897:19:14","nodeType":"YulAssignment","src":"1897:19:14","value":{"arguments":[{"name":"pos","nativeSrc":"1908:3:14","nodeType":"YulIdentifier","src":"1908:3:14"},{"kind":"number","nativeSrc":"1913:2:14","nodeType":"YulLiteral","src":"1913:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1904:3:14","nodeType":"YulIdentifier","src":"1904:3:14"},"nativeSrc":"1904:12:14","nodeType":"YulFunctionCall","src":"1904:12:14"},"variableNames":[{"name":"end","nativeSrc":"1897:3:14","nodeType":"YulIdentifier","src":"1897:3:14"}]}]},"name":"abi_encode_t_stringliteral_16cfceb364b99915d337c26d8ba3bdcbce06c3595a535f586d679980d6a44d7d_to_t_string_memory_ptr_fromStack","nativeSrc":"1556:366:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1690:3:14","nodeType":"YulTypedName","src":"1690:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"1698:3:14","nodeType":"YulTypedName","src":"1698:3:14","type":""}],"src":"1556:366:14"},{"body":{"nativeSrc":"2099:248:14","nodeType":"YulBlock","src":"2099:248:14","statements":[{"nativeSrc":"2109:26:14","nodeType":"YulAssignment","src":"2109:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"2121:9:14","nodeType":"YulIdentifier","src":"2121:9:14"},{"kind":"number","nativeSrc":"2132:2:14","nodeType":"YulLiteral","src":"2132:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2117:3:14","nodeType":"YulIdentifier","src":"2117:3:14"},"nativeSrc":"2117:18:14","nodeType":"YulFunctionCall","src":"2117:18:14"},"variableNames":[{"name":"tail","nativeSrc":"2109:4:14","nodeType":"YulIdentifier","src":"2109:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2156:9:14","nodeType":"YulIdentifier","src":"2156:9:14"},{"kind":"number","nativeSrc":"2167:1:14","nodeType":"YulLiteral","src":"2167:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2152:3:14","nodeType":"YulIdentifier","src":"2152:3:14"},"nativeSrc":"2152:17:14","nodeType":"YulFunctionCall","src":"2152:17:14"},{"arguments":[{"name":"tail","nativeSrc":"2175:4:14","nodeType":"YulIdentifier","src":"2175:4:14"},{"name":"headStart","nativeSrc":"2181:9:14","nodeType":"YulIdentifier","src":"2181:9:14"}],"functionName":{"name":"sub","nativeSrc":"2171:3:14","nodeType":"YulIdentifier","src":"2171:3:14"},"nativeSrc":"2171:20:14","nodeType":"YulFunctionCall","src":"2171:20:14"}],"functionName":{"name":"mstore","nativeSrc":"2145:6:14","nodeType":"YulIdentifier","src":"2145:6:14"},"nativeSrc":"2145:47:14","nodeType":"YulFunctionCall","src":"2145:47:14"},"nativeSrc":"2145:47:14","nodeType":"YulExpressionStatement","src":"2145:47:14"},{"nativeSrc":"2201:139:14","nodeType":"YulAssignment","src":"2201:139:14","value":{"arguments":[{"name":"tail","nativeSrc":"2335:4:14","nodeType":"YulIdentifier","src":"2335:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_16cfceb364b99915d337c26d8ba3bdcbce06c3595a535f586d679980d6a44d7d_to_t_string_memory_ptr_fromStack","nativeSrc":"2209:124:14","nodeType":"YulIdentifier","src":"2209:124:14"},"nativeSrc":"2209:131:14","nodeType":"YulFunctionCall","src":"2209:131:14"},"variableNames":[{"name":"tail","nativeSrc":"2201:4:14","nodeType":"YulIdentifier","src":"2201:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_16cfceb364b99915d337c26d8ba3bdcbce06c3595a535f586d679980d6a44d7d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1928:419:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2079:9:14","nodeType":"YulTypedName","src":"2079:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2094:4:14","nodeType":"YulTypedName","src":"2094:4:14","type":""}],"src":"1928:419:14"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_16cfceb364b99915d337c26d8ba3bdcbce06c3595a535f586d679980d6a44d7d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid factory address\")\n\n    }\n\n    function abi_encode_t_stringliteral_16cfceb364b99915d337c26d8ba3bdcbce06c3595a535f586d679980d6a44d7d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_16cfceb364b99915d337c26d8ba3bdcbce06c3595a535f586d679980d6a44d7d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_16cfceb364b99915d337c26d8ba3bdcbce06c3595a535f586d679980d6a44d7d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_16cfceb364b99915d337c26d8ba3bdcbce06c3595a535f586d679980d6a44d7d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a06040523480156200001157600080fd5b50604051620014493803806200144983398181016040528101906200003791906200019b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000a9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a0906200022e565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000250565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001638262000136565b9050919050565b620001758162000156565b81146200018157600080fd5b50565b60008151905062000195816200016a565b92915050565b600060208284031215620001b457620001b362000131565b5b6000620001c48482850162000184565b91505092915050565b600082825260208201905092915050565b7f496e76616c696420666163746f72792061646472657373000000000000000000600082015250565b600062000216601783620001cd565b91506200022382620001de565b602082019050919050565b60006020820190508181036000830152620002498162000207565b9050919050565b6080516111dd6200026c60003960006101de01526111dd6000f3fe60806040526004361061004e5760003560e01c806311eac87a1461005a5780638da5cb5b14610097578063ad5c4648146100c2578063c45a0155146100ed578063d4a3f3c71461011857610055565b3661005557005b600080fd5b34801561006657600080fd5b50610081600480360381019061007c9190610868565b610155565b60405161008e91906108ce565b60405180910390f35b3480156100a357600080fd5b506100ac6101b6565b6040516100b9919061092a565b60405180910390f35b3480156100ce57600080fd5b506100d76101dc565b6040516100e4919061092a565b60405180910390f35b3480156100f957600080fd5b50610102610200565b60405161010f91906109a4565b60405180910390f35b34801561012457600080fd5b5061013f600480360381019061013a91906109e3565b610224565b60405161014c91906108ce565b60405180910390f35b600080600090505b838390508110156101af5761019584848381811061017e5761017d610a2c565b5b90506020028101906101909190610a6a565b610224565b826101a09190610ac1565b9150808060010191505061015d565b5092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008082606001350361026c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026390610b52565b60405180910390fd5b60008083806040019061027f9190610b72565b600081811061029157610290610a2c565b5b90506020020160208101906102a69190610c01565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd333087606001356040518463ffffffff1660e01b81526004016102e693929190610c2e565b6020604051808303816000875af1158015610305573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103299190610c9d565b5060005b84806000019061033d9190610b72565b90508160ff16101561066d57600085806040019061035b9190610b72565b8360ff1681811061036f5761036e610a2c565b5b90506020020160208101906103849190610c01565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634fa293528780602001906103d29190610cca565b8560ff168181106103e6576103e5610a2c565b5b90506020020160208101906103fb9190610d66565b6040518263ffffffff1660e01b81526004016104179190610da2565b602060405180830381865afa158015610434573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104589190610dd2565b93508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b38780600001906104869190610b72565b8560ff1681811061049a57610499610a2c565b5b90506020020160208101906104af9190610c01565b88606001356040518363ffffffff1660e01b81526004016104d1929190610dff565b6020604051808303816000875af11580156104f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105149190610c9d565b50600061063d87806000019061052a9190610b72565b8560ff1681811061053e5761053d610a2c565b5b90506020020160208101906105539190610c01565b8880608001906105639190610e28565b8660ff1681811061057757610576610a2c565b5b90506020028101906105899190610e8b565b60405160240161059b93929190610f4c565b6040516020818303038152906040527f03f7c80f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050508673ffffffffffffffffffffffffffffffffffffffff1661067590919063ffffffff16565b9050808060200190518101906106539190610faa565b95508593505050808061066590610fd7565b91505061032d565b505050919050565b606061069a8383604051806060016040528060278152602001611181602791396106a2565b905092915050565b60606106ad8461076f565b6106ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e390611072565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516107149190611103565b600060405180830381855af49150503d806000811461074f576040519150601f19603f3d011682016040523d82523d6000602084013e610754565b606091505b5091509150610764828286610792565b925050509392505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b606083156107a2578290506107f2565b6000835111156107b55782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e9919061115e565b60405180910390fd5b9392505050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261082857610827610803565b5b8235905067ffffffffffffffff81111561084557610844610808565b5b6020830191508360208202830111156108615761086061080d565b5b9250929050565b6000806020838503121561087f5761087e6107f9565b5b600083013567ffffffffffffffff81111561089d5761089c6107fe565b5b6108a985828601610812565b92509250509250929050565b6000819050919050565b6108c8816108b5565b82525050565b60006020820190506108e360008301846108bf565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610914826108e9565b9050919050565b61092481610909565b82525050565b600060208201905061093f600083018461091b565b92915050565b6000819050919050565b600061096a610965610960846108e9565b610945565b6108e9565b9050919050565b600061097c8261094f565b9050919050565b600061098e82610971565b9050919050565b61099e81610983565b82525050565b60006020820190506109b96000830184610995565b92915050565b600080fd5b600060a082840312156109da576109d96109bf565b5b81905092915050565b6000602082840312156109f9576109f86107f9565b5b600082013567ffffffffffffffff811115610a1757610a166107fe565b5b610a23848285016109c4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b60008235600160a003833603038112610a8657610a85610a5b565b5b80830191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610acc826108b5565b9150610ad7836108b5565b9250828201905080821115610aef57610aee610a92565b5b92915050565b600082825260208201905092915050565b7f54686520616d6f756e7420666f722073776170206973207a65726f0000000000600082015250565b6000610b3c601b83610af5565b9150610b4782610b06565b602082019050919050565b60006020820190508181036000830152610b6b81610b2f565b9050919050565b60008083356001602003843603038112610b8f57610b8e610a5b565b5b80840192508235915067ffffffffffffffff821115610bb157610bb0610a60565b5b602083019250602082023603831315610bcd57610bcc610a65565b5b509250929050565b610bde81610909565b8114610be957600080fd5b50565b600081359050610bfb81610bd5565b92915050565b600060208284031215610c1757610c166107f9565b5b6000610c2584828501610bec565b91505092915050565b6000606082019050610c43600083018661091b565b610c50602083018561091b565b610c5d60408301846108bf565b949350505050565b60008115159050919050565b610c7a81610c65565b8114610c8557600080fd5b50565b600081519050610c9781610c71565b92915050565b600060208284031215610cb357610cb26107f9565b5b6000610cc184828501610c88565b91505092915050565b60008083356001602003843603038112610ce757610ce6610a5b565b5b80840192508235915067ffffffffffffffff821115610d0957610d08610a60565b5b602083019250602082023603831315610d2557610d24610a65565b5b509250929050565b600060ff82169050919050565b610d4381610d2d565b8114610d4e57600080fd5b50565b600081359050610d6081610d3a565b92915050565b600060208284031215610d7c57610d7b6107f9565b5b6000610d8a84828501610d51565b91505092915050565b610d9c81610d2d565b82525050565b6000602082019050610db76000830184610d93565b92915050565b600081519050610dcc81610bd5565b92915050565b600060208284031215610de857610de76107f9565b5b6000610df684828501610dbd565b91505092915050565b6000604082019050610e14600083018561091b565b610e2160208301846108bf565b9392505050565b60008083356001602003843603038112610e4557610e44610a5b565b5b80840192508235915067ffffffffffffffff821115610e6757610e66610a60565b5b602083019250602082023603831315610e8357610e82610a65565b5b509250929050565b60008083356001602003843603038112610ea857610ea7610a5b565b5b80840192508235915067ffffffffffffffff821115610eca57610ec9610a60565b5b602083019250600182023603831315610ee657610ee5610a65565b5b509250929050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b6000610f2b8385610eee565b9350610f38838584610eff565b610f4183610f0e565b840190509392505050565b6000604082019050610f61600083018661091b565b8181036020830152610f74818486610f1f565b9050949350505050565b610f87816108b5565b8114610f9257600080fd5b50565b600081519050610fa481610f7e565b92915050565b600060208284031215610fc057610fbf6107f9565b5b6000610fce84828501610f95565b91505092915050565b6000610fe282610d2d565b915060ff8203610ff557610ff4610a92565b5b600182019050919050565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b600061105c602683610af5565b915061106782611000565b604082019050919050565b6000602082019050818103600083015261108b8161104f565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156110c65780820151818401526020810190506110ab565b60008484015250505050565b60006110dd82611092565b6110e7818561109d565b93506110f78185602086016110a8565b80840191505092915050565b600061110f82846110d2565b915081905092915050565b600081519050919050565b60006111308261111a565b61113a8185610af5565b935061114a8185602086016110a8565b61115381610f0e565b840191505092915050565b600060208201905081810360008301526111788184611125565b90509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122061f992e9f3f40cadef4bf75ec28ebed061f113157e797a6b70dba605f3f0dc7864736f6c63430008180033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1449 CODESIZE SUB DUP1 PUSH3 0x1449 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x19B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA0 SWAP1 PUSH3 0x22E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x250 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x163 DUP3 PUSH3 0x136 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x175 DUP2 PUSH3 0x156 JUMP JUMPDEST DUP2 EQ PUSH3 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x195 DUP2 PUSH3 0x16A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1B4 JUMPI PUSH3 0x1B3 PUSH3 0x131 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1C4 DUP5 DUP3 DUP6 ADD PUSH3 0x184 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420666163746F72792061646472657373000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x216 PUSH1 0x17 DUP4 PUSH3 0x1CD JUMP JUMPDEST SWAP2 POP PUSH3 0x223 DUP3 PUSH3 0x1DE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x249 DUP2 PUSH3 0x207 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x11DD PUSH3 0x26C PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x1DE ADD MSTORE PUSH2 0x11DD PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x11EAC87A EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xD4A3F3C7 EQ PUSH2 0x118 JUMPI PUSH2 0x55 JUMP JUMPDEST CALLDATASIZE PUSH2 0x55 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x868 JUMP JUMPDEST PUSH2 0x155 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAC PUSH2 0x1B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB9 SWAP2 SWAP1 PUSH2 0x92A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD7 PUSH2 0x1DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x92A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x9A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0x224 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x1AF JUMPI PUSH2 0x195 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x17E JUMPI PUSH2 0x17D PUSH2 0xA2C JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x190 SWAP2 SWAP1 PUSH2 0xA6A JUMP JUMPDEST PUSH2 0x224 JUMP JUMPDEST DUP3 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0xAC1 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x15D JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x60 ADD CALLDATALOAD SUB PUSH2 0x26C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x263 SWAP1 PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP1 PUSH1 0x40 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x291 JUMPI PUSH2 0x290 PUSH2 0xA2C JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x60 ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC2E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x305 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x329 SWAP2 SWAP1 PUSH2 0xC9D JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP5 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x33D SWAP2 SWAP1 PUSH2 0xB72 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x66D JUMPI PUSH1 0x0 DUP6 DUP1 PUSH1 0x40 ADD SWAP1 PUSH2 0x35B SWAP2 SWAP1 PUSH2 0xB72 JUMP JUMPDEST DUP4 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0x36F JUMPI PUSH2 0x36E PUSH2 0xA2C JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x384 SWAP2 SWAP1 PUSH2 0xC01 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4FA29352 DUP8 DUP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0xCCA JUMP JUMPDEST DUP6 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0x3E6 JUMPI PUSH2 0x3E5 PUSH2 0xA2C JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0xD66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x417 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x434 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x458 SWAP2 SWAP1 PUSH2 0xDD2 JUMP JUMPDEST SWAP4 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP8 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x486 SWAP2 SWAP1 PUSH2 0xB72 JUMP JUMPDEST DUP6 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0x49A JUMPI PUSH2 0x499 PUSH2 0xA2C JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4AF SWAP2 SWAP1 PUSH2 0xC01 JUMP JUMPDEST DUP9 PUSH1 0x60 ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D1 SWAP3 SWAP2 SWAP1 PUSH2 0xDFF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x514 SWAP2 SWAP1 PUSH2 0xC9D JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x63D DUP8 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x52A SWAP2 SWAP1 PUSH2 0xB72 JUMP JUMPDEST DUP6 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0x53E JUMPI PUSH2 0x53D PUSH2 0xA2C JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x553 SWAP2 SWAP1 PUSH2 0xC01 JUMP JUMPDEST DUP9 DUP1 PUSH1 0x80 ADD SWAP1 PUSH2 0x563 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST DUP7 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0x577 JUMPI PUSH2 0x576 PUSH2 0xA2C JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x589 SWAP2 SWAP1 PUSH2 0xE8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x59B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x3F7C80F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x675 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x653 SWAP2 SWAP1 PUSH2 0xFAA JUMP JUMPDEST SWAP6 POP DUP6 SWAP4 POP POP POP DUP1 DUP1 PUSH2 0x665 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x32D JUMP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x69A DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1181 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x6A2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6AD DUP5 PUSH2 0x76F JUMP JUMPDEST PUSH2 0x6EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E3 SWAP1 PUSH2 0x1072 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x714 SWAP2 SWAP1 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x74F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x754 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x764 DUP3 DUP3 DUP7 PUSH2 0x792 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x7A2 JUMPI DUP3 SWAP1 POP PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x7B5 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x828 JUMPI PUSH2 0x827 PUSH2 0x803 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x845 JUMPI PUSH2 0x844 PUSH2 0x808 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x861 JUMPI PUSH2 0x860 PUSH2 0x80D JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x87F JUMPI PUSH2 0x87E PUSH2 0x7F9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x89D JUMPI PUSH2 0x89C PUSH2 0x7FE JUMP JUMPDEST JUMPDEST PUSH2 0x8A9 DUP6 DUP3 DUP7 ADD PUSH2 0x812 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C8 DUP2 PUSH2 0x8B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8E3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x914 DUP3 PUSH2 0x8E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x924 DUP2 PUSH2 0x909 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x93F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x91B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x96A PUSH2 0x965 PUSH2 0x960 DUP5 PUSH2 0x8E9 JUMP JUMPDEST PUSH2 0x945 JUMP JUMPDEST PUSH2 0x8E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x97C DUP3 PUSH2 0x94F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98E DUP3 PUSH2 0x971 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x99E DUP2 PUSH2 0x983 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9B9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x995 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9DA JUMPI PUSH2 0x9D9 PUSH2 0x9BF JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F9 JUMPI PUSH2 0x9F8 PUSH2 0x7F9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA17 JUMPI PUSH2 0xA16 PUSH2 0x7FE JUMP JUMPDEST JUMPDEST PUSH2 0xA23 DUP5 DUP3 DUP6 ADD PUSH2 0x9C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 SUB DUP4 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0xA86 JUMPI PUSH2 0xA85 PUSH2 0xA5B JUMP JUMPDEST JUMPDEST DUP1 DUP4 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xACC DUP3 PUSH2 0x8B5 JUMP JUMPDEST SWAP2 POP PUSH2 0xAD7 DUP4 PUSH2 0x8B5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xAEF JUMPI PUSH2 0xAEE PUSH2 0xA92 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54686520616D6F756E7420666F722073776170206973207A65726F0000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3C PUSH1 0x1B DUP4 PUSH2 0xAF5 JUMP JUMPDEST SWAP2 POP PUSH2 0xB47 DUP3 PUSH2 0xB06 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB6B DUP2 PUSH2 0xB2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0xB8F JUMPI PUSH2 0xB8E PUSH2 0xA5B JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xBB1 JUMPI PUSH2 0xBB0 PUSH2 0xA60 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x20 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0xBCD JUMPI PUSH2 0xBCC PUSH2 0xA65 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBDE DUP2 PUSH2 0x909 JUMP JUMPDEST DUP2 EQ PUSH2 0xBE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBFB DUP2 PUSH2 0xBD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC17 JUMPI PUSH2 0xC16 PUSH2 0x7F9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC25 DUP5 DUP3 DUP6 ADD PUSH2 0xBEC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xC43 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x91B JUMP JUMPDEST PUSH2 0xC50 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x91B JUMP JUMPDEST PUSH2 0xC5D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x8BF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC7A DUP2 PUSH2 0xC65 JUMP JUMPDEST DUP2 EQ PUSH2 0xC85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC97 DUP2 PUSH2 0xC71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB3 JUMPI PUSH2 0xCB2 PUSH2 0x7F9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCC1 DUP5 DUP3 DUP6 ADD PUSH2 0xC88 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0xCE7 JUMPI PUSH2 0xCE6 PUSH2 0xA5B JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD09 JUMPI PUSH2 0xD08 PUSH2 0xA60 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x20 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0xD25 JUMPI PUSH2 0xD24 PUSH2 0xA65 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD43 DUP2 PUSH2 0xD2D JUMP JUMPDEST DUP2 EQ PUSH2 0xD4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD60 DUP2 PUSH2 0xD3A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD7C JUMPI PUSH2 0xD7B PUSH2 0x7F9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD8A DUP5 DUP3 DUP6 ADD PUSH2 0xD51 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD9C DUP2 PUSH2 0xD2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xDCC DUP2 PUSH2 0xBD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE8 JUMPI PUSH2 0xDE7 PUSH2 0x7F9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDF6 DUP5 DUP3 DUP6 ADD PUSH2 0xDBD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xE14 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x91B JUMP JUMPDEST PUSH2 0xE21 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0xE45 JUMPI PUSH2 0xE44 PUSH2 0xA5B JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE67 JUMPI PUSH2 0xE66 PUSH2 0xA60 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x20 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0xE83 JUMPI PUSH2 0xE82 PUSH2 0xA65 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0xEA8 JUMPI PUSH2 0xEA7 PUSH2 0xA5B JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xECA JUMPI PUSH2 0xEC9 PUSH2 0xA60 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0xEE6 JUMPI PUSH2 0xEE5 PUSH2 0xA65 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF2B DUP4 DUP6 PUSH2 0xEEE JUMP JUMPDEST SWAP4 POP PUSH2 0xF38 DUP4 DUP6 DUP5 PUSH2 0xEFF JUMP JUMPDEST PUSH2 0xF41 DUP4 PUSH2 0xF0E JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF61 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x91B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xF74 DUP2 DUP5 DUP7 PUSH2 0xF1F JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xF87 DUP2 PUSH2 0x8B5 JUMP JUMPDEST DUP2 EQ PUSH2 0xF92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xFA4 DUP2 PUSH2 0xF7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC0 JUMPI PUSH2 0xFBF PUSH2 0x7F9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFCE DUP5 DUP3 DUP6 ADD PUSH2 0xF95 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE2 DUP3 PUSH2 0xD2D JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH2 0xFF5 JUMPI PUSH2 0xFF4 PUSH2 0xA92 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E74726163740000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105C PUSH1 0x26 DUP4 PUSH2 0xAF5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1067 DUP3 PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x108B DUP2 PUSH2 0x104F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10C6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x10AB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10DD DUP3 PUSH2 0x1092 JUMP JUMPDEST PUSH2 0x10E7 DUP2 DUP6 PUSH2 0x109D JUMP JUMPDEST SWAP4 POP PUSH2 0x10F7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x10A8 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x110F DUP3 DUP5 PUSH2 0x10D2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1130 DUP3 PUSH2 0x111A JUMP JUMPDEST PUSH2 0x113A DUP2 DUP6 PUSH2 0xAF5 JUMP JUMPDEST SWAP4 POP PUSH2 0x114A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x10A8 JUMP JUMPDEST PUSH2 0x1153 DUP2 PUSH2 0xF0E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1178 DUP2 DUP5 PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x7066735822122061F992 0xE9 RETURN DELEGATECALL 0xC 0xAD 0xEF 0x4B 0xF7 MCOPY 0xC2 DUP15 0xBE 0xD0 PUSH2 0xF113 ISZERO PUSH31 0x797A6B70DBA605F3F0DC7864736F6C63430008180033000000000000000000 ","sourceMap":"441:2701:8:-:0;;;1044:185;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1113:1;1093:22;;:8;:22;;;1085:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;1183:8;1154:7;;:38;;;;;;;;;;;;;;;;;;1211:10;1203:5;;:18;;;;;;;;;;;;;;;;;;1044:185;441:2701;;88:117:14;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:169::-;1286:11;1320:6;1315:3;1308:19;1360:4;1355:3;1351:14;1336:29;;1202:169;;;;:::o;1377:173::-;1517:25;1513:1;1505:6;1501:14;1494:49;1377:173;:::o;1556:366::-;1698:3;1719:67;1783:2;1778:3;1719:67;:::i;:::-;1712:74;;1795:93;1884:3;1795:93;:::i;:::-;1913:2;1908:3;1904:12;1897:19;;1556:366;;;:::o;1928:419::-;2094:4;2132:2;2121:9;2117:18;2109:26;;2181:9;2175:4;2171:20;2167:1;2156:9;2152:17;2145:47;2209:131;2335:4;2209:131;:::i;:::-;2201:139;;1928:419;;;:::o;441:2701:8:-;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@WETH_4251":{"entryPoint":476,"id":4251,"parameterSlots":0,"returnSlots":0},"@_4311":{"entryPoint":null,"id":4311,"parameterSlots":0,"returnSlots":0},"@factory_4247":{"entryPoint":512,"id":4247,"parameterSlots":0,"returnSlots":0},"@functionDelegateCall_4762":{"entryPoint":1653,"id":4762,"parameterSlots":2,"returnSlots":1},"@functionDelegateCall_4797":{"entryPoint":1698,"id":4797,"parameterSlots":3,"returnSlots":1},"@isContract_4552":{"entryPoint":1903,"id":4552,"parameterSlots":1,"returnSlots":1},"@owner_4249":{"entryPoint":438,"id":4249,"parameterSlots":0,"returnSlots":0},"@swapMultiHop_4475":{"entryPoint":548,"id":4475,"parameterSlots":1,"returnSlots":1},"@swapMultiRoute_4506":{"entryPoint":341,"id":4506,"parameterSlots":2,"returnSlots":1},"@verifyCallResult_4828":{"entryPoint":1938,"id":4828,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3052,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":3517,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_struct$_SwapMultiHop_$5261_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":2066,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bool_fromMemory":{"entryPoint":3208,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_SwapMultiHop_$5261_calldata_ptr":{"entryPoint":2500,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":3989,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":3409,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3073,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":3538,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_struct$_SwapMultiHop_$5261_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":2152,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":3229,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_SwapMultiHop_$5261_calldata_ptr":{"entryPoint":2531,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":4010,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint8":{"entryPoint":3430,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2331,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":3871,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4306,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_IDexHandlerFactory_$4534_to_t_address_fromStack":{"entryPoint":2453,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":4389,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_46f23f0df13d0e943c450e2a9aba8f479be58f4951eb3d14222cd3501b7ab991_to_t_string_memory_ptr_fromStack":{"entryPoint":2863,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack":{"entryPoint":4175,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2239,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3475,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":4355,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2346,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":3118,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":3916,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":3583,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IDexHandlerFactory_$4534__to_t_address__fromStack_reversed":{"entryPoint":2468,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4446,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_46f23f0df13d0e943c450e2a9aba8f479be58f4951eb3d14222cd3501b7ab991__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2898,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4210,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2254,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3490,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":2930,"id":null,"parameterSlots":2,"returnSlots":2},"access_calldata_tail_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":3624,"id":null,"parameterSlots":2,"returnSlots":2},"access_calldata_tail_t_array$_t_uint8_$dyn_calldata_ptr":{"entryPoint":3274,"id":null,"parameterSlots":2,"returnSlots":2},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":3723,"id":null,"parameterSlots":2,"returnSlots":2},"access_calldata_tail_t_struct$_SwapMultiHop_$5261_calldata_ptr":{"entryPoint":2666,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":4242,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":4378,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":3822,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4253,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2805,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2753,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2313,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3173,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2281,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2229,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3373,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IDexHandlerFactory_$4534_to_t_address":{"entryPoint":2435,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":2417,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":2383,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":3839,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":4264,"id":null,"parameterSlots":3,"returnSlots":0},"identity":{"entryPoint":2373,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint8":{"entryPoint":4055,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":2706,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":2604,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":2056,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":2051,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a":{"entryPoint":2656,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d":{"entryPoint":2495,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad":{"entryPoint":2651,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":2061,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e":{"entryPoint":2661,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":2046,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2041,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3854,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_46f23f0df13d0e943c450e2a9aba8f479be58f4951eb3d14222cd3501b7ab991":{"entryPoint":2822,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520":{"entryPoint":4096,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3029,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":3185,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3966,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":3386,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:19068:14","nodeType":"YulBlock","src":"0:19068:14","statements":[{"body":{"nativeSrc":"47:35:14","nodeType":"YulBlock","src":"47:35:14","statements":[{"nativeSrc":"57:19:14","nodeType":"YulAssignment","src":"57:19:14","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:14","nodeType":"YulLiteral","src":"73:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:14","nodeType":"YulIdentifier","src":"67:5:14"},"nativeSrc":"67:9:14","nodeType":"YulFunctionCall","src":"67:9:14"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:14","nodeType":"YulIdentifier","src":"57:6:14"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:14","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:14","nodeType":"YulTypedName","src":"40:6:14","type":""}],"src":"7:75:14"},{"body":{"nativeSrc":"177:28:14","nodeType":"YulBlock","src":"177:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:14","nodeType":"YulLiteral","src":"194:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:14","nodeType":"YulLiteral","src":"197:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:14","nodeType":"YulIdentifier","src":"187:6:14"},"nativeSrc":"187:12:14","nodeType":"YulFunctionCall","src":"187:12:14"},"nativeSrc":"187:12:14","nodeType":"YulExpressionStatement","src":"187:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:14","nodeType":"YulFunctionDefinition","src":"88:117:14"},{"body":{"nativeSrc":"300:28:14","nodeType":"YulBlock","src":"300:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:14","nodeType":"YulLiteral","src":"317:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:14","nodeType":"YulLiteral","src":"320:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:14","nodeType":"YulIdentifier","src":"310:6:14"},"nativeSrc":"310:12:14","nodeType":"YulFunctionCall","src":"310:12:14"},"nativeSrc":"310:12:14","nodeType":"YulExpressionStatement","src":"310:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:14","nodeType":"YulFunctionDefinition","src":"211:117:14"},{"body":{"nativeSrc":"423:28:14","nodeType":"YulBlock","src":"423:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"440:1:14","nodeType":"YulLiteral","src":"440:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"443:1:14","nodeType":"YulLiteral","src":"443:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"433:6:14","nodeType":"YulIdentifier","src":"433:6:14"},"nativeSrc":"433:12:14","nodeType":"YulFunctionCall","src":"433:12:14"},"nativeSrc":"433:12:14","nodeType":"YulExpressionStatement","src":"433:12:14"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"334:117:14","nodeType":"YulFunctionDefinition","src":"334:117:14"},{"body":{"nativeSrc":"546:28:14","nodeType":"YulBlock","src":"546:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"563:1:14","nodeType":"YulLiteral","src":"563:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"566:1:14","nodeType":"YulLiteral","src":"566:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"556:6:14","nodeType":"YulIdentifier","src":"556:6:14"},"nativeSrc":"556:12:14","nodeType":"YulFunctionCall","src":"556:12:14"},"nativeSrc":"556:12:14","nodeType":"YulExpressionStatement","src":"556:12:14"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"457:117:14","nodeType":"YulFunctionDefinition","src":"457:117:14"},{"body":{"nativeSrc":"669:28:14","nodeType":"YulBlock","src":"669:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"686:1:14","nodeType":"YulLiteral","src":"686:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"689:1:14","nodeType":"YulLiteral","src":"689:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"679:6:14","nodeType":"YulIdentifier","src":"679:6:14"},"nativeSrc":"679:12:14","nodeType":"YulFunctionCall","src":"679:12:14"},"nativeSrc":"679:12:14","nodeType":"YulExpressionStatement","src":"679:12:14"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"580:117:14","nodeType":"YulFunctionDefinition","src":"580:117:14"},{"body":{"nativeSrc":"854:478:14","nodeType":"YulBlock","src":"854:478:14","statements":[{"body":{"nativeSrc":"903:83:14","nodeType":"YulBlock","src":"903:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"905:77:14","nodeType":"YulIdentifier","src":"905:77:14"},"nativeSrc":"905:79:14","nodeType":"YulFunctionCall","src":"905:79:14"},"nativeSrc":"905:79:14","nodeType":"YulExpressionStatement","src":"905:79:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"882:6:14","nodeType":"YulIdentifier","src":"882:6:14"},{"kind":"number","nativeSrc":"890:4:14","nodeType":"YulLiteral","src":"890:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"878:3:14","nodeType":"YulIdentifier","src":"878:3:14"},"nativeSrc":"878:17:14","nodeType":"YulFunctionCall","src":"878:17:14"},{"name":"end","nativeSrc":"897:3:14","nodeType":"YulIdentifier","src":"897:3:14"}],"functionName":{"name":"slt","nativeSrc":"874:3:14","nodeType":"YulIdentifier","src":"874:3:14"},"nativeSrc":"874:27:14","nodeType":"YulFunctionCall","src":"874:27:14"}],"functionName":{"name":"iszero","nativeSrc":"867:6:14","nodeType":"YulIdentifier","src":"867:6:14"},"nativeSrc":"867:35:14","nodeType":"YulFunctionCall","src":"867:35:14"},"nativeSrc":"864:122:14","nodeType":"YulIf","src":"864:122:14"},{"nativeSrc":"995:30:14","nodeType":"YulAssignment","src":"995:30:14","value":{"arguments":[{"name":"offset","nativeSrc":"1018:6:14","nodeType":"YulIdentifier","src":"1018:6:14"}],"functionName":{"name":"calldataload","nativeSrc":"1005:12:14","nodeType":"YulIdentifier","src":"1005:12:14"},"nativeSrc":"1005:20:14","nodeType":"YulFunctionCall","src":"1005:20:14"},"variableNames":[{"name":"length","nativeSrc":"995:6:14","nodeType":"YulIdentifier","src":"995:6:14"}]},{"body":{"nativeSrc":"1068:83:14","nodeType":"YulBlock","src":"1068:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"1070:77:14","nodeType":"YulIdentifier","src":"1070:77:14"},"nativeSrc":"1070:79:14","nodeType":"YulFunctionCall","src":"1070:79:14"},"nativeSrc":"1070:79:14","nodeType":"YulExpressionStatement","src":"1070:79:14"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1040:6:14","nodeType":"YulIdentifier","src":"1040:6:14"},{"kind":"number","nativeSrc":"1048:18:14","nodeType":"YulLiteral","src":"1048:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1037:2:14","nodeType":"YulIdentifier","src":"1037:2:14"},"nativeSrc":"1037:30:14","nodeType":"YulFunctionCall","src":"1037:30:14"},"nativeSrc":"1034:117:14","nodeType":"YulIf","src":"1034:117:14"},{"nativeSrc":"1160:29:14","nodeType":"YulAssignment","src":"1160:29:14","value":{"arguments":[{"name":"offset","nativeSrc":"1176:6:14","nodeType":"YulIdentifier","src":"1176:6:14"},{"kind":"number","nativeSrc":"1184:4:14","nodeType":"YulLiteral","src":"1184:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1172:3:14","nodeType":"YulIdentifier","src":"1172:3:14"},"nativeSrc":"1172:17:14","nodeType":"YulFunctionCall","src":"1172:17:14"},"variableNames":[{"name":"arrayPos","nativeSrc":"1160:8:14","nodeType":"YulIdentifier","src":"1160:8:14"}]},{"body":{"nativeSrc":"1243:83:14","nodeType":"YulBlock","src":"1243:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"1245:77:14","nodeType":"YulIdentifier","src":"1245:77:14"},"nativeSrc":"1245:79:14","nodeType":"YulFunctionCall","src":"1245:79:14"},"nativeSrc":"1245:79:14","nodeType":"YulExpressionStatement","src":"1245:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"1208:8:14","nodeType":"YulIdentifier","src":"1208:8:14"},{"arguments":[{"name":"length","nativeSrc":"1222:6:14","nodeType":"YulIdentifier","src":"1222:6:14"},{"kind":"number","nativeSrc":"1230:4:14","nodeType":"YulLiteral","src":"1230:4:14","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"1218:3:14","nodeType":"YulIdentifier","src":"1218:3:14"},"nativeSrc":"1218:17:14","nodeType":"YulFunctionCall","src":"1218:17:14"}],"functionName":{"name":"add","nativeSrc":"1204:3:14","nodeType":"YulIdentifier","src":"1204:3:14"},"nativeSrc":"1204:32:14","nodeType":"YulFunctionCall","src":"1204:32:14"},{"name":"end","nativeSrc":"1238:3:14","nodeType":"YulIdentifier","src":"1238:3:14"}],"functionName":{"name":"gt","nativeSrc":"1201:2:14","nodeType":"YulIdentifier","src":"1201:2:14"},"nativeSrc":"1201:41:14","nodeType":"YulFunctionCall","src":"1201:41:14"},"nativeSrc":"1198:128:14","nodeType":"YulIf","src":"1198:128:14"}]},"name":"abi_decode_t_array$_t_struct$_SwapMultiHop_$5261_calldata_ptr_$dyn_calldata_ptr","nativeSrc":"732:600:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"821:6:14","nodeType":"YulTypedName","src":"821:6:14","type":""},{"name":"end","nativeSrc":"829:3:14","nodeType":"YulTypedName","src":"829:3:14","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"837:8:14","nodeType":"YulTypedName","src":"837:8:14","type":""},{"name":"length","nativeSrc":"847:6:14","nodeType":"YulTypedName","src":"847:6:14","type":""}],"src":"732:600:14"},{"body":{"nativeSrc":"1471:490:14","nodeType":"YulBlock","src":"1471:490:14","statements":[{"body":{"nativeSrc":"1517:83:14","nodeType":"YulBlock","src":"1517:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1519:77:14","nodeType":"YulIdentifier","src":"1519:77:14"},"nativeSrc":"1519:79:14","nodeType":"YulFunctionCall","src":"1519:79:14"},"nativeSrc":"1519:79:14","nodeType":"YulExpressionStatement","src":"1519:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1492:7:14","nodeType":"YulIdentifier","src":"1492:7:14"},{"name":"headStart","nativeSrc":"1501:9:14","nodeType":"YulIdentifier","src":"1501:9:14"}],"functionName":{"name":"sub","nativeSrc":"1488:3:14","nodeType":"YulIdentifier","src":"1488:3:14"},"nativeSrc":"1488:23:14","nodeType":"YulFunctionCall","src":"1488:23:14"},{"kind":"number","nativeSrc":"1513:2:14","nodeType":"YulLiteral","src":"1513:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1484:3:14","nodeType":"YulIdentifier","src":"1484:3:14"},"nativeSrc":"1484:32:14","nodeType":"YulFunctionCall","src":"1484:32:14"},"nativeSrc":"1481:119:14","nodeType":"YulIf","src":"1481:119:14"},{"nativeSrc":"1610:344:14","nodeType":"YulBlock","src":"1610:344:14","statements":[{"nativeSrc":"1625:45:14","nodeType":"YulVariableDeclaration","src":"1625:45:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1656:9:14","nodeType":"YulIdentifier","src":"1656:9:14"},{"kind":"number","nativeSrc":"1667:1:14","nodeType":"YulLiteral","src":"1667:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1652:3:14","nodeType":"YulIdentifier","src":"1652:3:14"},"nativeSrc":"1652:17:14","nodeType":"YulFunctionCall","src":"1652:17:14"}],"functionName":{"name":"calldataload","nativeSrc":"1639:12:14","nodeType":"YulIdentifier","src":"1639:12:14"},"nativeSrc":"1639:31:14","nodeType":"YulFunctionCall","src":"1639:31:14"},"variables":[{"name":"offset","nativeSrc":"1629:6:14","nodeType":"YulTypedName","src":"1629:6:14","type":""}]},{"body":{"nativeSrc":"1717:83:14","nodeType":"YulBlock","src":"1717:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1719:77:14","nodeType":"YulIdentifier","src":"1719:77:14"},"nativeSrc":"1719:79:14","nodeType":"YulFunctionCall","src":"1719:79:14"},"nativeSrc":"1719:79:14","nodeType":"YulExpressionStatement","src":"1719:79:14"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"1689:6:14","nodeType":"YulIdentifier","src":"1689:6:14"},{"kind":"number","nativeSrc":"1697:18:14","nodeType":"YulLiteral","src":"1697:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1686:2:14","nodeType":"YulIdentifier","src":"1686:2:14"},"nativeSrc":"1686:30:14","nodeType":"YulFunctionCall","src":"1686:30:14"},"nativeSrc":"1683:117:14","nodeType":"YulIf","src":"1683:117:14"},{"nativeSrc":"1814:130:14","nodeType":"YulAssignment","src":"1814:130:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1916:9:14","nodeType":"YulIdentifier","src":"1916:9:14"},{"name":"offset","nativeSrc":"1927:6:14","nodeType":"YulIdentifier","src":"1927:6:14"}],"functionName":{"name":"add","nativeSrc":"1912:3:14","nodeType":"YulIdentifier","src":"1912:3:14"},"nativeSrc":"1912:22:14","nodeType":"YulFunctionCall","src":"1912:22:14"},{"name":"dataEnd","nativeSrc":"1936:7:14","nodeType":"YulIdentifier","src":"1936:7:14"}],"functionName":{"name":"abi_decode_t_array$_t_struct$_SwapMultiHop_$5261_calldata_ptr_$dyn_calldata_ptr","nativeSrc":"1832:79:14","nodeType":"YulIdentifier","src":"1832:79:14"},"nativeSrc":"1832:112:14","nodeType":"YulFunctionCall","src":"1832:112:14"},"variableNames":[{"name":"value0","nativeSrc":"1814:6:14","nodeType":"YulIdentifier","src":"1814:6:14"},{"name":"value1","nativeSrc":"1822:6:14","nodeType":"YulIdentifier","src":"1822:6:14"}]}]}]},"name":"abi_decode_tuple_t_array$_t_struct$_SwapMultiHop_$5261_calldata_ptr_$dyn_calldata_ptr","nativeSrc":"1338:623:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1433:9:14","nodeType":"YulTypedName","src":"1433:9:14","type":""},{"name":"dataEnd","nativeSrc":"1444:7:14","nodeType":"YulTypedName","src":"1444:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1456:6:14","nodeType":"YulTypedName","src":"1456:6:14","type":""},{"name":"value1","nativeSrc":"1464:6:14","nodeType":"YulTypedName","src":"1464:6:14","type":""}],"src":"1338:623:14"},{"body":{"nativeSrc":"2012:32:14","nodeType":"YulBlock","src":"2012:32:14","statements":[{"nativeSrc":"2022:16:14","nodeType":"YulAssignment","src":"2022:16:14","value":{"name":"value","nativeSrc":"2033:5:14","nodeType":"YulIdentifier","src":"2033:5:14"},"variableNames":[{"name":"cleaned","nativeSrc":"2022:7:14","nodeType":"YulIdentifier","src":"2022:7:14"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1967:77:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1994:5:14","nodeType":"YulTypedName","src":"1994:5:14","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2004:7:14","nodeType":"YulTypedName","src":"2004:7:14","type":""}],"src":"1967:77:14"},{"body":{"nativeSrc":"2115:53:14","nodeType":"YulBlock","src":"2115:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2132:3:14","nodeType":"YulIdentifier","src":"2132:3:14"},{"arguments":[{"name":"value","nativeSrc":"2155:5:14","nodeType":"YulIdentifier","src":"2155:5:14"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2137:17:14","nodeType":"YulIdentifier","src":"2137:17:14"},"nativeSrc":"2137:24:14","nodeType":"YulFunctionCall","src":"2137:24:14"}],"functionName":{"name":"mstore","nativeSrc":"2125:6:14","nodeType":"YulIdentifier","src":"2125:6:14"},"nativeSrc":"2125:37:14","nodeType":"YulFunctionCall","src":"2125:37:14"},"nativeSrc":"2125:37:14","nodeType":"YulExpressionStatement","src":"2125:37:14"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"2050:118:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2103:5:14","nodeType":"YulTypedName","src":"2103:5:14","type":""},{"name":"pos","nativeSrc":"2110:3:14","nodeType":"YulTypedName","src":"2110:3:14","type":""}],"src":"2050:118:14"},{"body":{"nativeSrc":"2272:124:14","nodeType":"YulBlock","src":"2272:124:14","statements":[{"nativeSrc":"2282:26:14","nodeType":"YulAssignment","src":"2282:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"2294:9:14","nodeType":"YulIdentifier","src":"2294:9:14"},{"kind":"number","nativeSrc":"2305:2:14","nodeType":"YulLiteral","src":"2305:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2290:3:14","nodeType":"YulIdentifier","src":"2290:3:14"},"nativeSrc":"2290:18:14","nodeType":"YulFunctionCall","src":"2290:18:14"},"variableNames":[{"name":"tail","nativeSrc":"2282:4:14","nodeType":"YulIdentifier","src":"2282:4:14"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2362:6:14","nodeType":"YulIdentifier","src":"2362:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"2375:9:14","nodeType":"YulIdentifier","src":"2375:9:14"},{"kind":"number","nativeSrc":"2386:1:14","nodeType":"YulLiteral","src":"2386:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2371:3:14","nodeType":"YulIdentifier","src":"2371:3:14"},"nativeSrc":"2371:17:14","nodeType":"YulFunctionCall","src":"2371:17:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"2318:43:14","nodeType":"YulIdentifier","src":"2318:43:14"},"nativeSrc":"2318:71:14","nodeType":"YulFunctionCall","src":"2318:71:14"},"nativeSrc":"2318:71:14","nodeType":"YulExpressionStatement","src":"2318:71:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"2174:222:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2244:9:14","nodeType":"YulTypedName","src":"2244:9:14","type":""},{"name":"value0","nativeSrc":"2256:6:14","nodeType":"YulTypedName","src":"2256:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2267:4:14","nodeType":"YulTypedName","src":"2267:4:14","type":""}],"src":"2174:222:14"},{"body":{"nativeSrc":"2447:81:14","nodeType":"YulBlock","src":"2447:81:14","statements":[{"nativeSrc":"2457:65:14","nodeType":"YulAssignment","src":"2457:65:14","value":{"arguments":[{"name":"value","nativeSrc":"2472:5:14","nodeType":"YulIdentifier","src":"2472:5:14"},{"kind":"number","nativeSrc":"2479:42:14","nodeType":"YulLiteral","src":"2479:42:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"2468:3:14","nodeType":"YulIdentifier","src":"2468:3:14"},"nativeSrc":"2468:54:14","nodeType":"YulFunctionCall","src":"2468:54:14"},"variableNames":[{"name":"cleaned","nativeSrc":"2457:7:14","nodeType":"YulIdentifier","src":"2457:7:14"}]}]},"name":"cleanup_t_uint160","nativeSrc":"2402:126:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2429:5:14","nodeType":"YulTypedName","src":"2429:5:14","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2439:7:14","nodeType":"YulTypedName","src":"2439:7:14","type":""}],"src":"2402:126:14"},{"body":{"nativeSrc":"2579:51:14","nodeType":"YulBlock","src":"2579:51:14","statements":[{"nativeSrc":"2589:35:14","nodeType":"YulAssignment","src":"2589:35:14","value":{"arguments":[{"name":"value","nativeSrc":"2618:5:14","nodeType":"YulIdentifier","src":"2618:5:14"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"2600:17:14","nodeType":"YulIdentifier","src":"2600:17:14"},"nativeSrc":"2600:24:14","nodeType":"YulFunctionCall","src":"2600:24:14"},"variableNames":[{"name":"cleaned","nativeSrc":"2589:7:14","nodeType":"YulIdentifier","src":"2589:7:14"}]}]},"name":"cleanup_t_address","nativeSrc":"2534:96:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2561:5:14","nodeType":"YulTypedName","src":"2561:5:14","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2571:7:14","nodeType":"YulTypedName","src":"2571:7:14","type":""}],"src":"2534:96:14"},{"body":{"nativeSrc":"2701:53:14","nodeType":"YulBlock","src":"2701:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2718:3:14","nodeType":"YulIdentifier","src":"2718:3:14"},{"arguments":[{"name":"value","nativeSrc":"2741:5:14","nodeType":"YulIdentifier","src":"2741:5:14"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"2723:17:14","nodeType":"YulIdentifier","src":"2723:17:14"},"nativeSrc":"2723:24:14","nodeType":"YulFunctionCall","src":"2723:24:14"}],"functionName":{"name":"mstore","nativeSrc":"2711:6:14","nodeType":"YulIdentifier","src":"2711:6:14"},"nativeSrc":"2711:37:14","nodeType":"YulFunctionCall","src":"2711:37:14"},"nativeSrc":"2711:37:14","nodeType":"YulExpressionStatement","src":"2711:37:14"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2636:118:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2689:5:14","nodeType":"YulTypedName","src":"2689:5:14","type":""},{"name":"pos","nativeSrc":"2696:3:14","nodeType":"YulTypedName","src":"2696:3:14","type":""}],"src":"2636:118:14"},{"body":{"nativeSrc":"2858:124:14","nodeType":"YulBlock","src":"2858:124:14","statements":[{"nativeSrc":"2868:26:14","nodeType":"YulAssignment","src":"2868:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"2880:9:14","nodeType":"YulIdentifier","src":"2880:9:14"},{"kind":"number","nativeSrc":"2891:2:14","nodeType":"YulLiteral","src":"2891:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2876:3:14","nodeType":"YulIdentifier","src":"2876:3:14"},"nativeSrc":"2876:18:14","nodeType":"YulFunctionCall","src":"2876:18:14"},"variableNames":[{"name":"tail","nativeSrc":"2868:4:14","nodeType":"YulIdentifier","src":"2868:4:14"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2948:6:14","nodeType":"YulIdentifier","src":"2948:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"2961:9:14","nodeType":"YulIdentifier","src":"2961:9:14"},{"kind":"number","nativeSrc":"2972:1:14","nodeType":"YulLiteral","src":"2972:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2957:3:14","nodeType":"YulIdentifier","src":"2957:3:14"},"nativeSrc":"2957:17:14","nodeType":"YulFunctionCall","src":"2957:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2904:43:14","nodeType":"YulIdentifier","src":"2904:43:14"},"nativeSrc":"2904:71:14","nodeType":"YulFunctionCall","src":"2904:71:14"},"nativeSrc":"2904:71:14","nodeType":"YulExpressionStatement","src":"2904:71:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2760:222:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2830:9:14","nodeType":"YulTypedName","src":"2830:9:14","type":""},{"name":"value0","nativeSrc":"2842:6:14","nodeType":"YulTypedName","src":"2842:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2853:4:14","nodeType":"YulTypedName","src":"2853:4:14","type":""}],"src":"2760:222:14"},{"body":{"nativeSrc":"3020:28:14","nodeType":"YulBlock","src":"3020:28:14","statements":[{"nativeSrc":"3030:12:14","nodeType":"YulAssignment","src":"3030:12:14","value":{"name":"value","nativeSrc":"3037:5:14","nodeType":"YulIdentifier","src":"3037:5:14"},"variableNames":[{"name":"ret","nativeSrc":"3030:3:14","nodeType":"YulIdentifier","src":"3030:3:14"}]}]},"name":"identity","nativeSrc":"2988:60:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3006:5:14","nodeType":"YulTypedName","src":"3006:5:14","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3016:3:14","nodeType":"YulTypedName","src":"3016:3:14","type":""}],"src":"2988:60:14"},{"body":{"nativeSrc":"3114:82:14","nodeType":"YulBlock","src":"3114:82:14","statements":[{"nativeSrc":"3124:66:14","nodeType":"YulAssignment","src":"3124:66:14","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3182:5:14","nodeType":"YulIdentifier","src":"3182:5:14"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3164:17:14","nodeType":"YulIdentifier","src":"3164:17:14"},"nativeSrc":"3164:24:14","nodeType":"YulFunctionCall","src":"3164:24:14"}],"functionName":{"name":"identity","nativeSrc":"3155:8:14","nodeType":"YulIdentifier","src":"3155:8:14"},"nativeSrc":"3155:34:14","nodeType":"YulFunctionCall","src":"3155:34:14"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3137:17:14","nodeType":"YulIdentifier","src":"3137:17:14"},"nativeSrc":"3137:53:14","nodeType":"YulFunctionCall","src":"3137:53:14"},"variableNames":[{"name":"converted","nativeSrc":"3124:9:14","nodeType":"YulIdentifier","src":"3124:9:14"}]}]},"name":"convert_t_uint160_to_t_uint160","nativeSrc":"3054:142:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3094:5:14","nodeType":"YulTypedName","src":"3094:5:14","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"3104:9:14","nodeType":"YulTypedName","src":"3104:9:14","type":""}],"src":"3054:142:14"},{"body":{"nativeSrc":"3262:66:14","nodeType":"YulBlock","src":"3262:66:14","statements":[{"nativeSrc":"3272:50:14","nodeType":"YulAssignment","src":"3272:50:14","value":{"arguments":[{"name":"value","nativeSrc":"3316:5:14","nodeType":"YulIdentifier","src":"3316:5:14"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nativeSrc":"3285:30:14","nodeType":"YulIdentifier","src":"3285:30:14"},"nativeSrc":"3285:37:14","nodeType":"YulFunctionCall","src":"3285:37:14"},"variableNames":[{"name":"converted","nativeSrc":"3272:9:14","nodeType":"YulIdentifier","src":"3272:9:14"}]}]},"name":"convert_t_uint160_to_t_address","nativeSrc":"3202:126:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3242:5:14","nodeType":"YulTypedName","src":"3242:5:14","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"3252:9:14","nodeType":"YulTypedName","src":"3252:9:14","type":""}],"src":"3202:126:14"},{"body":{"nativeSrc":"3421:66:14","nodeType":"YulBlock","src":"3421:66:14","statements":[{"nativeSrc":"3431:50:14","nodeType":"YulAssignment","src":"3431:50:14","value":{"arguments":[{"name":"value","nativeSrc":"3475:5:14","nodeType":"YulIdentifier","src":"3475:5:14"}],"functionName":{"name":"convert_t_uint160_to_t_address","nativeSrc":"3444:30:14","nodeType":"YulIdentifier","src":"3444:30:14"},"nativeSrc":"3444:37:14","nodeType":"YulFunctionCall","src":"3444:37:14"},"variableNames":[{"name":"converted","nativeSrc":"3431:9:14","nodeType":"YulIdentifier","src":"3431:9:14"}]}]},"name":"convert_t_contract$_IDexHandlerFactory_$4534_to_t_address","nativeSrc":"3334:153:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3401:5:14","nodeType":"YulTypedName","src":"3401:5:14","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"3411:9:14","nodeType":"YulTypedName","src":"3411:9:14","type":""}],"src":"3334:153:14"},{"body":{"nativeSrc":"3585:93:14","nodeType":"YulBlock","src":"3585:93:14","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3602:3:14","nodeType":"YulIdentifier","src":"3602:3:14"},{"arguments":[{"name":"value","nativeSrc":"3665:5:14","nodeType":"YulIdentifier","src":"3665:5:14"}],"functionName":{"name":"convert_t_contract$_IDexHandlerFactory_$4534_to_t_address","nativeSrc":"3607:57:14","nodeType":"YulIdentifier","src":"3607:57:14"},"nativeSrc":"3607:64:14","nodeType":"YulFunctionCall","src":"3607:64:14"}],"functionName":{"name":"mstore","nativeSrc":"3595:6:14","nodeType":"YulIdentifier","src":"3595:6:14"},"nativeSrc":"3595:77:14","nodeType":"YulFunctionCall","src":"3595:77:14"},"nativeSrc":"3595:77:14","nodeType":"YulExpressionStatement","src":"3595:77:14"}]},"name":"abi_encode_t_contract$_IDexHandlerFactory_$4534_to_t_address_fromStack","nativeSrc":"3493:185:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3573:5:14","nodeType":"YulTypedName","src":"3573:5:14","type":""},{"name":"pos","nativeSrc":"3580:3:14","nodeType":"YulTypedName","src":"3580:3:14","type":""}],"src":"3493:185:14"},{"body":{"nativeSrc":"3809:151:14","nodeType":"YulBlock","src":"3809:151:14","statements":[{"nativeSrc":"3819:26:14","nodeType":"YulAssignment","src":"3819:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"3831:9:14","nodeType":"YulIdentifier","src":"3831:9:14"},{"kind":"number","nativeSrc":"3842:2:14","nodeType":"YulLiteral","src":"3842:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3827:3:14","nodeType":"YulIdentifier","src":"3827:3:14"},"nativeSrc":"3827:18:14","nodeType":"YulFunctionCall","src":"3827:18:14"},"variableNames":[{"name":"tail","nativeSrc":"3819:4:14","nodeType":"YulIdentifier","src":"3819:4:14"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3926:6:14","nodeType":"YulIdentifier","src":"3926:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"3939:9:14","nodeType":"YulIdentifier","src":"3939:9:14"},{"kind":"number","nativeSrc":"3950:1:14","nodeType":"YulLiteral","src":"3950:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3935:3:14","nodeType":"YulIdentifier","src":"3935:3:14"},"nativeSrc":"3935:17:14","nodeType":"YulFunctionCall","src":"3935:17:14"}],"functionName":{"name":"abi_encode_t_contract$_IDexHandlerFactory_$4534_to_t_address_fromStack","nativeSrc":"3855:70:14","nodeType":"YulIdentifier","src":"3855:70:14"},"nativeSrc":"3855:98:14","nodeType":"YulFunctionCall","src":"3855:98:14"},"nativeSrc":"3855:98:14","nodeType":"YulExpressionStatement","src":"3855:98:14"}]},"name":"abi_encode_tuple_t_contract$_IDexHandlerFactory_$4534__to_t_address__fromStack_reversed","nativeSrc":"3684:276:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3781:9:14","nodeType":"YulTypedName","src":"3781:9:14","type":""},{"name":"value0","nativeSrc":"3793:6:14","nodeType":"YulTypedName","src":"3793:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3804:4:14","nodeType":"YulTypedName","src":"3804:4:14","type":""}],"src":"3684:276:14"},{"body":{"nativeSrc":"4055:28:14","nodeType":"YulBlock","src":"4055:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4072:1:14","nodeType":"YulLiteral","src":"4072:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"4075:1:14","nodeType":"YulLiteral","src":"4075:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4065:6:14","nodeType":"YulIdentifier","src":"4065:6:14"},"nativeSrc":"4065:12:14","nodeType":"YulFunctionCall","src":"4065:12:14"},"nativeSrc":"4065:12:14","nodeType":"YulExpressionStatement","src":"4065:12:14"}]},"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nativeSrc":"3966:117:14","nodeType":"YulFunctionDefinition","src":"3966:117:14"},{"body":{"nativeSrc":"4200:153:14","nodeType":"YulBlock","src":"4200:153:14","statements":[{"body":{"nativeSrc":"4240:83:14","nodeType":"YulBlock","src":"4240:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nativeSrc":"4242:77:14","nodeType":"YulIdentifier","src":"4242:77:14"},"nativeSrc":"4242:79:14","nodeType":"YulFunctionCall","src":"4242:79:14"},"nativeSrc":"4242:79:14","nodeType":"YulExpressionStatement","src":"4242:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nativeSrc":"4221:3:14","nodeType":"YulIdentifier","src":"4221:3:14"},{"name":"offset","nativeSrc":"4226:6:14","nodeType":"YulIdentifier","src":"4226:6:14"}],"functionName":{"name":"sub","nativeSrc":"4217:3:14","nodeType":"YulIdentifier","src":"4217:3:14"},"nativeSrc":"4217:16:14","nodeType":"YulFunctionCall","src":"4217:16:14"},{"kind":"number","nativeSrc":"4235:3:14","nodeType":"YulLiteral","src":"4235:3:14","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"4213:3:14","nodeType":"YulIdentifier","src":"4213:3:14"},"nativeSrc":"4213:26:14","nodeType":"YulFunctionCall","src":"4213:26:14"},"nativeSrc":"4210:113:14","nodeType":"YulIf","src":"4210:113:14"},{"nativeSrc":"4332:15:14","nodeType":"YulAssignment","src":"4332:15:14","value":{"name":"offset","nativeSrc":"4341:6:14","nodeType":"YulIdentifier","src":"4341:6:14"},"variableNames":[{"name":"value","nativeSrc":"4332:5:14","nodeType":"YulIdentifier","src":"4332:5:14"}]}]},"name":"abi_decode_t_struct$_SwapMultiHop_$5261_calldata_ptr","nativeSrc":"4116:237:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4178:6:14","nodeType":"YulTypedName","src":"4178:6:14","type":""},{"name":"end","nativeSrc":"4186:3:14","nodeType":"YulTypedName","src":"4186:3:14","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4194:5:14","nodeType":"YulTypedName","src":"4194:5:14","type":""}],"src":"4116:237:14"},{"body":{"nativeSrc":"4457:455:14","nodeType":"YulBlock","src":"4457:455:14","statements":[{"body":{"nativeSrc":"4503:83:14","nodeType":"YulBlock","src":"4503:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4505:77:14","nodeType":"YulIdentifier","src":"4505:77:14"},"nativeSrc":"4505:79:14","nodeType":"YulFunctionCall","src":"4505:79:14"},"nativeSrc":"4505:79:14","nodeType":"YulExpressionStatement","src":"4505:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4478:7:14","nodeType":"YulIdentifier","src":"4478:7:14"},{"name":"headStart","nativeSrc":"4487:9:14","nodeType":"YulIdentifier","src":"4487:9:14"}],"functionName":{"name":"sub","nativeSrc":"4474:3:14","nodeType":"YulIdentifier","src":"4474:3:14"},"nativeSrc":"4474:23:14","nodeType":"YulFunctionCall","src":"4474:23:14"},{"kind":"number","nativeSrc":"4499:2:14","nodeType":"YulLiteral","src":"4499:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4470:3:14","nodeType":"YulIdentifier","src":"4470:3:14"},"nativeSrc":"4470:32:14","nodeType":"YulFunctionCall","src":"4470:32:14"},"nativeSrc":"4467:119:14","nodeType":"YulIf","src":"4467:119:14"},{"nativeSrc":"4596:309:14","nodeType":"YulBlock","src":"4596:309:14","statements":[{"nativeSrc":"4611:45:14","nodeType":"YulVariableDeclaration","src":"4611:45:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4642:9:14","nodeType":"YulIdentifier","src":"4642:9:14"},{"kind":"number","nativeSrc":"4653:1:14","nodeType":"YulLiteral","src":"4653:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4638:3:14","nodeType":"YulIdentifier","src":"4638:3:14"},"nativeSrc":"4638:17:14","nodeType":"YulFunctionCall","src":"4638:17:14"}],"functionName":{"name":"calldataload","nativeSrc":"4625:12:14","nodeType":"YulIdentifier","src":"4625:12:14"},"nativeSrc":"4625:31:14","nodeType":"YulFunctionCall","src":"4625:31:14"},"variables":[{"name":"offset","nativeSrc":"4615:6:14","nodeType":"YulTypedName","src":"4615:6:14","type":""}]},{"body":{"nativeSrc":"4703:83:14","nodeType":"YulBlock","src":"4703:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"4705:77:14","nodeType":"YulIdentifier","src":"4705:77:14"},"nativeSrc":"4705:79:14","nodeType":"YulFunctionCall","src":"4705:79:14"},"nativeSrc":"4705:79:14","nodeType":"YulExpressionStatement","src":"4705:79:14"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"4675:6:14","nodeType":"YulIdentifier","src":"4675:6:14"},{"kind":"number","nativeSrc":"4683:18:14","nodeType":"YulLiteral","src":"4683:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4672:2:14","nodeType":"YulIdentifier","src":"4672:2:14"},"nativeSrc":"4672:30:14","nodeType":"YulFunctionCall","src":"4672:30:14"},"nativeSrc":"4669:117:14","nodeType":"YulIf","src":"4669:117:14"},{"nativeSrc":"4800:95:14","nodeType":"YulAssignment","src":"4800:95:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4867:9:14","nodeType":"YulIdentifier","src":"4867:9:14"},{"name":"offset","nativeSrc":"4878:6:14","nodeType":"YulIdentifier","src":"4878:6:14"}],"functionName":{"name":"add","nativeSrc":"4863:3:14","nodeType":"YulIdentifier","src":"4863:3:14"},"nativeSrc":"4863:22:14","nodeType":"YulFunctionCall","src":"4863:22:14"},{"name":"dataEnd","nativeSrc":"4887:7:14","nodeType":"YulIdentifier","src":"4887:7:14"}],"functionName":{"name":"abi_decode_t_struct$_SwapMultiHop_$5261_calldata_ptr","nativeSrc":"4810:52:14","nodeType":"YulIdentifier","src":"4810:52:14"},"nativeSrc":"4810:85:14","nodeType":"YulFunctionCall","src":"4810:85:14"},"variableNames":[{"name":"value0","nativeSrc":"4800:6:14","nodeType":"YulIdentifier","src":"4800:6:14"}]}]}]},"name":"abi_decode_tuple_t_struct$_SwapMultiHop_$5261_calldata_ptr","nativeSrc":"4359:553:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4427:9:14","nodeType":"YulTypedName","src":"4427:9:14","type":""},{"name":"dataEnd","nativeSrc":"4438:7:14","nodeType":"YulTypedName","src":"4438:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4450:6:14","nodeType":"YulTypedName","src":"4450:6:14","type":""}],"src":"4359:553:14"},{"body":{"nativeSrc":"4946:152:14","nodeType":"YulBlock","src":"4946:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4963:1:14","nodeType":"YulLiteral","src":"4963:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"4966:77:14","nodeType":"YulLiteral","src":"4966:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"4956:6:14","nodeType":"YulIdentifier","src":"4956:6:14"},"nativeSrc":"4956:88:14","nodeType":"YulFunctionCall","src":"4956:88:14"},"nativeSrc":"4956:88:14","nodeType":"YulExpressionStatement","src":"4956:88:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5060:1:14","nodeType":"YulLiteral","src":"5060:1:14","type":"","value":"4"},{"kind":"number","nativeSrc":"5063:4:14","nodeType":"YulLiteral","src":"5063:4:14","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"5053:6:14","nodeType":"YulIdentifier","src":"5053:6:14"},"nativeSrc":"5053:15:14","nodeType":"YulFunctionCall","src":"5053:15:14"},"nativeSrc":"5053:15:14","nodeType":"YulExpressionStatement","src":"5053:15:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5084:1:14","nodeType":"YulLiteral","src":"5084:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"5087:4:14","nodeType":"YulLiteral","src":"5087:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5077:6:14","nodeType":"YulIdentifier","src":"5077:6:14"},"nativeSrc":"5077:15:14","nodeType":"YulFunctionCall","src":"5077:15:14"},"nativeSrc":"5077:15:14","nodeType":"YulExpressionStatement","src":"5077:15:14"}]},"name":"panic_error_0x32","nativeSrc":"4918:180:14","nodeType":"YulFunctionDefinition","src":"4918:180:14"},{"body":{"nativeSrc":"5193:28:14","nodeType":"YulBlock","src":"5193:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5210:1:14","nodeType":"YulLiteral","src":"5210:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"5213:1:14","nodeType":"YulLiteral","src":"5213:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5203:6:14","nodeType":"YulIdentifier","src":"5203:6:14"},"nativeSrc":"5203:12:14","nodeType":"YulFunctionCall","src":"5203:12:14"},"nativeSrc":"5203:12:14","nodeType":"YulExpressionStatement","src":"5203:12:14"}]},"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nativeSrc":"5104:117:14","nodeType":"YulFunctionDefinition","src":"5104:117:14"},{"body":{"nativeSrc":"5316:28:14","nodeType":"YulBlock","src":"5316:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5333:1:14","nodeType":"YulLiteral","src":"5333:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"5336:1:14","nodeType":"YulLiteral","src":"5336:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5326:6:14","nodeType":"YulIdentifier","src":"5326:6:14"},"nativeSrc":"5326:12:14","nodeType":"YulFunctionCall","src":"5326:12:14"},"nativeSrc":"5326:12:14","nodeType":"YulExpressionStatement","src":"5326:12:14"}]},"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nativeSrc":"5227:117:14","nodeType":"YulFunctionDefinition","src":"5227:117:14"},{"body":{"nativeSrc":"5439:28:14","nodeType":"YulBlock","src":"5439:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5456:1:14","nodeType":"YulLiteral","src":"5456:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"5459:1:14","nodeType":"YulLiteral","src":"5459:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5449:6:14","nodeType":"YulIdentifier","src":"5449:6:14"},"nativeSrc":"5449:12:14","nodeType":"YulFunctionCall","src":"5449:12:14"},"nativeSrc":"5449:12:14","nodeType":"YulExpressionStatement","src":"5449:12:14"}]},"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nativeSrc":"5350:117:14","nodeType":"YulFunctionDefinition","src":"5350:117:14"},{"body":{"nativeSrc":"5576:295:14","nodeType":"YulBlock","src":"5576:295:14","statements":[{"nativeSrc":"5586:51:14","nodeType":"YulVariableDeclaration","src":"5586:51:14","value":{"arguments":[{"name":"ptr_to_tail","nativeSrc":"5625:11:14","nodeType":"YulIdentifier","src":"5625:11:14"}],"functionName":{"name":"calldataload","nativeSrc":"5612:12:14","nodeType":"YulIdentifier","src":"5612:12:14"},"nativeSrc":"5612:25:14","nodeType":"YulFunctionCall","src":"5612:25:14"},"variables":[{"name":"rel_offset_of_tail","nativeSrc":"5590:18:14","nodeType":"YulTypedName","src":"5590:18:14","type":""}]},{"body":{"nativeSrc":"5731:83:14","nodeType":"YulBlock","src":"5731:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nativeSrc":"5733:77:14","nodeType":"YulIdentifier","src":"5733:77:14"},"nativeSrc":"5733:79:14","nodeType":"YulFunctionCall","src":"5733:79:14"},"nativeSrc":"5733:79:14","nodeType":"YulExpressionStatement","src":"5733:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nativeSrc":"5660:18:14","nodeType":"YulIdentifier","src":"5660:18:14"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"5688:12:14","nodeType":"YulIdentifier","src":"5688:12:14"},"nativeSrc":"5688:14:14","nodeType":"YulFunctionCall","src":"5688:14:14"},{"name":"base_ref","nativeSrc":"5704:8:14","nodeType":"YulIdentifier","src":"5704:8:14"}],"functionName":{"name":"sub","nativeSrc":"5684:3:14","nodeType":"YulIdentifier","src":"5684:3:14"},"nativeSrc":"5684:29:14","nodeType":"YulFunctionCall","src":"5684:29:14"},{"arguments":[{"kind":"number","nativeSrc":"5719:4:14","nodeType":"YulLiteral","src":"5719:4:14","type":"","value":"0xa0"},{"kind":"number","nativeSrc":"5725:1:14","nodeType":"YulLiteral","src":"5725:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"5715:3:14","nodeType":"YulIdentifier","src":"5715:3:14"},"nativeSrc":"5715:12:14","nodeType":"YulFunctionCall","src":"5715:12:14"}],"functionName":{"name":"sub","nativeSrc":"5680:3:14","nodeType":"YulIdentifier","src":"5680:3:14"},"nativeSrc":"5680:48:14","nodeType":"YulFunctionCall","src":"5680:48:14"}],"functionName":{"name":"slt","nativeSrc":"5656:3:14","nodeType":"YulIdentifier","src":"5656:3:14"},"nativeSrc":"5656:73:14","nodeType":"YulFunctionCall","src":"5656:73:14"}],"functionName":{"name":"iszero","nativeSrc":"5649:6:14","nodeType":"YulIdentifier","src":"5649:6:14"},"nativeSrc":"5649:81:14","nodeType":"YulFunctionCall","src":"5649:81:14"},"nativeSrc":"5646:168:14","nodeType":"YulIf","src":"5646:168:14"},{"nativeSrc":"5823:41:14","nodeType":"YulAssignment","src":"5823:41:14","value":{"arguments":[{"name":"base_ref","nativeSrc":"5835:8:14","nodeType":"YulIdentifier","src":"5835:8:14"},{"name":"rel_offset_of_tail","nativeSrc":"5845:18:14","nodeType":"YulIdentifier","src":"5845:18:14"}],"functionName":{"name":"add","nativeSrc":"5831:3:14","nodeType":"YulIdentifier","src":"5831:3:14"},"nativeSrc":"5831:33:14","nodeType":"YulFunctionCall","src":"5831:33:14"},"variableNames":[{"name":"addr","nativeSrc":"5823:4:14","nodeType":"YulIdentifier","src":"5823:4:14"}]}]},"name":"access_calldata_tail_t_struct$_SwapMultiHop_$5261_calldata_ptr","nativeSrc":"5473:398:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nativeSrc":"5545:8:14","nodeType":"YulTypedName","src":"5545:8:14","type":""},{"name":"ptr_to_tail","nativeSrc":"5555:11:14","nodeType":"YulTypedName","src":"5555:11:14","type":""}],"returnVariables":[{"name":"addr","nativeSrc":"5571:4:14","nodeType":"YulTypedName","src":"5571:4:14","type":""}],"src":"5473:398:14"},{"body":{"nativeSrc":"5905:152:14","nodeType":"YulBlock","src":"5905:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5922:1:14","nodeType":"YulLiteral","src":"5922:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"5925:77:14","nodeType":"YulLiteral","src":"5925:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5915:6:14","nodeType":"YulIdentifier","src":"5915:6:14"},"nativeSrc":"5915:88:14","nodeType":"YulFunctionCall","src":"5915:88:14"},"nativeSrc":"5915:88:14","nodeType":"YulExpressionStatement","src":"5915:88:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6019:1:14","nodeType":"YulLiteral","src":"6019:1:14","type":"","value":"4"},{"kind":"number","nativeSrc":"6022:4:14","nodeType":"YulLiteral","src":"6022:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"6012:6:14","nodeType":"YulIdentifier","src":"6012:6:14"},"nativeSrc":"6012:15:14","nodeType":"YulFunctionCall","src":"6012:15:14"},"nativeSrc":"6012:15:14","nodeType":"YulExpressionStatement","src":"6012:15:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6043:1:14","nodeType":"YulLiteral","src":"6043:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"6046:4:14","nodeType":"YulLiteral","src":"6046:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6036:6:14","nodeType":"YulIdentifier","src":"6036:6:14"},"nativeSrc":"6036:15:14","nodeType":"YulFunctionCall","src":"6036:15:14"},"nativeSrc":"6036:15:14","nodeType":"YulExpressionStatement","src":"6036:15:14"}]},"name":"panic_error_0x11","nativeSrc":"5877:180:14","nodeType":"YulFunctionDefinition","src":"5877:180:14"},{"body":{"nativeSrc":"6107:147:14","nodeType":"YulBlock","src":"6107:147:14","statements":[{"nativeSrc":"6117:25:14","nodeType":"YulAssignment","src":"6117:25:14","value":{"arguments":[{"name":"x","nativeSrc":"6140:1:14","nodeType":"YulIdentifier","src":"6140:1:14"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6122:17:14","nodeType":"YulIdentifier","src":"6122:17:14"},"nativeSrc":"6122:20:14","nodeType":"YulFunctionCall","src":"6122:20:14"},"variableNames":[{"name":"x","nativeSrc":"6117:1:14","nodeType":"YulIdentifier","src":"6117:1:14"}]},{"nativeSrc":"6151:25:14","nodeType":"YulAssignment","src":"6151:25:14","value":{"arguments":[{"name":"y","nativeSrc":"6174:1:14","nodeType":"YulIdentifier","src":"6174:1:14"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6156:17:14","nodeType":"YulIdentifier","src":"6156:17:14"},"nativeSrc":"6156:20:14","nodeType":"YulFunctionCall","src":"6156:20:14"},"variableNames":[{"name":"y","nativeSrc":"6151:1:14","nodeType":"YulIdentifier","src":"6151:1:14"}]},{"nativeSrc":"6185:16:14","nodeType":"YulAssignment","src":"6185:16:14","value":{"arguments":[{"name":"x","nativeSrc":"6196:1:14","nodeType":"YulIdentifier","src":"6196:1:14"},{"name":"y","nativeSrc":"6199:1:14","nodeType":"YulIdentifier","src":"6199:1:14"}],"functionName":{"name":"add","nativeSrc":"6192:3:14","nodeType":"YulIdentifier","src":"6192:3:14"},"nativeSrc":"6192:9:14","nodeType":"YulFunctionCall","src":"6192:9:14"},"variableNames":[{"name":"sum","nativeSrc":"6185:3:14","nodeType":"YulIdentifier","src":"6185:3:14"}]},{"body":{"nativeSrc":"6225:22:14","nodeType":"YulBlock","src":"6225:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6227:16:14","nodeType":"YulIdentifier","src":"6227:16:14"},"nativeSrc":"6227:18:14","nodeType":"YulFunctionCall","src":"6227:18:14"},"nativeSrc":"6227:18:14","nodeType":"YulExpressionStatement","src":"6227:18:14"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"6217:1:14","nodeType":"YulIdentifier","src":"6217:1:14"},{"name":"sum","nativeSrc":"6220:3:14","nodeType":"YulIdentifier","src":"6220:3:14"}],"functionName":{"name":"gt","nativeSrc":"6214:2:14","nodeType":"YulIdentifier","src":"6214:2:14"},"nativeSrc":"6214:10:14","nodeType":"YulFunctionCall","src":"6214:10:14"},"nativeSrc":"6211:36:14","nodeType":"YulIf","src":"6211:36:14"}]},"name":"checked_add_t_uint256","nativeSrc":"6063:191:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6094:1:14","nodeType":"YulTypedName","src":"6094:1:14","type":""},{"name":"y","nativeSrc":"6097:1:14","nodeType":"YulTypedName","src":"6097:1:14","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"6103:3:14","nodeType":"YulTypedName","src":"6103:3:14","type":""}],"src":"6063:191:14"},{"body":{"nativeSrc":"6356:73:14","nodeType":"YulBlock","src":"6356:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6373:3:14","nodeType":"YulIdentifier","src":"6373:3:14"},{"name":"length","nativeSrc":"6378:6:14","nodeType":"YulIdentifier","src":"6378:6:14"}],"functionName":{"name":"mstore","nativeSrc":"6366:6:14","nodeType":"YulIdentifier","src":"6366:6:14"},"nativeSrc":"6366:19:14","nodeType":"YulFunctionCall","src":"6366:19:14"},"nativeSrc":"6366:19:14","nodeType":"YulExpressionStatement","src":"6366:19:14"},{"nativeSrc":"6394:29:14","nodeType":"YulAssignment","src":"6394:29:14","value":{"arguments":[{"name":"pos","nativeSrc":"6413:3:14","nodeType":"YulIdentifier","src":"6413:3:14"},{"kind":"number","nativeSrc":"6418:4:14","nodeType":"YulLiteral","src":"6418:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6409:3:14","nodeType":"YulIdentifier","src":"6409:3:14"},"nativeSrc":"6409:14:14","nodeType":"YulFunctionCall","src":"6409:14:14"},"variableNames":[{"name":"updated_pos","nativeSrc":"6394:11:14","nodeType":"YulIdentifier","src":"6394:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"6260:169:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6328:3:14","nodeType":"YulTypedName","src":"6328:3:14","type":""},{"name":"length","nativeSrc":"6333:6:14","nodeType":"YulTypedName","src":"6333:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"6344:11:14","nodeType":"YulTypedName","src":"6344:11:14","type":""}],"src":"6260:169:14"},{"body":{"nativeSrc":"6541:71:14","nodeType":"YulBlock","src":"6541:71:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"6563:6:14","nodeType":"YulIdentifier","src":"6563:6:14"},{"kind":"number","nativeSrc":"6571:1:14","nodeType":"YulLiteral","src":"6571:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6559:3:14","nodeType":"YulIdentifier","src":"6559:3:14"},"nativeSrc":"6559:14:14","nodeType":"YulFunctionCall","src":"6559:14:14"},{"hexValue":"54686520616d6f756e7420666f722073776170206973207a65726f","kind":"string","nativeSrc":"6575:29:14","nodeType":"YulLiteral","src":"6575:29:14","type":"","value":"The amount for swap is zero"}],"functionName":{"name":"mstore","nativeSrc":"6552:6:14","nodeType":"YulIdentifier","src":"6552:6:14"},"nativeSrc":"6552:53:14","nodeType":"YulFunctionCall","src":"6552:53:14"},"nativeSrc":"6552:53:14","nodeType":"YulExpressionStatement","src":"6552:53:14"}]},"name":"store_literal_in_memory_46f23f0df13d0e943c450e2a9aba8f479be58f4951eb3d14222cd3501b7ab991","nativeSrc":"6435:177:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"6533:6:14","nodeType":"YulTypedName","src":"6533:6:14","type":""}],"src":"6435:177:14"},{"body":{"nativeSrc":"6764:220:14","nodeType":"YulBlock","src":"6764:220:14","statements":[{"nativeSrc":"6774:74:14","nodeType":"YulAssignment","src":"6774:74:14","value":{"arguments":[{"name":"pos","nativeSrc":"6840:3:14","nodeType":"YulIdentifier","src":"6840:3:14"},{"kind":"number","nativeSrc":"6845:2:14","nodeType":"YulLiteral","src":"6845:2:14","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"6781:58:14","nodeType":"YulIdentifier","src":"6781:58:14"},"nativeSrc":"6781:67:14","nodeType":"YulFunctionCall","src":"6781:67:14"},"variableNames":[{"name":"pos","nativeSrc":"6774:3:14","nodeType":"YulIdentifier","src":"6774:3:14"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"6946:3:14","nodeType":"YulIdentifier","src":"6946:3:14"}],"functionName":{"name":"store_literal_in_memory_46f23f0df13d0e943c450e2a9aba8f479be58f4951eb3d14222cd3501b7ab991","nativeSrc":"6857:88:14","nodeType":"YulIdentifier","src":"6857:88:14"},"nativeSrc":"6857:93:14","nodeType":"YulFunctionCall","src":"6857:93:14"},"nativeSrc":"6857:93:14","nodeType":"YulExpressionStatement","src":"6857:93:14"},{"nativeSrc":"6959:19:14","nodeType":"YulAssignment","src":"6959:19:14","value":{"arguments":[{"name":"pos","nativeSrc":"6970:3:14","nodeType":"YulIdentifier","src":"6970:3:14"},{"kind":"number","nativeSrc":"6975:2:14","nodeType":"YulLiteral","src":"6975:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6966:3:14","nodeType":"YulIdentifier","src":"6966:3:14"},"nativeSrc":"6966:12:14","nodeType":"YulFunctionCall","src":"6966:12:14"},"variableNames":[{"name":"end","nativeSrc":"6959:3:14","nodeType":"YulIdentifier","src":"6959:3:14"}]}]},"name":"abi_encode_t_stringliteral_46f23f0df13d0e943c450e2a9aba8f479be58f4951eb3d14222cd3501b7ab991_to_t_string_memory_ptr_fromStack","nativeSrc":"6618:366:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6752:3:14","nodeType":"YulTypedName","src":"6752:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"6760:3:14","nodeType":"YulTypedName","src":"6760:3:14","type":""}],"src":"6618:366:14"},{"body":{"nativeSrc":"7161:248:14","nodeType":"YulBlock","src":"7161:248:14","statements":[{"nativeSrc":"7171:26:14","nodeType":"YulAssignment","src":"7171:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"7183:9:14","nodeType":"YulIdentifier","src":"7183:9:14"},{"kind":"number","nativeSrc":"7194:2:14","nodeType":"YulLiteral","src":"7194:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7179:3:14","nodeType":"YulIdentifier","src":"7179:3:14"},"nativeSrc":"7179:18:14","nodeType":"YulFunctionCall","src":"7179:18:14"},"variableNames":[{"name":"tail","nativeSrc":"7171:4:14","nodeType":"YulIdentifier","src":"7171:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7218:9:14","nodeType":"YulIdentifier","src":"7218:9:14"},{"kind":"number","nativeSrc":"7229:1:14","nodeType":"YulLiteral","src":"7229:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7214:3:14","nodeType":"YulIdentifier","src":"7214:3:14"},"nativeSrc":"7214:17:14","nodeType":"YulFunctionCall","src":"7214:17:14"},{"arguments":[{"name":"tail","nativeSrc":"7237:4:14","nodeType":"YulIdentifier","src":"7237:4:14"},{"name":"headStart","nativeSrc":"7243:9:14","nodeType":"YulIdentifier","src":"7243:9:14"}],"functionName":{"name":"sub","nativeSrc":"7233:3:14","nodeType":"YulIdentifier","src":"7233:3:14"},"nativeSrc":"7233:20:14","nodeType":"YulFunctionCall","src":"7233:20:14"}],"functionName":{"name":"mstore","nativeSrc":"7207:6:14","nodeType":"YulIdentifier","src":"7207:6:14"},"nativeSrc":"7207:47:14","nodeType":"YulFunctionCall","src":"7207:47:14"},"nativeSrc":"7207:47:14","nodeType":"YulExpressionStatement","src":"7207:47:14"},{"nativeSrc":"7263:139:14","nodeType":"YulAssignment","src":"7263:139:14","value":{"arguments":[{"name":"tail","nativeSrc":"7397:4:14","nodeType":"YulIdentifier","src":"7397:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_46f23f0df13d0e943c450e2a9aba8f479be58f4951eb3d14222cd3501b7ab991_to_t_string_memory_ptr_fromStack","nativeSrc":"7271:124:14","nodeType":"YulIdentifier","src":"7271:124:14"},"nativeSrc":"7271:131:14","nodeType":"YulFunctionCall","src":"7271:131:14"},"variableNames":[{"name":"tail","nativeSrc":"7263:4:14","nodeType":"YulIdentifier","src":"7263:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_46f23f0df13d0e943c450e2a9aba8f479be58f4951eb3d14222cd3501b7ab991__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6990:419:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7141:9:14","nodeType":"YulTypedName","src":"7141:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7156:4:14","nodeType":"YulTypedName","src":"7156:4:14","type":""}],"src":"6990:419:14"},{"body":{"nativeSrc":"7521:634:14","nodeType":"YulBlock","src":"7521:634:14","statements":[{"nativeSrc":"7531:51:14","nodeType":"YulVariableDeclaration","src":"7531:51:14","value":{"arguments":[{"name":"ptr_to_tail","nativeSrc":"7570:11:14","nodeType":"YulIdentifier","src":"7570:11:14"}],"functionName":{"name":"calldataload","nativeSrc":"7557:12:14","nodeType":"YulIdentifier","src":"7557:12:14"},"nativeSrc":"7557:25:14","nodeType":"YulFunctionCall","src":"7557:25:14"},"variables":[{"name":"rel_offset_of_tail","nativeSrc":"7535:18:14","nodeType":"YulTypedName","src":"7535:18:14","type":""}]},{"body":{"nativeSrc":"7676:83:14","nodeType":"YulBlock","src":"7676:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nativeSrc":"7678:77:14","nodeType":"YulIdentifier","src":"7678:77:14"},"nativeSrc":"7678:79:14","nodeType":"YulFunctionCall","src":"7678:79:14"},"nativeSrc":"7678:79:14","nodeType":"YulExpressionStatement","src":"7678:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nativeSrc":"7605:18:14","nodeType":"YulIdentifier","src":"7605:18:14"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"7633:12:14","nodeType":"YulIdentifier","src":"7633:12:14"},"nativeSrc":"7633:14:14","nodeType":"YulFunctionCall","src":"7633:14:14"},{"name":"base_ref","nativeSrc":"7649:8:14","nodeType":"YulIdentifier","src":"7649:8:14"}],"functionName":{"name":"sub","nativeSrc":"7629:3:14","nodeType":"YulIdentifier","src":"7629:3:14"},"nativeSrc":"7629:29:14","nodeType":"YulFunctionCall","src":"7629:29:14"},{"arguments":[{"kind":"number","nativeSrc":"7664:4:14","nodeType":"YulLiteral","src":"7664:4:14","type":"","value":"0x20"},{"kind":"number","nativeSrc":"7670:1:14","nodeType":"YulLiteral","src":"7670:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"7660:3:14","nodeType":"YulIdentifier","src":"7660:3:14"},"nativeSrc":"7660:12:14","nodeType":"YulFunctionCall","src":"7660:12:14"}],"functionName":{"name":"sub","nativeSrc":"7625:3:14","nodeType":"YulIdentifier","src":"7625:3:14"},"nativeSrc":"7625:48:14","nodeType":"YulFunctionCall","src":"7625:48:14"}],"functionName":{"name":"slt","nativeSrc":"7601:3:14","nodeType":"YulIdentifier","src":"7601:3:14"},"nativeSrc":"7601:73:14","nodeType":"YulFunctionCall","src":"7601:73:14"}],"functionName":{"name":"iszero","nativeSrc":"7594:6:14","nodeType":"YulIdentifier","src":"7594:6:14"},"nativeSrc":"7594:81:14","nodeType":"YulFunctionCall","src":"7594:81:14"},"nativeSrc":"7591:168:14","nodeType":"YulIf","src":"7591:168:14"},{"nativeSrc":"7768:41:14","nodeType":"YulAssignment","src":"7768:41:14","value":{"arguments":[{"name":"base_ref","nativeSrc":"7780:8:14","nodeType":"YulIdentifier","src":"7780:8:14"},{"name":"rel_offset_of_tail","nativeSrc":"7790:18:14","nodeType":"YulIdentifier","src":"7790:18:14"}],"functionName":{"name":"add","nativeSrc":"7776:3:14","nodeType":"YulIdentifier","src":"7776:3:14"},"nativeSrc":"7776:33:14","nodeType":"YulFunctionCall","src":"7776:33:14"},"variableNames":[{"name":"addr","nativeSrc":"7768:4:14","nodeType":"YulIdentifier","src":"7768:4:14"}]},{"nativeSrc":"7819:28:14","nodeType":"YulAssignment","src":"7819:28:14","value":{"arguments":[{"name":"addr","nativeSrc":"7842:4:14","nodeType":"YulIdentifier","src":"7842:4:14"}],"functionName":{"name":"calldataload","nativeSrc":"7829:12:14","nodeType":"YulIdentifier","src":"7829:12:14"},"nativeSrc":"7829:18:14","nodeType":"YulFunctionCall","src":"7829:18:14"},"variableNames":[{"name":"length","nativeSrc":"7819:6:14","nodeType":"YulIdentifier","src":"7819:6:14"}]},{"body":{"nativeSrc":"7890:83:14","nodeType":"YulBlock","src":"7890:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nativeSrc":"7892:77:14","nodeType":"YulIdentifier","src":"7892:77:14"},"nativeSrc":"7892:79:14","nodeType":"YulFunctionCall","src":"7892:79:14"},"nativeSrc":"7892:79:14","nodeType":"YulExpressionStatement","src":"7892:79:14"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"7862:6:14","nodeType":"YulIdentifier","src":"7862:6:14"},{"kind":"number","nativeSrc":"7870:18:14","nodeType":"YulLiteral","src":"7870:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7859:2:14","nodeType":"YulIdentifier","src":"7859:2:14"},"nativeSrc":"7859:30:14","nodeType":"YulFunctionCall","src":"7859:30:14"},"nativeSrc":"7856:117:14","nodeType":"YulIf","src":"7856:117:14"},{"nativeSrc":"7982:21:14","nodeType":"YulAssignment","src":"7982:21:14","value":{"arguments":[{"name":"addr","nativeSrc":"7994:4:14","nodeType":"YulIdentifier","src":"7994:4:14"},{"kind":"number","nativeSrc":"8000:2:14","nodeType":"YulLiteral","src":"8000:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7990:3:14","nodeType":"YulIdentifier","src":"7990:3:14"},"nativeSrc":"7990:13:14","nodeType":"YulFunctionCall","src":"7990:13:14"},"variableNames":[{"name":"addr","nativeSrc":"7982:4:14","nodeType":"YulIdentifier","src":"7982:4:14"}]},{"body":{"nativeSrc":"8065:83:14","nodeType":"YulBlock","src":"8065:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nativeSrc":"8067:77:14","nodeType":"YulIdentifier","src":"8067:77:14"},"nativeSrc":"8067:79:14","nodeType":"YulFunctionCall","src":"8067:79:14"},"nativeSrc":"8067:79:14","nodeType":"YulExpressionStatement","src":"8067:79:14"}]},"condition":{"arguments":[{"name":"addr","nativeSrc":"8019:4:14","nodeType":"YulIdentifier","src":"8019:4:14"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"8029:12:14","nodeType":"YulIdentifier","src":"8029:12:14"},"nativeSrc":"8029:14:14","nodeType":"YulFunctionCall","src":"8029:14:14"},{"arguments":[{"name":"length","nativeSrc":"8049:6:14","nodeType":"YulIdentifier","src":"8049:6:14"},{"kind":"number","nativeSrc":"8057:4:14","nodeType":"YulLiteral","src":"8057:4:14","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"8045:3:14","nodeType":"YulIdentifier","src":"8045:3:14"},"nativeSrc":"8045:17:14","nodeType":"YulFunctionCall","src":"8045:17:14"}],"functionName":{"name":"sub","nativeSrc":"8025:3:14","nodeType":"YulIdentifier","src":"8025:3:14"},"nativeSrc":"8025:38:14","nodeType":"YulFunctionCall","src":"8025:38:14"}],"functionName":{"name":"sgt","nativeSrc":"8015:3:14","nodeType":"YulIdentifier","src":"8015:3:14"},"nativeSrc":"8015:49:14","nodeType":"YulFunctionCall","src":"8015:49:14"},"nativeSrc":"8012:136:14","nodeType":"YulIf","src":"8012:136:14"}]},"name":"access_calldata_tail_t_array$_t_address_$dyn_calldata_ptr","nativeSrc":"7415:740:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nativeSrc":"7482:8:14","nodeType":"YulTypedName","src":"7482:8:14","type":""},{"name":"ptr_to_tail","nativeSrc":"7492:11:14","nodeType":"YulTypedName","src":"7492:11:14","type":""}],"returnVariables":[{"name":"addr","nativeSrc":"7508:4:14","nodeType":"YulTypedName","src":"7508:4:14","type":""},{"name":"length","nativeSrc":"7514:6:14","nodeType":"YulTypedName","src":"7514:6:14","type":""}],"src":"7415:740:14"},{"body":{"nativeSrc":"8204:79:14","nodeType":"YulBlock","src":"8204:79:14","statements":[{"body":{"nativeSrc":"8261:16:14","nodeType":"YulBlock","src":"8261:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8270:1:14","nodeType":"YulLiteral","src":"8270:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"8273:1:14","nodeType":"YulLiteral","src":"8273:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8263:6:14","nodeType":"YulIdentifier","src":"8263:6:14"},"nativeSrc":"8263:12:14","nodeType":"YulFunctionCall","src":"8263:12:14"},"nativeSrc":"8263:12:14","nodeType":"YulExpressionStatement","src":"8263:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8227:5:14","nodeType":"YulIdentifier","src":"8227:5:14"},{"arguments":[{"name":"value","nativeSrc":"8252:5:14","nodeType":"YulIdentifier","src":"8252:5:14"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"8234:17:14","nodeType":"YulIdentifier","src":"8234:17:14"},"nativeSrc":"8234:24:14","nodeType":"YulFunctionCall","src":"8234:24:14"}],"functionName":{"name":"eq","nativeSrc":"8224:2:14","nodeType":"YulIdentifier","src":"8224:2:14"},"nativeSrc":"8224:35:14","nodeType":"YulFunctionCall","src":"8224:35:14"}],"functionName":{"name":"iszero","nativeSrc":"8217:6:14","nodeType":"YulIdentifier","src":"8217:6:14"},"nativeSrc":"8217:43:14","nodeType":"YulFunctionCall","src":"8217:43:14"},"nativeSrc":"8214:63:14","nodeType":"YulIf","src":"8214:63:14"}]},"name":"validator_revert_t_address","nativeSrc":"8161:122:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8197:5:14","nodeType":"YulTypedName","src":"8197:5:14","type":""}],"src":"8161:122:14"},{"body":{"nativeSrc":"8341:87:14","nodeType":"YulBlock","src":"8341:87:14","statements":[{"nativeSrc":"8351:29:14","nodeType":"YulAssignment","src":"8351:29:14","value":{"arguments":[{"name":"offset","nativeSrc":"8373:6:14","nodeType":"YulIdentifier","src":"8373:6:14"}],"functionName":{"name":"calldataload","nativeSrc":"8360:12:14","nodeType":"YulIdentifier","src":"8360:12:14"},"nativeSrc":"8360:20:14","nodeType":"YulFunctionCall","src":"8360:20:14"},"variableNames":[{"name":"value","nativeSrc":"8351:5:14","nodeType":"YulIdentifier","src":"8351:5:14"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"8416:5:14","nodeType":"YulIdentifier","src":"8416:5:14"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"8389:26:14","nodeType":"YulIdentifier","src":"8389:26:14"},"nativeSrc":"8389:33:14","nodeType":"YulFunctionCall","src":"8389:33:14"},"nativeSrc":"8389:33:14","nodeType":"YulExpressionStatement","src":"8389:33:14"}]},"name":"abi_decode_t_address","nativeSrc":"8289:139:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"8319:6:14","nodeType":"YulTypedName","src":"8319:6:14","type":""},{"name":"end","nativeSrc":"8327:3:14","nodeType":"YulTypedName","src":"8327:3:14","type":""}],"returnVariables":[{"name":"value","nativeSrc":"8335:5:14","nodeType":"YulTypedName","src":"8335:5:14","type":""}],"src":"8289:139:14"},{"body":{"nativeSrc":"8500:263:14","nodeType":"YulBlock","src":"8500:263:14","statements":[{"body":{"nativeSrc":"8546:83:14","nodeType":"YulBlock","src":"8546:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8548:77:14","nodeType":"YulIdentifier","src":"8548:77:14"},"nativeSrc":"8548:79:14","nodeType":"YulFunctionCall","src":"8548:79:14"},"nativeSrc":"8548:79:14","nodeType":"YulExpressionStatement","src":"8548:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8521:7:14","nodeType":"YulIdentifier","src":"8521:7:14"},{"name":"headStart","nativeSrc":"8530:9:14","nodeType":"YulIdentifier","src":"8530:9:14"}],"functionName":{"name":"sub","nativeSrc":"8517:3:14","nodeType":"YulIdentifier","src":"8517:3:14"},"nativeSrc":"8517:23:14","nodeType":"YulFunctionCall","src":"8517:23:14"},{"kind":"number","nativeSrc":"8542:2:14","nodeType":"YulLiteral","src":"8542:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"8513:3:14","nodeType":"YulIdentifier","src":"8513:3:14"},"nativeSrc":"8513:32:14","nodeType":"YulFunctionCall","src":"8513:32:14"},"nativeSrc":"8510:119:14","nodeType":"YulIf","src":"8510:119:14"},{"nativeSrc":"8639:117:14","nodeType":"YulBlock","src":"8639:117:14","statements":[{"nativeSrc":"8654:15:14","nodeType":"YulVariableDeclaration","src":"8654:15:14","value":{"kind":"number","nativeSrc":"8668:1:14","nodeType":"YulLiteral","src":"8668:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8658:6:14","nodeType":"YulTypedName","src":"8658:6:14","type":""}]},{"nativeSrc":"8683:63:14","nodeType":"YulAssignment","src":"8683:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8718:9:14","nodeType":"YulIdentifier","src":"8718:9:14"},{"name":"offset","nativeSrc":"8729:6:14","nodeType":"YulIdentifier","src":"8729:6:14"}],"functionName":{"name":"add","nativeSrc":"8714:3:14","nodeType":"YulIdentifier","src":"8714:3:14"},"nativeSrc":"8714:22:14","nodeType":"YulFunctionCall","src":"8714:22:14"},{"name":"dataEnd","nativeSrc":"8738:7:14","nodeType":"YulIdentifier","src":"8738:7:14"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8693:20:14","nodeType":"YulIdentifier","src":"8693:20:14"},"nativeSrc":"8693:53:14","nodeType":"YulFunctionCall","src":"8693:53:14"},"variableNames":[{"name":"value0","nativeSrc":"8683:6:14","nodeType":"YulIdentifier","src":"8683:6:14"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"8434:329:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8470:9:14","nodeType":"YulTypedName","src":"8470:9:14","type":""},{"name":"dataEnd","nativeSrc":"8481:7:14","nodeType":"YulTypedName","src":"8481:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8493:6:14","nodeType":"YulTypedName","src":"8493:6:14","type":""}],"src":"8434:329:14"},{"body":{"nativeSrc":"8923:288:14","nodeType":"YulBlock","src":"8923:288:14","statements":[{"nativeSrc":"8933:26:14","nodeType":"YulAssignment","src":"8933:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"8945:9:14","nodeType":"YulIdentifier","src":"8945:9:14"},{"kind":"number","nativeSrc":"8956:2:14","nodeType":"YulLiteral","src":"8956:2:14","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8941:3:14","nodeType":"YulIdentifier","src":"8941:3:14"},"nativeSrc":"8941:18:14","nodeType":"YulFunctionCall","src":"8941:18:14"},"variableNames":[{"name":"tail","nativeSrc":"8933:4:14","nodeType":"YulIdentifier","src":"8933:4:14"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9013:6:14","nodeType":"YulIdentifier","src":"9013:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"9026:9:14","nodeType":"YulIdentifier","src":"9026:9:14"},{"kind":"number","nativeSrc":"9037:1:14","nodeType":"YulLiteral","src":"9037:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9022:3:14","nodeType":"YulIdentifier","src":"9022:3:14"},"nativeSrc":"9022:17:14","nodeType":"YulFunctionCall","src":"9022:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8969:43:14","nodeType":"YulIdentifier","src":"8969:43:14"},"nativeSrc":"8969:71:14","nodeType":"YulFunctionCall","src":"8969:71:14"},"nativeSrc":"8969:71:14","nodeType":"YulExpressionStatement","src":"8969:71:14"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"9094:6:14","nodeType":"YulIdentifier","src":"9094:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"9107:9:14","nodeType":"YulIdentifier","src":"9107:9:14"},{"kind":"number","nativeSrc":"9118:2:14","nodeType":"YulLiteral","src":"9118:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9103:3:14","nodeType":"YulIdentifier","src":"9103:3:14"},"nativeSrc":"9103:18:14","nodeType":"YulFunctionCall","src":"9103:18:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9050:43:14","nodeType":"YulIdentifier","src":"9050:43:14"},"nativeSrc":"9050:72:14","nodeType":"YulFunctionCall","src":"9050:72:14"},"nativeSrc":"9050:72:14","nodeType":"YulExpressionStatement","src":"9050:72:14"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"9176:6:14","nodeType":"YulIdentifier","src":"9176:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"9189:9:14","nodeType":"YulIdentifier","src":"9189:9:14"},{"kind":"number","nativeSrc":"9200:2:14","nodeType":"YulLiteral","src":"9200:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9185:3:14","nodeType":"YulIdentifier","src":"9185:3:14"},"nativeSrc":"9185:18:14","nodeType":"YulFunctionCall","src":"9185:18:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9132:43:14","nodeType":"YulIdentifier","src":"9132:43:14"},"nativeSrc":"9132:72:14","nodeType":"YulFunctionCall","src":"9132:72:14"},"nativeSrc":"9132:72:14","nodeType":"YulExpressionStatement","src":"9132:72:14"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"8769:442:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8879:9:14","nodeType":"YulTypedName","src":"8879:9:14","type":""},{"name":"value2","nativeSrc":"8891:6:14","nodeType":"YulTypedName","src":"8891:6:14","type":""},{"name":"value1","nativeSrc":"8899:6:14","nodeType":"YulTypedName","src":"8899:6:14","type":""},{"name":"value0","nativeSrc":"8907:6:14","nodeType":"YulTypedName","src":"8907:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8918:4:14","nodeType":"YulTypedName","src":"8918:4:14","type":""}],"src":"8769:442:14"},{"body":{"nativeSrc":"9259:48:14","nodeType":"YulBlock","src":"9259:48:14","statements":[{"nativeSrc":"9269:32:14","nodeType":"YulAssignment","src":"9269:32:14","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9294:5:14","nodeType":"YulIdentifier","src":"9294:5:14"}],"functionName":{"name":"iszero","nativeSrc":"9287:6:14","nodeType":"YulIdentifier","src":"9287:6:14"},"nativeSrc":"9287:13:14","nodeType":"YulFunctionCall","src":"9287:13:14"}],"functionName":{"name":"iszero","nativeSrc":"9280:6:14","nodeType":"YulIdentifier","src":"9280:6:14"},"nativeSrc":"9280:21:14","nodeType":"YulFunctionCall","src":"9280:21:14"},"variableNames":[{"name":"cleaned","nativeSrc":"9269:7:14","nodeType":"YulIdentifier","src":"9269:7:14"}]}]},"name":"cleanup_t_bool","nativeSrc":"9217:90:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9241:5:14","nodeType":"YulTypedName","src":"9241:5:14","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"9251:7:14","nodeType":"YulTypedName","src":"9251:7:14","type":""}],"src":"9217:90:14"},{"body":{"nativeSrc":"9353:76:14","nodeType":"YulBlock","src":"9353:76:14","statements":[{"body":{"nativeSrc":"9407:16:14","nodeType":"YulBlock","src":"9407:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9416:1:14","nodeType":"YulLiteral","src":"9416:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"9419:1:14","nodeType":"YulLiteral","src":"9419:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9409:6:14","nodeType":"YulIdentifier","src":"9409:6:14"},"nativeSrc":"9409:12:14","nodeType":"YulFunctionCall","src":"9409:12:14"},"nativeSrc":"9409:12:14","nodeType":"YulExpressionStatement","src":"9409:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9376:5:14","nodeType":"YulIdentifier","src":"9376:5:14"},{"arguments":[{"name":"value","nativeSrc":"9398:5:14","nodeType":"YulIdentifier","src":"9398:5:14"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"9383:14:14","nodeType":"YulIdentifier","src":"9383:14:14"},"nativeSrc":"9383:21:14","nodeType":"YulFunctionCall","src":"9383:21:14"}],"functionName":{"name":"eq","nativeSrc":"9373:2:14","nodeType":"YulIdentifier","src":"9373:2:14"},"nativeSrc":"9373:32:14","nodeType":"YulFunctionCall","src":"9373:32:14"}],"functionName":{"name":"iszero","nativeSrc":"9366:6:14","nodeType":"YulIdentifier","src":"9366:6:14"},"nativeSrc":"9366:40:14","nodeType":"YulFunctionCall","src":"9366:40:14"},"nativeSrc":"9363:60:14","nodeType":"YulIf","src":"9363:60:14"}]},"name":"validator_revert_t_bool","nativeSrc":"9313:116:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9346:5:14","nodeType":"YulTypedName","src":"9346:5:14","type":""}],"src":"9313:116:14"},{"body":{"nativeSrc":"9495:77:14","nodeType":"YulBlock","src":"9495:77:14","statements":[{"nativeSrc":"9505:22:14","nodeType":"YulAssignment","src":"9505:22:14","value":{"arguments":[{"name":"offset","nativeSrc":"9520:6:14","nodeType":"YulIdentifier","src":"9520:6:14"}],"functionName":{"name":"mload","nativeSrc":"9514:5:14","nodeType":"YulIdentifier","src":"9514:5:14"},"nativeSrc":"9514:13:14","nodeType":"YulFunctionCall","src":"9514:13:14"},"variableNames":[{"name":"value","nativeSrc":"9505:5:14","nodeType":"YulIdentifier","src":"9505:5:14"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"9560:5:14","nodeType":"YulIdentifier","src":"9560:5:14"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"9536:23:14","nodeType":"YulIdentifier","src":"9536:23:14"},"nativeSrc":"9536:30:14","nodeType":"YulFunctionCall","src":"9536:30:14"},"nativeSrc":"9536:30:14","nodeType":"YulExpressionStatement","src":"9536:30:14"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"9435:137:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"9473:6:14","nodeType":"YulTypedName","src":"9473:6:14","type":""},{"name":"end","nativeSrc":"9481:3:14","nodeType":"YulTypedName","src":"9481:3:14","type":""}],"returnVariables":[{"name":"value","nativeSrc":"9489:5:14","nodeType":"YulTypedName","src":"9489:5:14","type":""}],"src":"9435:137:14"},{"body":{"nativeSrc":"9652:271:14","nodeType":"YulBlock","src":"9652:271:14","statements":[{"body":{"nativeSrc":"9698:83:14","nodeType":"YulBlock","src":"9698:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"9700:77:14","nodeType":"YulIdentifier","src":"9700:77:14"},"nativeSrc":"9700:79:14","nodeType":"YulFunctionCall","src":"9700:79:14"},"nativeSrc":"9700:79:14","nodeType":"YulExpressionStatement","src":"9700:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9673:7:14","nodeType":"YulIdentifier","src":"9673:7:14"},{"name":"headStart","nativeSrc":"9682:9:14","nodeType":"YulIdentifier","src":"9682:9:14"}],"functionName":{"name":"sub","nativeSrc":"9669:3:14","nodeType":"YulIdentifier","src":"9669:3:14"},"nativeSrc":"9669:23:14","nodeType":"YulFunctionCall","src":"9669:23:14"},{"kind":"number","nativeSrc":"9694:2:14","nodeType":"YulLiteral","src":"9694:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"9665:3:14","nodeType":"YulIdentifier","src":"9665:3:14"},"nativeSrc":"9665:32:14","nodeType":"YulFunctionCall","src":"9665:32:14"},"nativeSrc":"9662:119:14","nodeType":"YulIf","src":"9662:119:14"},{"nativeSrc":"9791:125:14","nodeType":"YulBlock","src":"9791:125:14","statements":[{"nativeSrc":"9806:15:14","nodeType":"YulVariableDeclaration","src":"9806:15:14","value":{"kind":"number","nativeSrc":"9820:1:14","nodeType":"YulLiteral","src":"9820:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"9810:6:14","nodeType":"YulTypedName","src":"9810:6:14","type":""}]},{"nativeSrc":"9835:71:14","nodeType":"YulAssignment","src":"9835:71:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9878:9:14","nodeType":"YulIdentifier","src":"9878:9:14"},{"name":"offset","nativeSrc":"9889:6:14","nodeType":"YulIdentifier","src":"9889:6:14"}],"functionName":{"name":"add","nativeSrc":"9874:3:14","nodeType":"YulIdentifier","src":"9874:3:14"},"nativeSrc":"9874:22:14","nodeType":"YulFunctionCall","src":"9874:22:14"},{"name":"dataEnd","nativeSrc":"9898:7:14","nodeType":"YulIdentifier","src":"9898:7:14"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"9845:28:14","nodeType":"YulIdentifier","src":"9845:28:14"},"nativeSrc":"9845:61:14","nodeType":"YulFunctionCall","src":"9845:61:14"},"variableNames":[{"name":"value0","nativeSrc":"9835:6:14","nodeType":"YulIdentifier","src":"9835:6:14"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"9578:345:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9622:9:14","nodeType":"YulTypedName","src":"9622:9:14","type":""},{"name":"dataEnd","nativeSrc":"9633:7:14","nodeType":"YulTypedName","src":"9633:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9645:6:14","nodeType":"YulTypedName","src":"9645:6:14","type":""}],"src":"9578:345:14"},{"body":{"nativeSrc":"10033:634:14","nodeType":"YulBlock","src":"10033:634:14","statements":[{"nativeSrc":"10043:51:14","nodeType":"YulVariableDeclaration","src":"10043:51:14","value":{"arguments":[{"name":"ptr_to_tail","nativeSrc":"10082:11:14","nodeType":"YulIdentifier","src":"10082:11:14"}],"functionName":{"name":"calldataload","nativeSrc":"10069:12:14","nodeType":"YulIdentifier","src":"10069:12:14"},"nativeSrc":"10069:25:14","nodeType":"YulFunctionCall","src":"10069:25:14"},"variables":[{"name":"rel_offset_of_tail","nativeSrc":"10047:18:14","nodeType":"YulTypedName","src":"10047:18:14","type":""}]},{"body":{"nativeSrc":"10188:83:14","nodeType":"YulBlock","src":"10188:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nativeSrc":"10190:77:14","nodeType":"YulIdentifier","src":"10190:77:14"},"nativeSrc":"10190:79:14","nodeType":"YulFunctionCall","src":"10190:79:14"},"nativeSrc":"10190:79:14","nodeType":"YulExpressionStatement","src":"10190:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nativeSrc":"10117:18:14","nodeType":"YulIdentifier","src":"10117:18:14"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"10145:12:14","nodeType":"YulIdentifier","src":"10145:12:14"},"nativeSrc":"10145:14:14","nodeType":"YulFunctionCall","src":"10145:14:14"},{"name":"base_ref","nativeSrc":"10161:8:14","nodeType":"YulIdentifier","src":"10161:8:14"}],"functionName":{"name":"sub","nativeSrc":"10141:3:14","nodeType":"YulIdentifier","src":"10141:3:14"},"nativeSrc":"10141:29:14","nodeType":"YulFunctionCall","src":"10141:29:14"},{"arguments":[{"kind":"number","nativeSrc":"10176:4:14","nodeType":"YulLiteral","src":"10176:4:14","type":"","value":"0x20"},{"kind":"number","nativeSrc":"10182:1:14","nodeType":"YulLiteral","src":"10182:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"10172:3:14","nodeType":"YulIdentifier","src":"10172:3:14"},"nativeSrc":"10172:12:14","nodeType":"YulFunctionCall","src":"10172:12:14"}],"functionName":{"name":"sub","nativeSrc":"10137:3:14","nodeType":"YulIdentifier","src":"10137:3:14"},"nativeSrc":"10137:48:14","nodeType":"YulFunctionCall","src":"10137:48:14"}],"functionName":{"name":"slt","nativeSrc":"10113:3:14","nodeType":"YulIdentifier","src":"10113:3:14"},"nativeSrc":"10113:73:14","nodeType":"YulFunctionCall","src":"10113:73:14"}],"functionName":{"name":"iszero","nativeSrc":"10106:6:14","nodeType":"YulIdentifier","src":"10106:6:14"},"nativeSrc":"10106:81:14","nodeType":"YulFunctionCall","src":"10106:81:14"},"nativeSrc":"10103:168:14","nodeType":"YulIf","src":"10103:168:14"},{"nativeSrc":"10280:41:14","nodeType":"YulAssignment","src":"10280:41:14","value":{"arguments":[{"name":"base_ref","nativeSrc":"10292:8:14","nodeType":"YulIdentifier","src":"10292:8:14"},{"name":"rel_offset_of_tail","nativeSrc":"10302:18:14","nodeType":"YulIdentifier","src":"10302:18:14"}],"functionName":{"name":"add","nativeSrc":"10288:3:14","nodeType":"YulIdentifier","src":"10288:3:14"},"nativeSrc":"10288:33:14","nodeType":"YulFunctionCall","src":"10288:33:14"},"variableNames":[{"name":"addr","nativeSrc":"10280:4:14","nodeType":"YulIdentifier","src":"10280:4:14"}]},{"nativeSrc":"10331:28:14","nodeType":"YulAssignment","src":"10331:28:14","value":{"arguments":[{"name":"addr","nativeSrc":"10354:4:14","nodeType":"YulIdentifier","src":"10354:4:14"}],"functionName":{"name":"calldataload","nativeSrc":"10341:12:14","nodeType":"YulIdentifier","src":"10341:12:14"},"nativeSrc":"10341:18:14","nodeType":"YulFunctionCall","src":"10341:18:14"},"variableNames":[{"name":"length","nativeSrc":"10331:6:14","nodeType":"YulIdentifier","src":"10331:6:14"}]},{"body":{"nativeSrc":"10402:83:14","nodeType":"YulBlock","src":"10402:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nativeSrc":"10404:77:14","nodeType":"YulIdentifier","src":"10404:77:14"},"nativeSrc":"10404:79:14","nodeType":"YulFunctionCall","src":"10404:79:14"},"nativeSrc":"10404:79:14","nodeType":"YulExpressionStatement","src":"10404:79:14"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"10374:6:14","nodeType":"YulIdentifier","src":"10374:6:14"},{"kind":"number","nativeSrc":"10382:18:14","nodeType":"YulLiteral","src":"10382:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10371:2:14","nodeType":"YulIdentifier","src":"10371:2:14"},"nativeSrc":"10371:30:14","nodeType":"YulFunctionCall","src":"10371:30:14"},"nativeSrc":"10368:117:14","nodeType":"YulIf","src":"10368:117:14"},{"nativeSrc":"10494:21:14","nodeType":"YulAssignment","src":"10494:21:14","value":{"arguments":[{"name":"addr","nativeSrc":"10506:4:14","nodeType":"YulIdentifier","src":"10506:4:14"},{"kind":"number","nativeSrc":"10512:2:14","nodeType":"YulLiteral","src":"10512:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10502:3:14","nodeType":"YulIdentifier","src":"10502:3:14"},"nativeSrc":"10502:13:14","nodeType":"YulFunctionCall","src":"10502:13:14"},"variableNames":[{"name":"addr","nativeSrc":"10494:4:14","nodeType":"YulIdentifier","src":"10494:4:14"}]},{"body":{"nativeSrc":"10577:83:14","nodeType":"YulBlock","src":"10577:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nativeSrc":"10579:77:14","nodeType":"YulIdentifier","src":"10579:77:14"},"nativeSrc":"10579:79:14","nodeType":"YulFunctionCall","src":"10579:79:14"},"nativeSrc":"10579:79:14","nodeType":"YulExpressionStatement","src":"10579:79:14"}]},"condition":{"arguments":[{"name":"addr","nativeSrc":"10531:4:14","nodeType":"YulIdentifier","src":"10531:4:14"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"10541:12:14","nodeType":"YulIdentifier","src":"10541:12:14"},"nativeSrc":"10541:14:14","nodeType":"YulFunctionCall","src":"10541:14:14"},{"arguments":[{"name":"length","nativeSrc":"10561:6:14","nodeType":"YulIdentifier","src":"10561:6:14"},{"kind":"number","nativeSrc":"10569:4:14","nodeType":"YulLiteral","src":"10569:4:14","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"10557:3:14","nodeType":"YulIdentifier","src":"10557:3:14"},"nativeSrc":"10557:17:14","nodeType":"YulFunctionCall","src":"10557:17:14"}],"functionName":{"name":"sub","nativeSrc":"10537:3:14","nodeType":"YulIdentifier","src":"10537:3:14"},"nativeSrc":"10537:38:14","nodeType":"YulFunctionCall","src":"10537:38:14"}],"functionName":{"name":"sgt","nativeSrc":"10527:3:14","nodeType":"YulIdentifier","src":"10527:3:14"},"nativeSrc":"10527:49:14","nodeType":"YulFunctionCall","src":"10527:49:14"},"nativeSrc":"10524:136:14","nodeType":"YulIf","src":"10524:136:14"}]},"name":"access_calldata_tail_t_array$_t_uint8_$dyn_calldata_ptr","nativeSrc":"9929:738:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nativeSrc":"9994:8:14","nodeType":"YulTypedName","src":"9994:8:14","type":""},{"name":"ptr_to_tail","nativeSrc":"10004:11:14","nodeType":"YulTypedName","src":"10004:11:14","type":""}],"returnVariables":[{"name":"addr","nativeSrc":"10020:4:14","nodeType":"YulTypedName","src":"10020:4:14","type":""},{"name":"length","nativeSrc":"10026:6:14","nodeType":"YulTypedName","src":"10026:6:14","type":""}],"src":"9929:738:14"},{"body":{"nativeSrc":"10716:43:14","nodeType":"YulBlock","src":"10716:43:14","statements":[{"nativeSrc":"10726:27:14","nodeType":"YulAssignment","src":"10726:27:14","value":{"arguments":[{"name":"value","nativeSrc":"10741:5:14","nodeType":"YulIdentifier","src":"10741:5:14"},{"kind":"number","nativeSrc":"10748:4:14","nodeType":"YulLiteral","src":"10748:4:14","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"10737:3:14","nodeType":"YulIdentifier","src":"10737:3:14"},"nativeSrc":"10737:16:14","nodeType":"YulFunctionCall","src":"10737:16:14"},"variableNames":[{"name":"cleaned","nativeSrc":"10726:7:14","nodeType":"YulIdentifier","src":"10726:7:14"}]}]},"name":"cleanup_t_uint8","nativeSrc":"10673:86:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10698:5:14","nodeType":"YulTypedName","src":"10698:5:14","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"10708:7:14","nodeType":"YulTypedName","src":"10708:7:14","type":""}],"src":"10673:86:14"},{"body":{"nativeSrc":"10806:77:14","nodeType":"YulBlock","src":"10806:77:14","statements":[{"body":{"nativeSrc":"10861:16:14","nodeType":"YulBlock","src":"10861:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10870:1:14","nodeType":"YulLiteral","src":"10870:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"10873:1:14","nodeType":"YulLiteral","src":"10873:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10863:6:14","nodeType":"YulIdentifier","src":"10863:6:14"},"nativeSrc":"10863:12:14","nodeType":"YulFunctionCall","src":"10863:12:14"},"nativeSrc":"10863:12:14","nodeType":"YulExpressionStatement","src":"10863:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"10829:5:14","nodeType":"YulIdentifier","src":"10829:5:14"},{"arguments":[{"name":"value","nativeSrc":"10852:5:14","nodeType":"YulIdentifier","src":"10852:5:14"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"10836:15:14","nodeType":"YulIdentifier","src":"10836:15:14"},"nativeSrc":"10836:22:14","nodeType":"YulFunctionCall","src":"10836:22:14"}],"functionName":{"name":"eq","nativeSrc":"10826:2:14","nodeType":"YulIdentifier","src":"10826:2:14"},"nativeSrc":"10826:33:14","nodeType":"YulFunctionCall","src":"10826:33:14"}],"functionName":{"name":"iszero","nativeSrc":"10819:6:14","nodeType":"YulIdentifier","src":"10819:6:14"},"nativeSrc":"10819:41:14","nodeType":"YulFunctionCall","src":"10819:41:14"},"nativeSrc":"10816:61:14","nodeType":"YulIf","src":"10816:61:14"}]},"name":"validator_revert_t_uint8","nativeSrc":"10765:118:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10799:5:14","nodeType":"YulTypedName","src":"10799:5:14","type":""}],"src":"10765:118:14"},{"body":{"nativeSrc":"10939:85:14","nodeType":"YulBlock","src":"10939:85:14","statements":[{"nativeSrc":"10949:29:14","nodeType":"YulAssignment","src":"10949:29:14","value":{"arguments":[{"name":"offset","nativeSrc":"10971:6:14","nodeType":"YulIdentifier","src":"10971:6:14"}],"functionName":{"name":"calldataload","nativeSrc":"10958:12:14","nodeType":"YulIdentifier","src":"10958:12:14"},"nativeSrc":"10958:20:14","nodeType":"YulFunctionCall","src":"10958:20:14"},"variableNames":[{"name":"value","nativeSrc":"10949:5:14","nodeType":"YulIdentifier","src":"10949:5:14"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"11012:5:14","nodeType":"YulIdentifier","src":"11012:5:14"}],"functionName":{"name":"validator_revert_t_uint8","nativeSrc":"10987:24:14","nodeType":"YulIdentifier","src":"10987:24:14"},"nativeSrc":"10987:31:14","nodeType":"YulFunctionCall","src":"10987:31:14"},"nativeSrc":"10987:31:14","nodeType":"YulExpressionStatement","src":"10987:31:14"}]},"name":"abi_decode_t_uint8","nativeSrc":"10889:135:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"10917:6:14","nodeType":"YulTypedName","src":"10917:6:14","type":""},{"name":"end","nativeSrc":"10925:3:14","nodeType":"YulTypedName","src":"10925:3:14","type":""}],"returnVariables":[{"name":"value","nativeSrc":"10933:5:14","nodeType":"YulTypedName","src":"10933:5:14","type":""}],"src":"10889:135:14"},{"body":{"nativeSrc":"11094:261:14","nodeType":"YulBlock","src":"11094:261:14","statements":[{"body":{"nativeSrc":"11140:83:14","nodeType":"YulBlock","src":"11140:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"11142:77:14","nodeType":"YulIdentifier","src":"11142:77:14"},"nativeSrc":"11142:79:14","nodeType":"YulFunctionCall","src":"11142:79:14"},"nativeSrc":"11142:79:14","nodeType":"YulExpressionStatement","src":"11142:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11115:7:14","nodeType":"YulIdentifier","src":"11115:7:14"},{"name":"headStart","nativeSrc":"11124:9:14","nodeType":"YulIdentifier","src":"11124:9:14"}],"functionName":{"name":"sub","nativeSrc":"11111:3:14","nodeType":"YulIdentifier","src":"11111:3:14"},"nativeSrc":"11111:23:14","nodeType":"YulFunctionCall","src":"11111:23:14"},{"kind":"number","nativeSrc":"11136:2:14","nodeType":"YulLiteral","src":"11136:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"11107:3:14","nodeType":"YulIdentifier","src":"11107:3:14"},"nativeSrc":"11107:32:14","nodeType":"YulFunctionCall","src":"11107:32:14"},"nativeSrc":"11104:119:14","nodeType":"YulIf","src":"11104:119:14"},{"nativeSrc":"11233:115:14","nodeType":"YulBlock","src":"11233:115:14","statements":[{"nativeSrc":"11248:15:14","nodeType":"YulVariableDeclaration","src":"11248:15:14","value":{"kind":"number","nativeSrc":"11262:1:14","nodeType":"YulLiteral","src":"11262:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"11252:6:14","nodeType":"YulTypedName","src":"11252:6:14","type":""}]},{"nativeSrc":"11277:61:14","nodeType":"YulAssignment","src":"11277:61:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11310:9:14","nodeType":"YulIdentifier","src":"11310:9:14"},{"name":"offset","nativeSrc":"11321:6:14","nodeType":"YulIdentifier","src":"11321:6:14"}],"functionName":{"name":"add","nativeSrc":"11306:3:14","nodeType":"YulIdentifier","src":"11306:3:14"},"nativeSrc":"11306:22:14","nodeType":"YulFunctionCall","src":"11306:22:14"},{"name":"dataEnd","nativeSrc":"11330:7:14","nodeType":"YulIdentifier","src":"11330:7:14"}],"functionName":{"name":"abi_decode_t_uint8","nativeSrc":"11287:18:14","nodeType":"YulIdentifier","src":"11287:18:14"},"nativeSrc":"11287:51:14","nodeType":"YulFunctionCall","src":"11287:51:14"},"variableNames":[{"name":"value0","nativeSrc":"11277:6:14","nodeType":"YulIdentifier","src":"11277:6:14"}]}]}]},"name":"abi_decode_tuple_t_uint8","nativeSrc":"11030:325:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11064:9:14","nodeType":"YulTypedName","src":"11064:9:14","type":""},{"name":"dataEnd","nativeSrc":"11075:7:14","nodeType":"YulTypedName","src":"11075:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11087:6:14","nodeType":"YulTypedName","src":"11087:6:14","type":""}],"src":"11030:325:14"},{"body":{"nativeSrc":"11422:51:14","nodeType":"YulBlock","src":"11422:51:14","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"11439:3:14","nodeType":"YulIdentifier","src":"11439:3:14"},{"arguments":[{"name":"value","nativeSrc":"11460:5:14","nodeType":"YulIdentifier","src":"11460:5:14"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"11444:15:14","nodeType":"YulIdentifier","src":"11444:15:14"},"nativeSrc":"11444:22:14","nodeType":"YulFunctionCall","src":"11444:22:14"}],"functionName":{"name":"mstore","nativeSrc":"11432:6:14","nodeType":"YulIdentifier","src":"11432:6:14"},"nativeSrc":"11432:35:14","nodeType":"YulFunctionCall","src":"11432:35:14"},"nativeSrc":"11432:35:14","nodeType":"YulExpressionStatement","src":"11432:35:14"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"11361:112:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11410:5:14","nodeType":"YulTypedName","src":"11410:5:14","type":""},{"name":"pos","nativeSrc":"11417:3:14","nodeType":"YulTypedName","src":"11417:3:14","type":""}],"src":"11361:112:14"},{"body":{"nativeSrc":"11573:120:14","nodeType":"YulBlock","src":"11573:120:14","statements":[{"nativeSrc":"11583:26:14","nodeType":"YulAssignment","src":"11583:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"11595:9:14","nodeType":"YulIdentifier","src":"11595:9:14"},{"kind":"number","nativeSrc":"11606:2:14","nodeType":"YulLiteral","src":"11606:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11591:3:14","nodeType":"YulIdentifier","src":"11591:3:14"},"nativeSrc":"11591:18:14","nodeType":"YulFunctionCall","src":"11591:18:14"},"variableNames":[{"name":"tail","nativeSrc":"11583:4:14","nodeType":"YulIdentifier","src":"11583:4:14"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11659:6:14","nodeType":"YulIdentifier","src":"11659:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"11672:9:14","nodeType":"YulIdentifier","src":"11672:9:14"},{"kind":"number","nativeSrc":"11683:1:14","nodeType":"YulLiteral","src":"11683:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11668:3:14","nodeType":"YulIdentifier","src":"11668:3:14"},"nativeSrc":"11668:17:14","nodeType":"YulFunctionCall","src":"11668:17:14"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"11619:39:14","nodeType":"YulIdentifier","src":"11619:39:14"},"nativeSrc":"11619:67:14","nodeType":"YulFunctionCall","src":"11619:67:14"},"nativeSrc":"11619:67:14","nodeType":"YulExpressionStatement","src":"11619:67:14"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"11479:214:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11545:9:14","nodeType":"YulTypedName","src":"11545:9:14","type":""},{"name":"value0","nativeSrc":"11557:6:14","nodeType":"YulTypedName","src":"11557:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11568:4:14","nodeType":"YulTypedName","src":"11568:4:14","type":""}],"src":"11479:214:14"},{"body":{"nativeSrc":"11762:80:14","nodeType":"YulBlock","src":"11762:80:14","statements":[{"nativeSrc":"11772:22:14","nodeType":"YulAssignment","src":"11772:22:14","value":{"arguments":[{"name":"offset","nativeSrc":"11787:6:14","nodeType":"YulIdentifier","src":"11787:6:14"}],"functionName":{"name":"mload","nativeSrc":"11781:5:14","nodeType":"YulIdentifier","src":"11781:5:14"},"nativeSrc":"11781:13:14","nodeType":"YulFunctionCall","src":"11781:13:14"},"variableNames":[{"name":"value","nativeSrc":"11772:5:14","nodeType":"YulIdentifier","src":"11772:5:14"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"11830:5:14","nodeType":"YulIdentifier","src":"11830:5:14"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"11803:26:14","nodeType":"YulIdentifier","src":"11803:26:14"},"nativeSrc":"11803:33:14","nodeType":"YulFunctionCall","src":"11803:33:14"},"nativeSrc":"11803:33:14","nodeType":"YulExpressionStatement","src":"11803:33:14"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"11699:143:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"11740:6:14","nodeType":"YulTypedName","src":"11740:6:14","type":""},{"name":"end","nativeSrc":"11748:3:14","nodeType":"YulTypedName","src":"11748:3:14","type":""}],"returnVariables":[{"name":"value","nativeSrc":"11756:5:14","nodeType":"YulTypedName","src":"11756:5:14","type":""}],"src":"11699:143:14"},{"body":{"nativeSrc":"11925:274:14","nodeType":"YulBlock","src":"11925:274:14","statements":[{"body":{"nativeSrc":"11971:83:14","nodeType":"YulBlock","src":"11971:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"11973:77:14","nodeType":"YulIdentifier","src":"11973:77:14"},"nativeSrc":"11973:79:14","nodeType":"YulFunctionCall","src":"11973:79:14"},"nativeSrc":"11973:79:14","nodeType":"YulExpressionStatement","src":"11973:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11946:7:14","nodeType":"YulIdentifier","src":"11946:7:14"},{"name":"headStart","nativeSrc":"11955:9:14","nodeType":"YulIdentifier","src":"11955:9:14"}],"functionName":{"name":"sub","nativeSrc":"11942:3:14","nodeType":"YulIdentifier","src":"11942:3:14"},"nativeSrc":"11942:23:14","nodeType":"YulFunctionCall","src":"11942:23:14"},{"kind":"number","nativeSrc":"11967:2:14","nodeType":"YulLiteral","src":"11967:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"11938:3:14","nodeType":"YulIdentifier","src":"11938:3:14"},"nativeSrc":"11938:32:14","nodeType":"YulFunctionCall","src":"11938:32:14"},"nativeSrc":"11935:119:14","nodeType":"YulIf","src":"11935:119:14"},{"nativeSrc":"12064:128:14","nodeType":"YulBlock","src":"12064:128:14","statements":[{"nativeSrc":"12079:15:14","nodeType":"YulVariableDeclaration","src":"12079:15:14","value":{"kind":"number","nativeSrc":"12093:1:14","nodeType":"YulLiteral","src":"12093:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"12083:6:14","nodeType":"YulTypedName","src":"12083:6:14","type":""}]},{"nativeSrc":"12108:74:14","nodeType":"YulAssignment","src":"12108:74:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12154:9:14","nodeType":"YulIdentifier","src":"12154:9:14"},{"name":"offset","nativeSrc":"12165:6:14","nodeType":"YulIdentifier","src":"12165:6:14"}],"functionName":{"name":"add","nativeSrc":"12150:3:14","nodeType":"YulIdentifier","src":"12150:3:14"},"nativeSrc":"12150:22:14","nodeType":"YulFunctionCall","src":"12150:22:14"},{"name":"dataEnd","nativeSrc":"12174:7:14","nodeType":"YulIdentifier","src":"12174:7:14"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"12118:31:14","nodeType":"YulIdentifier","src":"12118:31:14"},"nativeSrc":"12118:64:14","nodeType":"YulFunctionCall","src":"12118:64:14"},"variableNames":[{"name":"value0","nativeSrc":"12108:6:14","nodeType":"YulIdentifier","src":"12108:6:14"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"11848:351:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11895:9:14","nodeType":"YulTypedName","src":"11895:9:14","type":""},{"name":"dataEnd","nativeSrc":"11906:7:14","nodeType":"YulTypedName","src":"11906:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11918:6:14","nodeType":"YulTypedName","src":"11918:6:14","type":""}],"src":"11848:351:14"},{"body":{"nativeSrc":"12331:206:14","nodeType":"YulBlock","src":"12331:206:14","statements":[{"nativeSrc":"12341:26:14","nodeType":"YulAssignment","src":"12341:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"12353:9:14","nodeType":"YulIdentifier","src":"12353:9:14"},{"kind":"number","nativeSrc":"12364:2:14","nodeType":"YulLiteral","src":"12364:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12349:3:14","nodeType":"YulIdentifier","src":"12349:3:14"},"nativeSrc":"12349:18:14","nodeType":"YulFunctionCall","src":"12349:18:14"},"variableNames":[{"name":"tail","nativeSrc":"12341:4:14","nodeType":"YulIdentifier","src":"12341:4:14"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12421:6:14","nodeType":"YulIdentifier","src":"12421:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"12434:9:14","nodeType":"YulIdentifier","src":"12434:9:14"},{"kind":"number","nativeSrc":"12445:1:14","nodeType":"YulLiteral","src":"12445:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12430:3:14","nodeType":"YulIdentifier","src":"12430:3:14"},"nativeSrc":"12430:17:14","nodeType":"YulFunctionCall","src":"12430:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12377:43:14","nodeType":"YulIdentifier","src":"12377:43:14"},"nativeSrc":"12377:71:14","nodeType":"YulFunctionCall","src":"12377:71:14"},"nativeSrc":"12377:71:14","nodeType":"YulExpressionStatement","src":"12377:71:14"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12502:6:14","nodeType":"YulIdentifier","src":"12502:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"12515:9:14","nodeType":"YulIdentifier","src":"12515:9:14"},{"kind":"number","nativeSrc":"12526:2:14","nodeType":"YulLiteral","src":"12526:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12511:3:14","nodeType":"YulIdentifier","src":"12511:3:14"},"nativeSrc":"12511:18:14","nodeType":"YulFunctionCall","src":"12511:18:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12458:43:14","nodeType":"YulIdentifier","src":"12458:43:14"},"nativeSrc":"12458:72:14","nodeType":"YulFunctionCall","src":"12458:72:14"},"nativeSrc":"12458:72:14","nodeType":"YulExpressionStatement","src":"12458:72:14"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"12205:332:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12295:9:14","nodeType":"YulTypedName","src":"12295:9:14","type":""},{"name":"value1","nativeSrc":"12307:6:14","nodeType":"YulTypedName","src":"12307:6:14","type":""},{"name":"value0","nativeSrc":"12315:6:14","nodeType":"YulTypedName","src":"12315:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12326:4:14","nodeType":"YulTypedName","src":"12326:4:14","type":""}],"src":"12205:332:14"},{"body":{"nativeSrc":"12660:634:14","nodeType":"YulBlock","src":"12660:634:14","statements":[{"nativeSrc":"12670:51:14","nodeType":"YulVariableDeclaration","src":"12670:51:14","value":{"arguments":[{"name":"ptr_to_tail","nativeSrc":"12709:11:14","nodeType":"YulIdentifier","src":"12709:11:14"}],"functionName":{"name":"calldataload","nativeSrc":"12696:12:14","nodeType":"YulIdentifier","src":"12696:12:14"},"nativeSrc":"12696:25:14","nodeType":"YulFunctionCall","src":"12696:25:14"},"variables":[{"name":"rel_offset_of_tail","nativeSrc":"12674:18:14","nodeType":"YulTypedName","src":"12674:18:14","type":""}]},{"body":{"nativeSrc":"12815:83:14","nodeType":"YulBlock","src":"12815:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nativeSrc":"12817:77:14","nodeType":"YulIdentifier","src":"12817:77:14"},"nativeSrc":"12817:79:14","nodeType":"YulFunctionCall","src":"12817:79:14"},"nativeSrc":"12817:79:14","nodeType":"YulExpressionStatement","src":"12817:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nativeSrc":"12744:18:14","nodeType":"YulIdentifier","src":"12744:18:14"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"12772:12:14","nodeType":"YulIdentifier","src":"12772:12:14"},"nativeSrc":"12772:14:14","nodeType":"YulFunctionCall","src":"12772:14:14"},{"name":"base_ref","nativeSrc":"12788:8:14","nodeType":"YulIdentifier","src":"12788:8:14"}],"functionName":{"name":"sub","nativeSrc":"12768:3:14","nodeType":"YulIdentifier","src":"12768:3:14"},"nativeSrc":"12768:29:14","nodeType":"YulFunctionCall","src":"12768:29:14"},{"arguments":[{"kind":"number","nativeSrc":"12803:4:14","nodeType":"YulLiteral","src":"12803:4:14","type":"","value":"0x20"},{"kind":"number","nativeSrc":"12809:1:14","nodeType":"YulLiteral","src":"12809:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"12799:3:14","nodeType":"YulIdentifier","src":"12799:3:14"},"nativeSrc":"12799:12:14","nodeType":"YulFunctionCall","src":"12799:12:14"}],"functionName":{"name":"sub","nativeSrc":"12764:3:14","nodeType":"YulIdentifier","src":"12764:3:14"},"nativeSrc":"12764:48:14","nodeType":"YulFunctionCall","src":"12764:48:14"}],"functionName":{"name":"slt","nativeSrc":"12740:3:14","nodeType":"YulIdentifier","src":"12740:3:14"},"nativeSrc":"12740:73:14","nodeType":"YulFunctionCall","src":"12740:73:14"}],"functionName":{"name":"iszero","nativeSrc":"12733:6:14","nodeType":"YulIdentifier","src":"12733:6:14"},"nativeSrc":"12733:81:14","nodeType":"YulFunctionCall","src":"12733:81:14"},"nativeSrc":"12730:168:14","nodeType":"YulIf","src":"12730:168:14"},{"nativeSrc":"12907:41:14","nodeType":"YulAssignment","src":"12907:41:14","value":{"arguments":[{"name":"base_ref","nativeSrc":"12919:8:14","nodeType":"YulIdentifier","src":"12919:8:14"},{"name":"rel_offset_of_tail","nativeSrc":"12929:18:14","nodeType":"YulIdentifier","src":"12929:18:14"}],"functionName":{"name":"add","nativeSrc":"12915:3:14","nodeType":"YulIdentifier","src":"12915:3:14"},"nativeSrc":"12915:33:14","nodeType":"YulFunctionCall","src":"12915:33:14"},"variableNames":[{"name":"addr","nativeSrc":"12907:4:14","nodeType":"YulIdentifier","src":"12907:4:14"}]},{"nativeSrc":"12958:28:14","nodeType":"YulAssignment","src":"12958:28:14","value":{"arguments":[{"name":"addr","nativeSrc":"12981:4:14","nodeType":"YulIdentifier","src":"12981:4:14"}],"functionName":{"name":"calldataload","nativeSrc":"12968:12:14","nodeType":"YulIdentifier","src":"12968:12:14"},"nativeSrc":"12968:18:14","nodeType":"YulFunctionCall","src":"12968:18:14"},"variableNames":[{"name":"length","nativeSrc":"12958:6:14","nodeType":"YulIdentifier","src":"12958:6:14"}]},{"body":{"nativeSrc":"13029:83:14","nodeType":"YulBlock","src":"13029:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nativeSrc":"13031:77:14","nodeType":"YulIdentifier","src":"13031:77:14"},"nativeSrc":"13031:79:14","nodeType":"YulFunctionCall","src":"13031:79:14"},"nativeSrc":"13031:79:14","nodeType":"YulExpressionStatement","src":"13031:79:14"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"13001:6:14","nodeType":"YulIdentifier","src":"13001:6:14"},{"kind":"number","nativeSrc":"13009:18:14","nodeType":"YulLiteral","src":"13009:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"12998:2:14","nodeType":"YulIdentifier","src":"12998:2:14"},"nativeSrc":"12998:30:14","nodeType":"YulFunctionCall","src":"12998:30:14"},"nativeSrc":"12995:117:14","nodeType":"YulIf","src":"12995:117:14"},{"nativeSrc":"13121:21:14","nodeType":"YulAssignment","src":"13121:21:14","value":{"arguments":[{"name":"addr","nativeSrc":"13133:4:14","nodeType":"YulIdentifier","src":"13133:4:14"},{"kind":"number","nativeSrc":"13139:2:14","nodeType":"YulLiteral","src":"13139:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13129:3:14","nodeType":"YulIdentifier","src":"13129:3:14"},"nativeSrc":"13129:13:14","nodeType":"YulFunctionCall","src":"13129:13:14"},"variableNames":[{"name":"addr","nativeSrc":"13121:4:14","nodeType":"YulIdentifier","src":"13121:4:14"}]},{"body":{"nativeSrc":"13204:83:14","nodeType":"YulBlock","src":"13204:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nativeSrc":"13206:77:14","nodeType":"YulIdentifier","src":"13206:77:14"},"nativeSrc":"13206:79:14","nodeType":"YulFunctionCall","src":"13206:79:14"},"nativeSrc":"13206:79:14","nodeType":"YulExpressionStatement","src":"13206:79:14"}]},"condition":{"arguments":[{"name":"addr","nativeSrc":"13158:4:14","nodeType":"YulIdentifier","src":"13158:4:14"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"13168:12:14","nodeType":"YulIdentifier","src":"13168:12:14"},"nativeSrc":"13168:14:14","nodeType":"YulFunctionCall","src":"13168:14:14"},{"arguments":[{"name":"length","nativeSrc":"13188:6:14","nodeType":"YulIdentifier","src":"13188:6:14"},{"kind":"number","nativeSrc":"13196:4:14","nodeType":"YulLiteral","src":"13196:4:14","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"13184:3:14","nodeType":"YulIdentifier","src":"13184:3:14"},"nativeSrc":"13184:17:14","nodeType":"YulFunctionCall","src":"13184:17:14"}],"functionName":{"name":"sub","nativeSrc":"13164:3:14","nodeType":"YulIdentifier","src":"13164:3:14"},"nativeSrc":"13164:38:14","nodeType":"YulFunctionCall","src":"13164:38:14"}],"functionName":{"name":"sgt","nativeSrc":"13154:3:14","nodeType":"YulIdentifier","src":"13154:3:14"},"nativeSrc":"13154:49:14","nodeType":"YulFunctionCall","src":"13154:49:14"},"nativeSrc":"13151:136:14","nodeType":"YulIf","src":"13151:136:14"}]},"name":"access_calldata_tail_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","nativeSrc":"12543:751:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nativeSrc":"12621:8:14","nodeType":"YulTypedName","src":"12621:8:14","type":""},{"name":"ptr_to_tail","nativeSrc":"12631:11:14","nodeType":"YulTypedName","src":"12631:11:14","type":""}],"returnVariables":[{"name":"addr","nativeSrc":"12647:4:14","nodeType":"YulTypedName","src":"12647:4:14","type":""},{"name":"length","nativeSrc":"12653:6:14","nodeType":"YulTypedName","src":"12653:6:14","type":""}],"src":"12543:751:14"},{"body":{"nativeSrc":"13390:634:14","nodeType":"YulBlock","src":"13390:634:14","statements":[{"nativeSrc":"13400:51:14","nodeType":"YulVariableDeclaration","src":"13400:51:14","value":{"arguments":[{"name":"ptr_to_tail","nativeSrc":"13439:11:14","nodeType":"YulIdentifier","src":"13439:11:14"}],"functionName":{"name":"calldataload","nativeSrc":"13426:12:14","nodeType":"YulIdentifier","src":"13426:12:14"},"nativeSrc":"13426:25:14","nodeType":"YulFunctionCall","src":"13426:25:14"},"variables":[{"name":"rel_offset_of_tail","nativeSrc":"13404:18:14","nodeType":"YulTypedName","src":"13404:18:14","type":""}]},{"body":{"nativeSrc":"13545:83:14","nodeType":"YulBlock","src":"13545:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nativeSrc":"13547:77:14","nodeType":"YulIdentifier","src":"13547:77:14"},"nativeSrc":"13547:79:14","nodeType":"YulFunctionCall","src":"13547:79:14"},"nativeSrc":"13547:79:14","nodeType":"YulExpressionStatement","src":"13547:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nativeSrc":"13474:18:14","nodeType":"YulIdentifier","src":"13474:18:14"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"13502:12:14","nodeType":"YulIdentifier","src":"13502:12:14"},"nativeSrc":"13502:14:14","nodeType":"YulFunctionCall","src":"13502:14:14"},{"name":"base_ref","nativeSrc":"13518:8:14","nodeType":"YulIdentifier","src":"13518:8:14"}],"functionName":{"name":"sub","nativeSrc":"13498:3:14","nodeType":"YulIdentifier","src":"13498:3:14"},"nativeSrc":"13498:29:14","nodeType":"YulFunctionCall","src":"13498:29:14"},{"arguments":[{"kind":"number","nativeSrc":"13533:4:14","nodeType":"YulLiteral","src":"13533:4:14","type":"","value":"0x20"},{"kind":"number","nativeSrc":"13539:1:14","nodeType":"YulLiteral","src":"13539:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"13529:3:14","nodeType":"YulIdentifier","src":"13529:3:14"},"nativeSrc":"13529:12:14","nodeType":"YulFunctionCall","src":"13529:12:14"}],"functionName":{"name":"sub","nativeSrc":"13494:3:14","nodeType":"YulIdentifier","src":"13494:3:14"},"nativeSrc":"13494:48:14","nodeType":"YulFunctionCall","src":"13494:48:14"}],"functionName":{"name":"slt","nativeSrc":"13470:3:14","nodeType":"YulIdentifier","src":"13470:3:14"},"nativeSrc":"13470:73:14","nodeType":"YulFunctionCall","src":"13470:73:14"}],"functionName":{"name":"iszero","nativeSrc":"13463:6:14","nodeType":"YulIdentifier","src":"13463:6:14"},"nativeSrc":"13463:81:14","nodeType":"YulFunctionCall","src":"13463:81:14"},"nativeSrc":"13460:168:14","nodeType":"YulIf","src":"13460:168:14"},{"nativeSrc":"13637:41:14","nodeType":"YulAssignment","src":"13637:41:14","value":{"arguments":[{"name":"base_ref","nativeSrc":"13649:8:14","nodeType":"YulIdentifier","src":"13649:8:14"},{"name":"rel_offset_of_tail","nativeSrc":"13659:18:14","nodeType":"YulIdentifier","src":"13659:18:14"}],"functionName":{"name":"add","nativeSrc":"13645:3:14","nodeType":"YulIdentifier","src":"13645:3:14"},"nativeSrc":"13645:33:14","nodeType":"YulFunctionCall","src":"13645:33:14"},"variableNames":[{"name":"addr","nativeSrc":"13637:4:14","nodeType":"YulIdentifier","src":"13637:4:14"}]},{"nativeSrc":"13688:28:14","nodeType":"YulAssignment","src":"13688:28:14","value":{"arguments":[{"name":"addr","nativeSrc":"13711:4:14","nodeType":"YulIdentifier","src":"13711:4:14"}],"functionName":{"name":"calldataload","nativeSrc":"13698:12:14","nodeType":"YulIdentifier","src":"13698:12:14"},"nativeSrc":"13698:18:14","nodeType":"YulFunctionCall","src":"13698:18:14"},"variableNames":[{"name":"length","nativeSrc":"13688:6:14","nodeType":"YulIdentifier","src":"13688:6:14"}]},{"body":{"nativeSrc":"13759:83:14","nodeType":"YulBlock","src":"13759:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nativeSrc":"13761:77:14","nodeType":"YulIdentifier","src":"13761:77:14"},"nativeSrc":"13761:79:14","nodeType":"YulFunctionCall","src":"13761:79:14"},"nativeSrc":"13761:79:14","nodeType":"YulExpressionStatement","src":"13761:79:14"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"13731:6:14","nodeType":"YulIdentifier","src":"13731:6:14"},{"kind":"number","nativeSrc":"13739:18:14","nodeType":"YulLiteral","src":"13739:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"13728:2:14","nodeType":"YulIdentifier","src":"13728:2:14"},"nativeSrc":"13728:30:14","nodeType":"YulFunctionCall","src":"13728:30:14"},"nativeSrc":"13725:117:14","nodeType":"YulIf","src":"13725:117:14"},{"nativeSrc":"13851:21:14","nodeType":"YulAssignment","src":"13851:21:14","value":{"arguments":[{"name":"addr","nativeSrc":"13863:4:14","nodeType":"YulIdentifier","src":"13863:4:14"},{"kind":"number","nativeSrc":"13869:2:14","nodeType":"YulLiteral","src":"13869:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13859:3:14","nodeType":"YulIdentifier","src":"13859:3:14"},"nativeSrc":"13859:13:14","nodeType":"YulFunctionCall","src":"13859:13:14"},"variableNames":[{"name":"addr","nativeSrc":"13851:4:14","nodeType":"YulIdentifier","src":"13851:4:14"}]},{"body":{"nativeSrc":"13934:83:14","nodeType":"YulBlock","src":"13934:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nativeSrc":"13936:77:14","nodeType":"YulIdentifier","src":"13936:77:14"},"nativeSrc":"13936:79:14","nodeType":"YulFunctionCall","src":"13936:79:14"},"nativeSrc":"13936:79:14","nodeType":"YulExpressionStatement","src":"13936:79:14"}]},"condition":{"arguments":[{"name":"addr","nativeSrc":"13888:4:14","nodeType":"YulIdentifier","src":"13888:4:14"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"13898:12:14","nodeType":"YulIdentifier","src":"13898:12:14"},"nativeSrc":"13898:14:14","nodeType":"YulFunctionCall","src":"13898:14:14"},{"arguments":[{"name":"length","nativeSrc":"13918:6:14","nodeType":"YulIdentifier","src":"13918:6:14"},{"kind":"number","nativeSrc":"13926:4:14","nodeType":"YulLiteral","src":"13926:4:14","type":"","value":"0x01"}],"functionName":{"name":"mul","nativeSrc":"13914:3:14","nodeType":"YulIdentifier","src":"13914:3:14"},"nativeSrc":"13914:17:14","nodeType":"YulFunctionCall","src":"13914:17:14"}],"functionName":{"name":"sub","nativeSrc":"13894:3:14","nodeType":"YulIdentifier","src":"13894:3:14"},"nativeSrc":"13894:38:14","nodeType":"YulFunctionCall","src":"13894:38:14"}],"functionName":{"name":"sgt","nativeSrc":"13884:3:14","nodeType":"YulIdentifier","src":"13884:3:14"},"nativeSrc":"13884:49:14","nodeType":"YulFunctionCall","src":"13884:49:14"},"nativeSrc":"13881:136:14","nodeType":"YulIf","src":"13881:136:14"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nativeSrc":"13300:724:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nativeSrc":"13351:8:14","nodeType":"YulTypedName","src":"13351:8:14","type":""},{"name":"ptr_to_tail","nativeSrc":"13361:11:14","nodeType":"YulTypedName","src":"13361:11:14","type":""}],"returnVariables":[{"name":"addr","nativeSrc":"13377:4:14","nodeType":"YulTypedName","src":"13377:4:14","type":""},{"name":"length","nativeSrc":"13383:6:14","nodeType":"YulTypedName","src":"13383:6:14","type":""}],"src":"13300:724:14"},{"body":{"nativeSrc":"14125:73:14","nodeType":"YulBlock","src":"14125:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"14142:3:14","nodeType":"YulIdentifier","src":"14142:3:14"},{"name":"length","nativeSrc":"14147:6:14","nodeType":"YulIdentifier","src":"14147:6:14"}],"functionName":{"name":"mstore","nativeSrc":"14135:6:14","nodeType":"YulIdentifier","src":"14135:6:14"},"nativeSrc":"14135:19:14","nodeType":"YulFunctionCall","src":"14135:19:14"},"nativeSrc":"14135:19:14","nodeType":"YulExpressionStatement","src":"14135:19:14"},{"nativeSrc":"14163:29:14","nodeType":"YulAssignment","src":"14163:29:14","value":{"arguments":[{"name":"pos","nativeSrc":"14182:3:14","nodeType":"YulIdentifier","src":"14182:3:14"},{"kind":"number","nativeSrc":"14187:4:14","nodeType":"YulLiteral","src":"14187:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14178:3:14","nodeType":"YulIdentifier","src":"14178:3:14"},"nativeSrc":"14178:14:14","nodeType":"YulFunctionCall","src":"14178:14:14"},"variableNames":[{"name":"updated_pos","nativeSrc":"14163:11:14","nodeType":"YulIdentifier","src":"14163:11:14"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"14030:168:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14097:3:14","nodeType":"YulTypedName","src":"14097:3:14","type":""},{"name":"length","nativeSrc":"14102:6:14","nodeType":"YulTypedName","src":"14102:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"14113:11:14","nodeType":"YulTypedName","src":"14113:11:14","type":""}],"src":"14030:168:14"},{"body":{"nativeSrc":"14268:82:14","nodeType":"YulBlock","src":"14268:82:14","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"14291:3:14","nodeType":"YulIdentifier","src":"14291:3:14"},{"name":"src","nativeSrc":"14296:3:14","nodeType":"YulIdentifier","src":"14296:3:14"},{"name":"length","nativeSrc":"14301:6:14","nodeType":"YulIdentifier","src":"14301:6:14"}],"functionName":{"name":"calldatacopy","nativeSrc":"14278:12:14","nodeType":"YulIdentifier","src":"14278:12:14"},"nativeSrc":"14278:30:14","nodeType":"YulFunctionCall","src":"14278:30:14"},"nativeSrc":"14278:30:14","nodeType":"YulExpressionStatement","src":"14278:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"14328:3:14","nodeType":"YulIdentifier","src":"14328:3:14"},{"name":"length","nativeSrc":"14333:6:14","nodeType":"YulIdentifier","src":"14333:6:14"}],"functionName":{"name":"add","nativeSrc":"14324:3:14","nodeType":"YulIdentifier","src":"14324:3:14"},"nativeSrc":"14324:16:14","nodeType":"YulFunctionCall","src":"14324:16:14"},{"kind":"number","nativeSrc":"14342:1:14","nodeType":"YulLiteral","src":"14342:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"14317:6:14","nodeType":"YulIdentifier","src":"14317:6:14"},"nativeSrc":"14317:27:14","nodeType":"YulFunctionCall","src":"14317:27:14"},"nativeSrc":"14317:27:14","nodeType":"YulExpressionStatement","src":"14317:27:14"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"14204:146:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"14250:3:14","nodeType":"YulTypedName","src":"14250:3:14","type":""},{"name":"dst","nativeSrc":"14255:3:14","nodeType":"YulTypedName","src":"14255:3:14","type":""},{"name":"length","nativeSrc":"14260:6:14","nodeType":"YulTypedName","src":"14260:6:14","type":""}],"src":"14204:146:14"},{"body":{"nativeSrc":"14404:54:14","nodeType":"YulBlock","src":"14404:54:14","statements":[{"nativeSrc":"14414:38:14","nodeType":"YulAssignment","src":"14414:38:14","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"14432:5:14","nodeType":"YulIdentifier","src":"14432:5:14"},{"kind":"number","nativeSrc":"14439:2:14","nodeType":"YulLiteral","src":"14439:2:14","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"14428:3:14","nodeType":"YulIdentifier","src":"14428:3:14"},"nativeSrc":"14428:14:14","nodeType":"YulFunctionCall","src":"14428:14:14"},{"arguments":[{"kind":"number","nativeSrc":"14448:2:14","nodeType":"YulLiteral","src":"14448:2:14","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"14444:3:14","nodeType":"YulIdentifier","src":"14444:3:14"},"nativeSrc":"14444:7:14","nodeType":"YulFunctionCall","src":"14444:7:14"}],"functionName":{"name":"and","nativeSrc":"14424:3:14","nodeType":"YulIdentifier","src":"14424:3:14"},"nativeSrc":"14424:28:14","nodeType":"YulFunctionCall","src":"14424:28:14"},"variableNames":[{"name":"result","nativeSrc":"14414:6:14","nodeType":"YulIdentifier","src":"14414:6:14"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"14356:102:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14387:5:14","nodeType":"YulTypedName","src":"14387:5:14","type":""}],"returnVariables":[{"name":"result","nativeSrc":"14397:6:14","nodeType":"YulTypedName","src":"14397:6:14","type":""}],"src":"14356:102:14"},{"body":{"nativeSrc":"14586:214:14","nodeType":"YulBlock","src":"14586:214:14","statements":[{"nativeSrc":"14596:77:14","nodeType":"YulAssignment","src":"14596:77:14","value":{"arguments":[{"name":"pos","nativeSrc":"14661:3:14","nodeType":"YulIdentifier","src":"14661:3:14"},{"name":"length","nativeSrc":"14666:6:14","nodeType":"YulIdentifier","src":"14666:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"14603:57:14","nodeType":"YulIdentifier","src":"14603:57:14"},"nativeSrc":"14603:70:14","nodeType":"YulFunctionCall","src":"14603:70:14"},"variableNames":[{"name":"pos","nativeSrc":"14596:3:14","nodeType":"YulIdentifier","src":"14596:3:14"}]},{"expression":{"arguments":[{"name":"start","nativeSrc":"14720:5:14","nodeType":"YulIdentifier","src":"14720:5:14"},{"name":"pos","nativeSrc":"14727:3:14","nodeType":"YulIdentifier","src":"14727:3:14"},{"name":"length","nativeSrc":"14732:6:14","nodeType":"YulIdentifier","src":"14732:6:14"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"14683:36:14","nodeType":"YulIdentifier","src":"14683:36:14"},"nativeSrc":"14683:56:14","nodeType":"YulFunctionCall","src":"14683:56:14"},"nativeSrc":"14683:56:14","nodeType":"YulExpressionStatement","src":"14683:56:14"},{"nativeSrc":"14748:46:14","nodeType":"YulAssignment","src":"14748:46:14","value":{"arguments":[{"name":"pos","nativeSrc":"14759:3:14","nodeType":"YulIdentifier","src":"14759:3:14"},{"arguments":[{"name":"length","nativeSrc":"14786:6:14","nodeType":"YulIdentifier","src":"14786:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"14764:21:14","nodeType":"YulIdentifier","src":"14764:21:14"},"nativeSrc":"14764:29:14","nodeType":"YulFunctionCall","src":"14764:29:14"}],"functionName":{"name":"add","nativeSrc":"14755:3:14","nodeType":"YulIdentifier","src":"14755:3:14"},"nativeSrc":"14755:39:14","nodeType":"YulFunctionCall","src":"14755:39:14"},"variableNames":[{"name":"end","nativeSrc":"14748:3:14","nodeType":"YulIdentifier","src":"14748:3:14"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"14486:314:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"14559:5:14","nodeType":"YulTypedName","src":"14559:5:14","type":""},{"name":"length","nativeSrc":"14566:6:14","nodeType":"YulTypedName","src":"14566:6:14","type":""},{"name":"pos","nativeSrc":"14574:3:14","nodeType":"YulTypedName","src":"14574:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"14582:3:14","nodeType":"YulTypedName","src":"14582:3:14","type":""}],"src":"14486:314:14"},{"body":{"nativeSrc":"14960:285:14","nodeType":"YulBlock","src":"14960:285:14","statements":[{"nativeSrc":"14970:26:14","nodeType":"YulAssignment","src":"14970:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"14982:9:14","nodeType":"YulIdentifier","src":"14982:9:14"},{"kind":"number","nativeSrc":"14993:2:14","nodeType":"YulLiteral","src":"14993:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14978:3:14","nodeType":"YulIdentifier","src":"14978:3:14"},"nativeSrc":"14978:18:14","nodeType":"YulFunctionCall","src":"14978:18:14"},"variableNames":[{"name":"tail","nativeSrc":"14970:4:14","nodeType":"YulIdentifier","src":"14970:4:14"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"15050:6:14","nodeType":"YulIdentifier","src":"15050:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"15063:9:14","nodeType":"YulIdentifier","src":"15063:9:14"},{"kind":"number","nativeSrc":"15074:1:14","nodeType":"YulLiteral","src":"15074:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15059:3:14","nodeType":"YulIdentifier","src":"15059:3:14"},"nativeSrc":"15059:17:14","nodeType":"YulFunctionCall","src":"15059:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"15006:43:14","nodeType":"YulIdentifier","src":"15006:43:14"},"nativeSrc":"15006:71:14","nodeType":"YulFunctionCall","src":"15006:71:14"},"nativeSrc":"15006:71:14","nodeType":"YulExpressionStatement","src":"15006:71:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15098:9:14","nodeType":"YulIdentifier","src":"15098:9:14"},{"kind":"number","nativeSrc":"15109:2:14","nodeType":"YulLiteral","src":"15109:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15094:3:14","nodeType":"YulIdentifier","src":"15094:3:14"},"nativeSrc":"15094:18:14","nodeType":"YulFunctionCall","src":"15094:18:14"},{"arguments":[{"name":"tail","nativeSrc":"15118:4:14","nodeType":"YulIdentifier","src":"15118:4:14"},{"name":"headStart","nativeSrc":"15124:9:14","nodeType":"YulIdentifier","src":"15124:9:14"}],"functionName":{"name":"sub","nativeSrc":"15114:3:14","nodeType":"YulIdentifier","src":"15114:3:14"},"nativeSrc":"15114:20:14","nodeType":"YulFunctionCall","src":"15114:20:14"}],"functionName":{"name":"mstore","nativeSrc":"15087:6:14","nodeType":"YulIdentifier","src":"15087:6:14"},"nativeSrc":"15087:48:14","nodeType":"YulFunctionCall","src":"15087:48:14"},"nativeSrc":"15087:48:14","nodeType":"YulExpressionStatement","src":"15087:48:14"},{"nativeSrc":"15144:94:14","nodeType":"YulAssignment","src":"15144:94:14","value":{"arguments":[{"name":"value1","nativeSrc":"15216:6:14","nodeType":"YulIdentifier","src":"15216:6:14"},{"name":"value2","nativeSrc":"15224:6:14","nodeType":"YulIdentifier","src":"15224:6:14"},{"name":"tail","nativeSrc":"15233:4:14","nodeType":"YulIdentifier","src":"15233:4:14"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"15152:63:14","nodeType":"YulIdentifier","src":"15152:63:14"},"nativeSrc":"15152:86:14","nodeType":"YulFunctionCall","src":"15152:86:14"},"variableNames":[{"name":"tail","nativeSrc":"15144:4:14","nodeType":"YulIdentifier","src":"15144:4:14"}]}]},"name":"abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"14806:439:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14916:9:14","nodeType":"YulTypedName","src":"14916:9:14","type":""},{"name":"value2","nativeSrc":"14928:6:14","nodeType":"YulTypedName","src":"14928:6:14","type":""},{"name":"value1","nativeSrc":"14936:6:14","nodeType":"YulTypedName","src":"14936:6:14","type":""},{"name":"value0","nativeSrc":"14944:6:14","nodeType":"YulTypedName","src":"14944:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14955:4:14","nodeType":"YulTypedName","src":"14955:4:14","type":""}],"src":"14806:439:14"},{"body":{"nativeSrc":"15294:79:14","nodeType":"YulBlock","src":"15294:79:14","statements":[{"body":{"nativeSrc":"15351:16:14","nodeType":"YulBlock","src":"15351:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15360:1:14","nodeType":"YulLiteral","src":"15360:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"15363:1:14","nodeType":"YulLiteral","src":"15363:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"15353:6:14","nodeType":"YulIdentifier","src":"15353:6:14"},"nativeSrc":"15353:12:14","nodeType":"YulFunctionCall","src":"15353:12:14"},"nativeSrc":"15353:12:14","nodeType":"YulExpressionStatement","src":"15353:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"15317:5:14","nodeType":"YulIdentifier","src":"15317:5:14"},{"arguments":[{"name":"value","nativeSrc":"15342:5:14","nodeType":"YulIdentifier","src":"15342:5:14"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"15324:17:14","nodeType":"YulIdentifier","src":"15324:17:14"},"nativeSrc":"15324:24:14","nodeType":"YulFunctionCall","src":"15324:24:14"}],"functionName":{"name":"eq","nativeSrc":"15314:2:14","nodeType":"YulIdentifier","src":"15314:2:14"},"nativeSrc":"15314:35:14","nodeType":"YulFunctionCall","src":"15314:35:14"}],"functionName":{"name":"iszero","nativeSrc":"15307:6:14","nodeType":"YulIdentifier","src":"15307:6:14"},"nativeSrc":"15307:43:14","nodeType":"YulFunctionCall","src":"15307:43:14"},"nativeSrc":"15304:63:14","nodeType":"YulIf","src":"15304:63:14"}]},"name":"validator_revert_t_uint256","nativeSrc":"15251:122:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15287:5:14","nodeType":"YulTypedName","src":"15287:5:14","type":""}],"src":"15251:122:14"},{"body":{"nativeSrc":"15442:80:14","nodeType":"YulBlock","src":"15442:80:14","statements":[{"nativeSrc":"15452:22:14","nodeType":"YulAssignment","src":"15452:22:14","value":{"arguments":[{"name":"offset","nativeSrc":"15467:6:14","nodeType":"YulIdentifier","src":"15467:6:14"}],"functionName":{"name":"mload","nativeSrc":"15461:5:14","nodeType":"YulIdentifier","src":"15461:5:14"},"nativeSrc":"15461:13:14","nodeType":"YulFunctionCall","src":"15461:13:14"},"variableNames":[{"name":"value","nativeSrc":"15452:5:14","nodeType":"YulIdentifier","src":"15452:5:14"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"15510:5:14","nodeType":"YulIdentifier","src":"15510:5:14"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"15483:26:14","nodeType":"YulIdentifier","src":"15483:26:14"},"nativeSrc":"15483:33:14","nodeType":"YulFunctionCall","src":"15483:33:14"},"nativeSrc":"15483:33:14","nodeType":"YulExpressionStatement","src":"15483:33:14"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"15379:143:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"15420:6:14","nodeType":"YulTypedName","src":"15420:6:14","type":""},{"name":"end","nativeSrc":"15428:3:14","nodeType":"YulTypedName","src":"15428:3:14","type":""}],"returnVariables":[{"name":"value","nativeSrc":"15436:5:14","nodeType":"YulTypedName","src":"15436:5:14","type":""}],"src":"15379:143:14"},{"body":{"nativeSrc":"15605:274:14","nodeType":"YulBlock","src":"15605:274:14","statements":[{"body":{"nativeSrc":"15651:83:14","nodeType":"YulBlock","src":"15651:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"15653:77:14","nodeType":"YulIdentifier","src":"15653:77:14"},"nativeSrc":"15653:79:14","nodeType":"YulFunctionCall","src":"15653:79:14"},"nativeSrc":"15653:79:14","nodeType":"YulExpressionStatement","src":"15653:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"15626:7:14","nodeType":"YulIdentifier","src":"15626:7:14"},{"name":"headStart","nativeSrc":"15635:9:14","nodeType":"YulIdentifier","src":"15635:9:14"}],"functionName":{"name":"sub","nativeSrc":"15622:3:14","nodeType":"YulIdentifier","src":"15622:3:14"},"nativeSrc":"15622:23:14","nodeType":"YulFunctionCall","src":"15622:23:14"},{"kind":"number","nativeSrc":"15647:2:14","nodeType":"YulLiteral","src":"15647:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"15618:3:14","nodeType":"YulIdentifier","src":"15618:3:14"},"nativeSrc":"15618:32:14","nodeType":"YulFunctionCall","src":"15618:32:14"},"nativeSrc":"15615:119:14","nodeType":"YulIf","src":"15615:119:14"},{"nativeSrc":"15744:128:14","nodeType":"YulBlock","src":"15744:128:14","statements":[{"nativeSrc":"15759:15:14","nodeType":"YulVariableDeclaration","src":"15759:15:14","value":{"kind":"number","nativeSrc":"15773:1:14","nodeType":"YulLiteral","src":"15773:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"15763:6:14","nodeType":"YulTypedName","src":"15763:6:14","type":""}]},{"nativeSrc":"15788:74:14","nodeType":"YulAssignment","src":"15788:74:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15834:9:14","nodeType":"YulIdentifier","src":"15834:9:14"},{"name":"offset","nativeSrc":"15845:6:14","nodeType":"YulIdentifier","src":"15845:6:14"}],"functionName":{"name":"add","nativeSrc":"15830:3:14","nodeType":"YulIdentifier","src":"15830:3:14"},"nativeSrc":"15830:22:14","nodeType":"YulFunctionCall","src":"15830:22:14"},{"name":"dataEnd","nativeSrc":"15854:7:14","nodeType":"YulIdentifier","src":"15854:7:14"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"15798:31:14","nodeType":"YulIdentifier","src":"15798:31:14"},"nativeSrc":"15798:64:14","nodeType":"YulFunctionCall","src":"15798:64:14"},"variableNames":[{"name":"value0","nativeSrc":"15788:6:14","nodeType":"YulIdentifier","src":"15788:6:14"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"15528:351:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15575:9:14","nodeType":"YulTypedName","src":"15575:9:14","type":""},{"name":"dataEnd","nativeSrc":"15586:7:14","nodeType":"YulTypedName","src":"15586:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"15598:6:14","nodeType":"YulTypedName","src":"15598:6:14","type":""}],"src":"15528:351:14"},{"body":{"nativeSrc":"15926:126:14","nodeType":"YulBlock","src":"15926:126:14","statements":[{"nativeSrc":"15936:31:14","nodeType":"YulAssignment","src":"15936:31:14","value":{"arguments":[{"name":"value","nativeSrc":"15961:5:14","nodeType":"YulIdentifier","src":"15961:5:14"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"15945:15:14","nodeType":"YulIdentifier","src":"15945:15:14"},"nativeSrc":"15945:22:14","nodeType":"YulFunctionCall","src":"15945:22:14"},"variableNames":[{"name":"value","nativeSrc":"15936:5:14","nodeType":"YulIdentifier","src":"15936:5:14"}]},{"body":{"nativeSrc":"15995:22:14","nodeType":"YulBlock","src":"15995:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"15997:16:14","nodeType":"YulIdentifier","src":"15997:16:14"},"nativeSrc":"15997:18:14","nodeType":"YulFunctionCall","src":"15997:18:14"},"nativeSrc":"15997:18:14","nodeType":"YulExpressionStatement","src":"15997:18:14"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"15982:5:14","nodeType":"YulIdentifier","src":"15982:5:14"},{"kind":"number","nativeSrc":"15989:4:14","nodeType":"YulLiteral","src":"15989:4:14","type":"","value":"0xff"}],"functionName":{"name":"eq","nativeSrc":"15979:2:14","nodeType":"YulIdentifier","src":"15979:2:14"},"nativeSrc":"15979:15:14","nodeType":"YulFunctionCall","src":"15979:15:14"},"nativeSrc":"15976:41:14","nodeType":"YulIf","src":"15976:41:14"},{"nativeSrc":"16026:20:14","nodeType":"YulAssignment","src":"16026:20:14","value":{"arguments":[{"name":"value","nativeSrc":"16037:5:14","nodeType":"YulIdentifier","src":"16037:5:14"},{"kind":"number","nativeSrc":"16044:1:14","nodeType":"YulLiteral","src":"16044:1:14","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"16033:3:14","nodeType":"YulIdentifier","src":"16033:3:14"},"nativeSrc":"16033:13:14","nodeType":"YulFunctionCall","src":"16033:13:14"},"variableNames":[{"name":"ret","nativeSrc":"16026:3:14","nodeType":"YulIdentifier","src":"16026:3:14"}]}]},"name":"increment_t_uint8","nativeSrc":"15885:167:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15912:5:14","nodeType":"YulTypedName","src":"15912:5:14","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"15922:3:14","nodeType":"YulTypedName","src":"15922:3:14","type":""}],"src":"15885:167:14"},{"body":{"nativeSrc":"16164:119:14","nodeType":"YulBlock","src":"16164:119:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"16186:6:14","nodeType":"YulIdentifier","src":"16186:6:14"},{"kind":"number","nativeSrc":"16194:1:14","nodeType":"YulLiteral","src":"16194:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16182:3:14","nodeType":"YulIdentifier","src":"16182:3:14"},"nativeSrc":"16182:14:14","nodeType":"YulFunctionCall","src":"16182:14:14"},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f","kind":"string","nativeSrc":"16198:34:14","nodeType":"YulLiteral","src":"16198:34:14","type":"","value":"Address: delegate call to non-co"}],"functionName":{"name":"mstore","nativeSrc":"16175:6:14","nodeType":"YulIdentifier","src":"16175:6:14"},"nativeSrc":"16175:58:14","nodeType":"YulFunctionCall","src":"16175:58:14"},"nativeSrc":"16175:58:14","nodeType":"YulExpressionStatement","src":"16175:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"16254:6:14","nodeType":"YulIdentifier","src":"16254:6:14"},{"kind":"number","nativeSrc":"16262:2:14","nodeType":"YulLiteral","src":"16262:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16250:3:14","nodeType":"YulIdentifier","src":"16250:3:14"},"nativeSrc":"16250:15:14","nodeType":"YulFunctionCall","src":"16250:15:14"},{"hexValue":"6e7472616374","kind":"string","nativeSrc":"16267:8:14","nodeType":"YulLiteral","src":"16267:8:14","type":"","value":"ntract"}],"functionName":{"name":"mstore","nativeSrc":"16243:6:14","nodeType":"YulIdentifier","src":"16243:6:14"},"nativeSrc":"16243:33:14","nodeType":"YulFunctionCall","src":"16243:33:14"},"nativeSrc":"16243:33:14","nodeType":"YulExpressionStatement","src":"16243:33:14"}]},"name":"store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","nativeSrc":"16058:225:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"16156:6:14","nodeType":"YulTypedName","src":"16156:6:14","type":""}],"src":"16058:225:14"},{"body":{"nativeSrc":"16435:220:14","nodeType":"YulBlock","src":"16435:220:14","statements":[{"nativeSrc":"16445:74:14","nodeType":"YulAssignment","src":"16445:74:14","value":{"arguments":[{"name":"pos","nativeSrc":"16511:3:14","nodeType":"YulIdentifier","src":"16511:3:14"},{"kind":"number","nativeSrc":"16516:2:14","nodeType":"YulLiteral","src":"16516:2:14","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"16452:58:14","nodeType":"YulIdentifier","src":"16452:58:14"},"nativeSrc":"16452:67:14","nodeType":"YulFunctionCall","src":"16452:67:14"},"variableNames":[{"name":"pos","nativeSrc":"16445:3:14","nodeType":"YulIdentifier","src":"16445:3:14"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"16617:3:14","nodeType":"YulIdentifier","src":"16617:3:14"}],"functionName":{"name":"store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","nativeSrc":"16528:88:14","nodeType":"YulIdentifier","src":"16528:88:14"},"nativeSrc":"16528:93:14","nodeType":"YulFunctionCall","src":"16528:93:14"},"nativeSrc":"16528:93:14","nodeType":"YulExpressionStatement","src":"16528:93:14"},{"nativeSrc":"16630:19:14","nodeType":"YulAssignment","src":"16630:19:14","value":{"arguments":[{"name":"pos","nativeSrc":"16641:3:14","nodeType":"YulIdentifier","src":"16641:3:14"},{"kind":"number","nativeSrc":"16646:2:14","nodeType":"YulLiteral","src":"16646:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16637:3:14","nodeType":"YulIdentifier","src":"16637:3:14"},"nativeSrc":"16637:12:14","nodeType":"YulFunctionCall","src":"16637:12:14"},"variableNames":[{"name":"end","nativeSrc":"16630:3:14","nodeType":"YulIdentifier","src":"16630:3:14"}]}]},"name":"abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack","nativeSrc":"16289:366:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"16423:3:14","nodeType":"YulTypedName","src":"16423:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"16431:3:14","nodeType":"YulTypedName","src":"16431:3:14","type":""}],"src":"16289:366:14"},{"body":{"nativeSrc":"16832:248:14","nodeType":"YulBlock","src":"16832:248:14","statements":[{"nativeSrc":"16842:26:14","nodeType":"YulAssignment","src":"16842:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"16854:9:14","nodeType":"YulIdentifier","src":"16854:9:14"},{"kind":"number","nativeSrc":"16865:2:14","nodeType":"YulLiteral","src":"16865:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16850:3:14","nodeType":"YulIdentifier","src":"16850:3:14"},"nativeSrc":"16850:18:14","nodeType":"YulFunctionCall","src":"16850:18:14"},"variableNames":[{"name":"tail","nativeSrc":"16842:4:14","nodeType":"YulIdentifier","src":"16842:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16889:9:14","nodeType":"YulIdentifier","src":"16889:9:14"},{"kind":"number","nativeSrc":"16900:1:14","nodeType":"YulLiteral","src":"16900:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16885:3:14","nodeType":"YulIdentifier","src":"16885:3:14"},"nativeSrc":"16885:17:14","nodeType":"YulFunctionCall","src":"16885:17:14"},{"arguments":[{"name":"tail","nativeSrc":"16908:4:14","nodeType":"YulIdentifier","src":"16908:4:14"},{"name":"headStart","nativeSrc":"16914:9:14","nodeType":"YulIdentifier","src":"16914:9:14"}],"functionName":{"name":"sub","nativeSrc":"16904:3:14","nodeType":"YulIdentifier","src":"16904:3:14"},"nativeSrc":"16904:20:14","nodeType":"YulFunctionCall","src":"16904:20:14"}],"functionName":{"name":"mstore","nativeSrc":"16878:6:14","nodeType":"YulIdentifier","src":"16878:6:14"},"nativeSrc":"16878:47:14","nodeType":"YulFunctionCall","src":"16878:47:14"},"nativeSrc":"16878:47:14","nodeType":"YulExpressionStatement","src":"16878:47:14"},{"nativeSrc":"16934:139:14","nodeType":"YulAssignment","src":"16934:139:14","value":{"arguments":[{"name":"tail","nativeSrc":"17068:4:14","nodeType":"YulIdentifier","src":"17068:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack","nativeSrc":"16942:124:14","nodeType":"YulIdentifier","src":"16942:124:14"},"nativeSrc":"16942:131:14","nodeType":"YulFunctionCall","src":"16942:131:14"},"variableNames":[{"name":"tail","nativeSrc":"16934:4:14","nodeType":"YulIdentifier","src":"16934:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"16661:419:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16812:9:14","nodeType":"YulTypedName","src":"16812:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16827:4:14","nodeType":"YulTypedName","src":"16827:4:14","type":""}],"src":"16661:419:14"},{"body":{"nativeSrc":"17144:40:14","nodeType":"YulBlock","src":"17144:40:14","statements":[{"nativeSrc":"17155:22:14","nodeType":"YulAssignment","src":"17155:22:14","value":{"arguments":[{"name":"value","nativeSrc":"17171:5:14","nodeType":"YulIdentifier","src":"17171:5:14"}],"functionName":{"name":"mload","nativeSrc":"17165:5:14","nodeType":"YulIdentifier","src":"17165:5:14"},"nativeSrc":"17165:12:14","nodeType":"YulFunctionCall","src":"17165:12:14"},"variableNames":[{"name":"length","nativeSrc":"17155:6:14","nodeType":"YulIdentifier","src":"17155:6:14"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"17086:98:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"17127:5:14","nodeType":"YulTypedName","src":"17127:5:14","type":""}],"returnVariables":[{"name":"length","nativeSrc":"17137:6:14","nodeType":"YulTypedName","src":"17137:6:14","type":""}],"src":"17086:98:14"},{"body":{"nativeSrc":"17303:34:14","nodeType":"YulBlock","src":"17303:34:14","statements":[{"nativeSrc":"17313:18:14","nodeType":"YulAssignment","src":"17313:18:14","value":{"name":"pos","nativeSrc":"17328:3:14","nodeType":"YulIdentifier","src":"17328:3:14"},"variableNames":[{"name":"updated_pos","nativeSrc":"17313:11:14","nodeType":"YulIdentifier","src":"17313:11:14"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"17190:147:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"17275:3:14","nodeType":"YulTypedName","src":"17275:3:14","type":""},{"name":"length","nativeSrc":"17280:6:14","nodeType":"YulTypedName","src":"17280:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"17291:11:14","nodeType":"YulTypedName","src":"17291:11:14","type":""}],"src":"17190:147:14"},{"body":{"nativeSrc":"17405:184:14","nodeType":"YulBlock","src":"17405:184:14","statements":[{"nativeSrc":"17415:10:14","nodeType":"YulVariableDeclaration","src":"17415:10:14","value":{"kind":"number","nativeSrc":"17424:1:14","nodeType":"YulLiteral","src":"17424:1:14","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"17419:1:14","nodeType":"YulTypedName","src":"17419:1:14","type":""}]},{"body":{"nativeSrc":"17484:63:14","nodeType":"YulBlock","src":"17484:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"17509:3:14","nodeType":"YulIdentifier","src":"17509:3:14"},{"name":"i","nativeSrc":"17514:1:14","nodeType":"YulIdentifier","src":"17514:1:14"}],"functionName":{"name":"add","nativeSrc":"17505:3:14","nodeType":"YulIdentifier","src":"17505:3:14"},"nativeSrc":"17505:11:14","nodeType":"YulFunctionCall","src":"17505:11:14"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"17528:3:14","nodeType":"YulIdentifier","src":"17528:3:14"},{"name":"i","nativeSrc":"17533:1:14","nodeType":"YulIdentifier","src":"17533:1:14"}],"functionName":{"name":"add","nativeSrc":"17524:3:14","nodeType":"YulIdentifier","src":"17524:3:14"},"nativeSrc":"17524:11:14","nodeType":"YulFunctionCall","src":"17524:11:14"}],"functionName":{"name":"mload","nativeSrc":"17518:5:14","nodeType":"YulIdentifier","src":"17518:5:14"},"nativeSrc":"17518:18:14","nodeType":"YulFunctionCall","src":"17518:18:14"}],"functionName":{"name":"mstore","nativeSrc":"17498:6:14","nodeType":"YulIdentifier","src":"17498:6:14"},"nativeSrc":"17498:39:14","nodeType":"YulFunctionCall","src":"17498:39:14"},"nativeSrc":"17498:39:14","nodeType":"YulExpressionStatement","src":"17498:39:14"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"17445:1:14","nodeType":"YulIdentifier","src":"17445:1:14"},{"name":"length","nativeSrc":"17448:6:14","nodeType":"YulIdentifier","src":"17448:6:14"}],"functionName":{"name":"lt","nativeSrc":"17442:2:14","nodeType":"YulIdentifier","src":"17442:2:14"},"nativeSrc":"17442:13:14","nodeType":"YulFunctionCall","src":"17442:13:14"},"nativeSrc":"17434:113:14","nodeType":"YulForLoop","post":{"nativeSrc":"17456:19:14","nodeType":"YulBlock","src":"17456:19:14","statements":[{"nativeSrc":"17458:15:14","nodeType":"YulAssignment","src":"17458:15:14","value":{"arguments":[{"name":"i","nativeSrc":"17467:1:14","nodeType":"YulIdentifier","src":"17467:1:14"},{"kind":"number","nativeSrc":"17470:2:14","nodeType":"YulLiteral","src":"17470:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17463:3:14","nodeType":"YulIdentifier","src":"17463:3:14"},"nativeSrc":"17463:10:14","nodeType":"YulFunctionCall","src":"17463:10:14"},"variableNames":[{"name":"i","nativeSrc":"17458:1:14","nodeType":"YulIdentifier","src":"17458:1:14"}]}]},"pre":{"nativeSrc":"17438:3:14","nodeType":"YulBlock","src":"17438:3:14","statements":[]},"src":"17434:113:14"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"17567:3:14","nodeType":"YulIdentifier","src":"17567:3:14"},{"name":"length","nativeSrc":"17572:6:14","nodeType":"YulIdentifier","src":"17572:6:14"}],"functionName":{"name":"add","nativeSrc":"17563:3:14","nodeType":"YulIdentifier","src":"17563:3:14"},"nativeSrc":"17563:16:14","nodeType":"YulFunctionCall","src":"17563:16:14"},{"kind":"number","nativeSrc":"17581:1:14","nodeType":"YulLiteral","src":"17581:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"17556:6:14","nodeType":"YulIdentifier","src":"17556:6:14"},"nativeSrc":"17556:27:14","nodeType":"YulFunctionCall","src":"17556:27:14"},"nativeSrc":"17556:27:14","nodeType":"YulExpressionStatement","src":"17556:27:14"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"17343:246:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"17387:3:14","nodeType":"YulTypedName","src":"17387:3:14","type":""},{"name":"dst","nativeSrc":"17392:3:14","nodeType":"YulTypedName","src":"17392:3:14","type":""},{"name":"length","nativeSrc":"17397:6:14","nodeType":"YulTypedName","src":"17397:6:14","type":""}],"src":"17343:246:14"},{"body":{"nativeSrc":"17703:278:14","nodeType":"YulBlock","src":"17703:278:14","statements":[{"nativeSrc":"17713:52:14","nodeType":"YulVariableDeclaration","src":"17713:52:14","value":{"arguments":[{"name":"value","nativeSrc":"17759:5:14","nodeType":"YulIdentifier","src":"17759:5:14"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"17727:31:14","nodeType":"YulIdentifier","src":"17727:31:14"},"nativeSrc":"17727:38:14","nodeType":"YulFunctionCall","src":"17727:38:14"},"variables":[{"name":"length","nativeSrc":"17717:6:14","nodeType":"YulTypedName","src":"17717:6:14","type":""}]},{"nativeSrc":"17774:95:14","nodeType":"YulAssignment","src":"17774:95:14","value":{"arguments":[{"name":"pos","nativeSrc":"17857:3:14","nodeType":"YulIdentifier","src":"17857:3:14"},{"name":"length","nativeSrc":"17862:6:14","nodeType":"YulIdentifier","src":"17862:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"17781:75:14","nodeType":"YulIdentifier","src":"17781:75:14"},"nativeSrc":"17781:88:14","nodeType":"YulFunctionCall","src":"17781:88:14"},"variableNames":[{"name":"pos","nativeSrc":"17774:3:14","nodeType":"YulIdentifier","src":"17774:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"17917:5:14","nodeType":"YulIdentifier","src":"17917:5:14"},{"kind":"number","nativeSrc":"17924:4:14","nodeType":"YulLiteral","src":"17924:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17913:3:14","nodeType":"YulIdentifier","src":"17913:3:14"},"nativeSrc":"17913:16:14","nodeType":"YulFunctionCall","src":"17913:16:14"},{"name":"pos","nativeSrc":"17931:3:14","nodeType":"YulIdentifier","src":"17931:3:14"},{"name":"length","nativeSrc":"17936:6:14","nodeType":"YulIdentifier","src":"17936:6:14"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"17878:34:14","nodeType":"YulIdentifier","src":"17878:34:14"},"nativeSrc":"17878:65:14","nodeType":"YulFunctionCall","src":"17878:65:14"},"nativeSrc":"17878:65:14","nodeType":"YulExpressionStatement","src":"17878:65:14"},{"nativeSrc":"17952:23:14","nodeType":"YulAssignment","src":"17952:23:14","value":{"arguments":[{"name":"pos","nativeSrc":"17963:3:14","nodeType":"YulIdentifier","src":"17963:3:14"},{"name":"length","nativeSrc":"17968:6:14","nodeType":"YulIdentifier","src":"17968:6:14"}],"functionName":{"name":"add","nativeSrc":"17959:3:14","nodeType":"YulIdentifier","src":"17959:3:14"},"nativeSrc":"17959:16:14","nodeType":"YulFunctionCall","src":"17959:16:14"},"variableNames":[{"name":"end","nativeSrc":"17952:3:14","nodeType":"YulIdentifier","src":"17952:3:14"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"17595:386:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"17684:5:14","nodeType":"YulTypedName","src":"17684:5:14","type":""},{"name":"pos","nativeSrc":"17691:3:14","nodeType":"YulTypedName","src":"17691:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"17699:3:14","nodeType":"YulTypedName","src":"17699:3:14","type":""}],"src":"17595:386:14"},{"body":{"nativeSrc":"18121:137:14","nodeType":"YulBlock","src":"18121:137:14","statements":[{"nativeSrc":"18132:100:14","nodeType":"YulAssignment","src":"18132:100:14","value":{"arguments":[{"name":"value0","nativeSrc":"18219:6:14","nodeType":"YulIdentifier","src":"18219:6:14"},{"name":"pos","nativeSrc":"18228:3:14","nodeType":"YulIdentifier","src":"18228:3:14"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"18139:79:14","nodeType":"YulIdentifier","src":"18139:79:14"},"nativeSrc":"18139:93:14","nodeType":"YulFunctionCall","src":"18139:93:14"},"variableNames":[{"name":"pos","nativeSrc":"18132:3:14","nodeType":"YulIdentifier","src":"18132:3:14"}]},{"nativeSrc":"18242:10:14","nodeType":"YulAssignment","src":"18242:10:14","value":{"name":"pos","nativeSrc":"18249:3:14","nodeType":"YulIdentifier","src":"18249:3:14"},"variableNames":[{"name":"end","nativeSrc":"18242:3:14","nodeType":"YulIdentifier","src":"18242:3:14"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"17987:271:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"18100:3:14","nodeType":"YulTypedName","src":"18100:3:14","type":""},{"name":"value0","nativeSrc":"18106:6:14","nodeType":"YulTypedName","src":"18106:6:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"18117:3:14","nodeType":"YulTypedName","src":"18117:3:14","type":""}],"src":"17987:271:14"},{"body":{"nativeSrc":"18323:40:14","nodeType":"YulBlock","src":"18323:40:14","statements":[{"nativeSrc":"18334:22:14","nodeType":"YulAssignment","src":"18334:22:14","value":{"arguments":[{"name":"value","nativeSrc":"18350:5:14","nodeType":"YulIdentifier","src":"18350:5:14"}],"functionName":{"name":"mload","nativeSrc":"18344:5:14","nodeType":"YulIdentifier","src":"18344:5:14"},"nativeSrc":"18344:12:14","nodeType":"YulFunctionCall","src":"18344:12:14"},"variableNames":[{"name":"length","nativeSrc":"18334:6:14","nodeType":"YulIdentifier","src":"18334:6:14"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"18264:99:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18306:5:14","nodeType":"YulTypedName","src":"18306:5:14","type":""}],"returnVariables":[{"name":"length","nativeSrc":"18316:6:14","nodeType":"YulTypedName","src":"18316:6:14","type":""}],"src":"18264:99:14"},{"body":{"nativeSrc":"18461:285:14","nodeType":"YulBlock","src":"18461:285:14","statements":[{"nativeSrc":"18471:53:14","nodeType":"YulVariableDeclaration","src":"18471:53:14","value":{"arguments":[{"name":"value","nativeSrc":"18518:5:14","nodeType":"YulIdentifier","src":"18518:5:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"18485:32:14","nodeType":"YulIdentifier","src":"18485:32:14"},"nativeSrc":"18485:39:14","nodeType":"YulFunctionCall","src":"18485:39:14"},"variables":[{"name":"length","nativeSrc":"18475:6:14","nodeType":"YulTypedName","src":"18475:6:14","type":""}]},{"nativeSrc":"18533:78:14","nodeType":"YulAssignment","src":"18533:78:14","value":{"arguments":[{"name":"pos","nativeSrc":"18599:3:14","nodeType":"YulIdentifier","src":"18599:3:14"},{"name":"length","nativeSrc":"18604:6:14","nodeType":"YulIdentifier","src":"18604:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"18540:58:14","nodeType":"YulIdentifier","src":"18540:58:14"},"nativeSrc":"18540:71:14","nodeType":"YulFunctionCall","src":"18540:71:14"},"variableNames":[{"name":"pos","nativeSrc":"18533:3:14","nodeType":"YulIdentifier","src":"18533:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"18659:5:14","nodeType":"YulIdentifier","src":"18659:5:14"},{"kind":"number","nativeSrc":"18666:4:14","nodeType":"YulLiteral","src":"18666:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18655:3:14","nodeType":"YulIdentifier","src":"18655:3:14"},"nativeSrc":"18655:16:14","nodeType":"YulFunctionCall","src":"18655:16:14"},{"name":"pos","nativeSrc":"18673:3:14","nodeType":"YulIdentifier","src":"18673:3:14"},{"name":"length","nativeSrc":"18678:6:14","nodeType":"YulIdentifier","src":"18678:6:14"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"18620:34:14","nodeType":"YulIdentifier","src":"18620:34:14"},"nativeSrc":"18620:65:14","nodeType":"YulFunctionCall","src":"18620:65:14"},"nativeSrc":"18620:65:14","nodeType":"YulExpressionStatement","src":"18620:65:14"},{"nativeSrc":"18694:46:14","nodeType":"YulAssignment","src":"18694:46:14","value":{"arguments":[{"name":"pos","nativeSrc":"18705:3:14","nodeType":"YulIdentifier","src":"18705:3:14"},{"arguments":[{"name":"length","nativeSrc":"18732:6:14","nodeType":"YulIdentifier","src":"18732:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"18710:21:14","nodeType":"YulIdentifier","src":"18710:21:14"},"nativeSrc":"18710:29:14","nodeType":"YulFunctionCall","src":"18710:29:14"}],"functionName":{"name":"add","nativeSrc":"18701:3:14","nodeType":"YulIdentifier","src":"18701:3:14"},"nativeSrc":"18701:39:14","nodeType":"YulFunctionCall","src":"18701:39:14"},"variableNames":[{"name":"end","nativeSrc":"18694:3:14","nodeType":"YulIdentifier","src":"18694:3:14"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"18369:377:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18442:5:14","nodeType":"YulTypedName","src":"18442:5:14","type":""},{"name":"pos","nativeSrc":"18449:3:14","nodeType":"YulTypedName","src":"18449:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"18457:3:14","nodeType":"YulTypedName","src":"18457:3:14","type":""}],"src":"18369:377:14"},{"body":{"nativeSrc":"18870:195:14","nodeType":"YulBlock","src":"18870:195:14","statements":[{"nativeSrc":"18880:26:14","nodeType":"YulAssignment","src":"18880:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"18892:9:14","nodeType":"YulIdentifier","src":"18892:9:14"},{"kind":"number","nativeSrc":"18903:2:14","nodeType":"YulLiteral","src":"18903:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18888:3:14","nodeType":"YulIdentifier","src":"18888:3:14"},"nativeSrc":"18888:18:14","nodeType":"YulFunctionCall","src":"18888:18:14"},"variableNames":[{"name":"tail","nativeSrc":"18880:4:14","nodeType":"YulIdentifier","src":"18880:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18927:9:14","nodeType":"YulIdentifier","src":"18927:9:14"},{"kind":"number","nativeSrc":"18938:1:14","nodeType":"YulLiteral","src":"18938:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18923:3:14","nodeType":"YulIdentifier","src":"18923:3:14"},"nativeSrc":"18923:17:14","nodeType":"YulFunctionCall","src":"18923:17:14"},{"arguments":[{"name":"tail","nativeSrc":"18946:4:14","nodeType":"YulIdentifier","src":"18946:4:14"},{"name":"headStart","nativeSrc":"18952:9:14","nodeType":"YulIdentifier","src":"18952:9:14"}],"functionName":{"name":"sub","nativeSrc":"18942:3:14","nodeType":"YulIdentifier","src":"18942:3:14"},"nativeSrc":"18942:20:14","nodeType":"YulFunctionCall","src":"18942:20:14"}],"functionName":{"name":"mstore","nativeSrc":"18916:6:14","nodeType":"YulIdentifier","src":"18916:6:14"},"nativeSrc":"18916:47:14","nodeType":"YulFunctionCall","src":"18916:47:14"},"nativeSrc":"18916:47:14","nodeType":"YulExpressionStatement","src":"18916:47:14"},{"nativeSrc":"18972:86:14","nodeType":"YulAssignment","src":"18972:86:14","value":{"arguments":[{"name":"value0","nativeSrc":"19044:6:14","nodeType":"YulIdentifier","src":"19044:6:14"},{"name":"tail","nativeSrc":"19053:4:14","nodeType":"YulIdentifier","src":"19053:4:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"18980:63:14","nodeType":"YulIdentifier","src":"18980:63:14"},"nativeSrc":"18980:78:14","nodeType":"YulFunctionCall","src":"18980:78:14"},"variableNames":[{"name":"tail","nativeSrc":"18972:4:14","nodeType":"YulIdentifier","src":"18972:4:14"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18752:313:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18842:9:14","nodeType":"YulTypedName","src":"18842:9:14","type":""},{"name":"value0","nativeSrc":"18854:6:14","nodeType":"YulTypedName","src":"18854:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18865:4:14","nodeType":"YulTypedName","src":"18865:4:14","type":""}],"src":"18752:313:14"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // struct SwapMultiHop[]\n    function abi_decode_t_array$_t_struct$_SwapMultiHop_$5261_calldata_ptr_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_SwapMultiHop_$5261_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_struct$_SwapMultiHop_$5261_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IDexHandlerFactory_$4534_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IDexHandlerFactory_$4534_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IDexHandlerFactory_$4534_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IDexHandlerFactory_$4534__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IDexHandlerFactory_$4534_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct SwapMultiHop\n    function abi_decode_t_struct$_SwapMultiHop_$5261_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 160) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function abi_decode_tuple_t_struct$_SwapMultiHop_$5261_calldata_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_SwapMultiHop_$5261_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() {\n        revert(0, 0)\n    }\n\n    function revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() {\n        revert(0, 0)\n    }\n\n    function revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() {\n        revert(0, 0)\n    }\n\n    function access_calldata_tail_t_struct$_SwapMultiHop_$5261_calldata_ptr(base_ref, ptr_to_tail) -> addr {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0xa0, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_46f23f0df13d0e943c450e2a9aba8f479be58f4951eb3d14222cd3501b7ab991(memPtr) {\n\n        mstore(add(memPtr, 0), \"The amount for swap is zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_46f23f0df13d0e943c450e2a9aba8f479be58f4951eb3d14222cd3501b7ab991_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_46f23f0df13d0e943c450e2a9aba8f479be58f4951eb3d14222cd3501b7ab991(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_46f23f0df13d0e943c450e2a9aba8f479be58f4951eb3d14222cd3501b7ab991__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_46f23f0df13d0e943c450e2a9aba8f479be58f4951eb3d14222cd3501b7ab991_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function access_calldata_tail_t_array$_t_address_$dyn_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x20))) { revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function access_calldata_tail_t_array$_t_uint8_$dyn_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x20))) { revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function access_calldata_tail_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x20))) { revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() }\n\n    }\n\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x01))) { revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes_calldata_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value1, value2,  tail)\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function increment_t_uint8(value) -> ret {\n        value := cleanup_t_uint8(value)\n        if eq(value, 0xff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: delegate call to non-co\")\n\n        mstore(add(memPtr, 32), \"ntract\")\n\n    }\n\n    function abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"4251":[{"length":32,"start":478}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x11EAC87A EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xD4A3F3C7 EQ PUSH2 0x118 JUMPI PUSH2 0x55 JUMP JUMPDEST CALLDATASIZE PUSH2 0x55 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x868 JUMP JUMPDEST PUSH2 0x155 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAC PUSH2 0x1B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB9 SWAP2 SWAP1 PUSH2 0x92A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD7 PUSH2 0x1DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x92A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x9A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0x224 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x1AF JUMPI PUSH2 0x195 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x17E JUMPI PUSH2 0x17D PUSH2 0xA2C JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x190 SWAP2 SWAP1 PUSH2 0xA6A JUMP JUMPDEST PUSH2 0x224 JUMP JUMPDEST DUP3 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0xAC1 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x15D JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x60 ADD CALLDATALOAD SUB PUSH2 0x26C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x263 SWAP1 PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP1 PUSH1 0x40 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x291 JUMPI PUSH2 0x290 PUSH2 0xA2C JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x60 ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC2E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x305 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x329 SWAP2 SWAP1 PUSH2 0xC9D JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP5 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x33D SWAP2 SWAP1 PUSH2 0xB72 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x66D JUMPI PUSH1 0x0 DUP6 DUP1 PUSH1 0x40 ADD SWAP1 PUSH2 0x35B SWAP2 SWAP1 PUSH2 0xB72 JUMP JUMPDEST DUP4 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0x36F JUMPI PUSH2 0x36E PUSH2 0xA2C JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x384 SWAP2 SWAP1 PUSH2 0xC01 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4FA29352 DUP8 DUP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0xCCA JUMP JUMPDEST DUP6 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0x3E6 JUMPI PUSH2 0x3E5 PUSH2 0xA2C JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0xD66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x417 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x434 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x458 SWAP2 SWAP1 PUSH2 0xDD2 JUMP JUMPDEST SWAP4 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP8 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x486 SWAP2 SWAP1 PUSH2 0xB72 JUMP JUMPDEST DUP6 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0x49A JUMPI PUSH2 0x499 PUSH2 0xA2C JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4AF SWAP2 SWAP1 PUSH2 0xC01 JUMP JUMPDEST DUP9 PUSH1 0x60 ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D1 SWAP3 SWAP2 SWAP1 PUSH2 0xDFF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x514 SWAP2 SWAP1 PUSH2 0xC9D JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x63D DUP8 DUP1 PUSH1 0x0 ADD SWAP1 PUSH2 0x52A SWAP2 SWAP1 PUSH2 0xB72 JUMP JUMPDEST DUP6 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0x53E JUMPI PUSH2 0x53D PUSH2 0xA2C JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x553 SWAP2 SWAP1 PUSH2 0xC01 JUMP JUMPDEST DUP9 DUP1 PUSH1 0x80 ADD SWAP1 PUSH2 0x563 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST DUP7 PUSH1 0xFF AND DUP2 DUP2 LT PUSH2 0x577 JUMPI PUSH2 0x576 PUSH2 0xA2C JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x589 SWAP2 SWAP1 PUSH2 0xE8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x59B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x3F7C80F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x675 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x653 SWAP2 SWAP1 PUSH2 0xFAA JUMP JUMPDEST SWAP6 POP DUP6 SWAP4 POP POP POP DUP1 DUP1 PUSH2 0x665 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x32D JUMP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x69A DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1181 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x6A2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6AD DUP5 PUSH2 0x76F JUMP JUMPDEST PUSH2 0x6EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E3 SWAP1 PUSH2 0x1072 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x714 SWAP2 SWAP1 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x74F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x754 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x764 DUP3 DUP3 DUP7 PUSH2 0x792 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x7A2 JUMPI DUP3 SWAP1 POP PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x7B5 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x828 JUMPI PUSH2 0x827 PUSH2 0x803 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x845 JUMPI PUSH2 0x844 PUSH2 0x808 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x861 JUMPI PUSH2 0x860 PUSH2 0x80D JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x87F JUMPI PUSH2 0x87E PUSH2 0x7F9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x89D JUMPI PUSH2 0x89C PUSH2 0x7FE JUMP JUMPDEST JUMPDEST PUSH2 0x8A9 DUP6 DUP3 DUP7 ADD PUSH2 0x812 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C8 DUP2 PUSH2 0x8B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8E3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x914 DUP3 PUSH2 0x8E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x924 DUP2 PUSH2 0x909 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x93F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x91B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x96A PUSH2 0x965 PUSH2 0x960 DUP5 PUSH2 0x8E9 JUMP JUMPDEST PUSH2 0x945 JUMP JUMPDEST PUSH2 0x8E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x97C DUP3 PUSH2 0x94F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98E DUP3 PUSH2 0x971 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x99E DUP2 PUSH2 0x983 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9B9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x995 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9DA JUMPI PUSH2 0x9D9 PUSH2 0x9BF JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F9 JUMPI PUSH2 0x9F8 PUSH2 0x7F9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA17 JUMPI PUSH2 0xA16 PUSH2 0x7FE JUMP JUMPDEST JUMPDEST PUSH2 0xA23 DUP5 DUP3 DUP6 ADD PUSH2 0x9C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 SUB DUP4 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0xA86 JUMPI PUSH2 0xA85 PUSH2 0xA5B JUMP JUMPDEST JUMPDEST DUP1 DUP4 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xACC DUP3 PUSH2 0x8B5 JUMP JUMPDEST SWAP2 POP PUSH2 0xAD7 DUP4 PUSH2 0x8B5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xAEF JUMPI PUSH2 0xAEE PUSH2 0xA92 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54686520616D6F756E7420666F722073776170206973207A65726F0000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3C PUSH1 0x1B DUP4 PUSH2 0xAF5 JUMP JUMPDEST SWAP2 POP PUSH2 0xB47 DUP3 PUSH2 0xB06 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB6B DUP2 PUSH2 0xB2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0xB8F JUMPI PUSH2 0xB8E PUSH2 0xA5B JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xBB1 JUMPI PUSH2 0xBB0 PUSH2 0xA60 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x20 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0xBCD JUMPI PUSH2 0xBCC PUSH2 0xA65 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBDE DUP2 PUSH2 0x909 JUMP JUMPDEST DUP2 EQ PUSH2 0xBE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBFB DUP2 PUSH2 0xBD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC17 JUMPI PUSH2 0xC16 PUSH2 0x7F9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC25 DUP5 DUP3 DUP6 ADD PUSH2 0xBEC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xC43 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x91B JUMP JUMPDEST PUSH2 0xC50 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x91B JUMP JUMPDEST PUSH2 0xC5D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x8BF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC7A DUP2 PUSH2 0xC65 JUMP JUMPDEST DUP2 EQ PUSH2 0xC85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC97 DUP2 PUSH2 0xC71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB3 JUMPI PUSH2 0xCB2 PUSH2 0x7F9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCC1 DUP5 DUP3 DUP6 ADD PUSH2 0xC88 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0xCE7 JUMPI PUSH2 0xCE6 PUSH2 0xA5B JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD09 JUMPI PUSH2 0xD08 PUSH2 0xA60 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x20 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0xD25 JUMPI PUSH2 0xD24 PUSH2 0xA65 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD43 DUP2 PUSH2 0xD2D JUMP JUMPDEST DUP2 EQ PUSH2 0xD4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD60 DUP2 PUSH2 0xD3A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD7C JUMPI PUSH2 0xD7B PUSH2 0x7F9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD8A DUP5 DUP3 DUP6 ADD PUSH2 0xD51 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD9C DUP2 PUSH2 0xD2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xDCC DUP2 PUSH2 0xBD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE8 JUMPI PUSH2 0xDE7 PUSH2 0x7F9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDF6 DUP5 DUP3 DUP6 ADD PUSH2 0xDBD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xE14 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x91B JUMP JUMPDEST PUSH2 0xE21 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0xE45 JUMPI PUSH2 0xE44 PUSH2 0xA5B JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE67 JUMPI PUSH2 0xE66 PUSH2 0xA60 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x20 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0xE83 JUMPI PUSH2 0xE82 PUSH2 0xA65 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0xEA8 JUMPI PUSH2 0xEA7 PUSH2 0xA5B JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xECA JUMPI PUSH2 0xEC9 PUSH2 0xA60 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0xEE6 JUMPI PUSH2 0xEE5 PUSH2 0xA65 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF2B DUP4 DUP6 PUSH2 0xEEE JUMP JUMPDEST SWAP4 POP PUSH2 0xF38 DUP4 DUP6 DUP5 PUSH2 0xEFF JUMP JUMPDEST PUSH2 0xF41 DUP4 PUSH2 0xF0E JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF61 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x91B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xF74 DUP2 DUP5 DUP7 PUSH2 0xF1F JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xF87 DUP2 PUSH2 0x8B5 JUMP JUMPDEST DUP2 EQ PUSH2 0xF92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xFA4 DUP2 PUSH2 0xF7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC0 JUMPI PUSH2 0xFBF PUSH2 0x7F9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFCE DUP5 DUP3 DUP6 ADD PUSH2 0xF95 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE2 DUP3 PUSH2 0xD2D JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH2 0xFF5 JUMPI PUSH2 0xFF4 PUSH2 0xA92 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E74726163740000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105C PUSH1 0x26 DUP4 PUSH2 0xAF5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1067 DUP3 PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x108B DUP2 PUSH2 0x104F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10C6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x10AB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10DD DUP3 PUSH2 0x1092 JUMP JUMPDEST PUSH2 0x10E7 DUP2 DUP6 PUSH2 0x109D JUMP JUMPDEST SWAP4 POP PUSH2 0x10F7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x10A8 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x110F DUP3 DUP5 PUSH2 0x10D2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1130 DUP3 PUSH2 0x111A JUMP JUMPDEST PUSH2 0x113A DUP2 DUP6 PUSH2 0xAF5 JUMP JUMPDEST SWAP4 POP PUSH2 0x114A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x10A8 JUMP JUMPDEST PUSH2 0x1153 DUP2 PUSH2 0xF0E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1178 DUP2 DUP5 PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x7066735822122061F992 0xE9 RETURN DELEGATECALL 0xC 0xAD 0xEF 0x4B 0xF7 MCOPY 0xC2 DUP15 0xBE 0xD0 PUSH2 0xF113 ISZERO PUSH31 0x797A6B70DBA605F3F0DC7864736F6C63430008180033000000000000000000 ","sourceMap":"441:2701:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2896:233;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;575:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;604:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;535:33;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1660:1228;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2896:233;2985:17;3020:9;3032:1;3020:13;;3015:107;3039:6;;:13;;3035:1;:17;3015:107;;;3087:23;3100:6;;3107:1;3100:9;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;3087:12;:23::i;:::-;3074:36;;;;;:::i;:::-;;;3054:3;;;;;;;3015:107;;;;2896:233;;;;:::o;575:20::-;;;;;;;;;;;;;:::o;604:29::-;;;:::o;535:33::-;;;;;;;;;;;;:::o;1660:1228::-;1743:17;1800:1;1781:6;:15;;;:20;1773:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;1844:18;1873:16;1909:6;:14;;;;;;;;:::i;:::-;1924:1;1909:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;1902:38;;;1941:10;1961:4;1968:6;:15;;;1902:82;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2002:7;1997:884;2019:6;:14;;;;;;;;:::i;:::-;:21;;2015:1;:25;;;1997:884;;;2062:16;2081:6;:14;;;;;;;;:::i;:::-;2096:1;2081:17;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;2062:36;;2182:7;;;;;;;;;;:19;;;2202:6;:20;;;;;;;;:::i;:::-;2223:1;2202:23;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;2182:44;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2169:57;;2248:8;2241:24;;;2266:6;:14;;;;;;;;:::i;:::-;2281:1;2266:17;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;2285:6;:15;;;2241:60;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2419:19;2441:130;2536:6;:14;;;;;;;;:::i;:::-;2551:1;2536:17;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;2555:6;:11;;;;;;;;:::i;:::-;2567:1;2555:14;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;2482:88;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2449:10;2441:40;;;;:130;;;;:::i;:::-;2419:152;;2816:6;2805:29;;;;;;;;;;;;:::i;:::-;2793:41;;2860:9;2849:20;;2047:834;;2042:3;;;;;:::i;:::-;;;;1997:884;;;;1762:1126;;1660:1228;;;:::o;6673:200:10:-;6756:12;6788:77;6809:6;6817:4;6788:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6781:84;;6673:200;;;;:::o;7067:396::-;7212:12;7245:18;7256:6;7245:10;:18::i;:::-;7237:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;7320:12;7334:23;7361:6;:19;;7381:4;7361:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7319:67;;;;7404:51;7421:7;7430:10;7442:12;7404:16;:51::i;:::-;7397:58;;;;7067:396;;;;;:::o;1140:326::-;1200:4;1457:1;1435:7;:19;;;:23;1428:30;;1140:326;;;:::o;7691:712::-;7841:12;7870:7;7866:530;;;7901:10;7894:17;;;;7866:530;8035:1;8015:10;:17;:21;8011:374;;;8213:10;8207:17;8274:15;8261:10;8257:2;8253:19;8246:44;8011:374;8356:12;8349:20;;;;;;;;;;;:::i;:::-;;;;;;;;7691:712;;;;;;:::o;88:117:14:-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:117;689:1;686;679:12;732:600;837:8;847:6;897:3;890:4;882:6;878:17;874:27;864:122;;905:79;;:::i;:::-;864:122;1018:6;1005:20;995:30;;1048:18;1040:6;1037:30;1034:117;;;1070:79;;:::i;:::-;1034:117;1184:4;1176:6;1172:17;1160:29;;1238:3;1230:4;1222:6;1218:17;1208:8;1204:32;1201:41;1198:128;;;1245:79;;:::i;:::-;1198:128;732:600;;;;;:::o;1338:623::-;1456:6;1464;1513:2;1501:9;1492:7;1488:23;1484:32;1481:119;;;1519:79;;:::i;:::-;1481:119;1667:1;1656:9;1652:17;1639:31;1697:18;1689:6;1686:30;1683:117;;;1719:79;;:::i;:::-;1683:117;1832:112;1936:7;1927:6;1916:9;1912:22;1832:112;:::i;:::-;1814:130;;;;1610:344;1338:623;;;;;:::o;1967:77::-;2004:7;2033:5;2022:16;;1967:77;;;:::o;2050:118::-;2137:24;2155:5;2137:24;:::i;:::-;2132:3;2125:37;2050:118;;:::o;2174:222::-;2267:4;2305:2;2294:9;2290:18;2282:26;;2318:71;2386:1;2375:9;2371:17;2362:6;2318:71;:::i;:::-;2174:222;;;;:::o;2402:126::-;2439:7;2479:42;2472:5;2468:54;2457:65;;2402:126;;;:::o;2534:96::-;2571:7;2600:24;2618:5;2600:24;:::i;:::-;2589:35;;2534:96;;;:::o;2636:118::-;2723:24;2741:5;2723:24;:::i;:::-;2718:3;2711:37;2636:118;;:::o;2760:222::-;2853:4;2891:2;2880:9;2876:18;2868:26;;2904:71;2972:1;2961:9;2957:17;2948:6;2904:71;:::i;:::-;2760:222;;;;:::o;2988:60::-;3016:3;3037:5;3030:12;;2988:60;;;:::o;3054:142::-;3104:9;3137:53;3155:34;3164:24;3182:5;3164:24;:::i;:::-;3155:34;:::i;:::-;3137:53;:::i;:::-;3124:66;;3054:142;;;:::o;3202:126::-;3252:9;3285:37;3316:5;3285:37;:::i;:::-;3272:50;;3202:126;;;:::o;3334:153::-;3411:9;3444:37;3475:5;3444:37;:::i;:::-;3431:50;;3334:153;;;:::o;3493:185::-;3607:64;3665:5;3607:64;:::i;:::-;3602:3;3595:77;3493:185;;:::o;3684:276::-;3804:4;3842:2;3831:9;3827:18;3819:26;;3855:98;3950:1;3939:9;3935:17;3926:6;3855:98;:::i;:::-;3684:276;;;;:::o;3966:117::-;4075:1;4072;4065:12;4116:237;4194:5;4235:3;4226:6;4221:3;4217:16;4213:26;4210:113;;;4242:79;;:::i;:::-;4210:113;4341:6;4332:15;;4116:237;;;;:::o;4359:553::-;4450:6;4499:2;4487:9;4478:7;4474:23;4470:32;4467:119;;;4505:79;;:::i;:::-;4467:119;4653:1;4642:9;4638:17;4625:31;4683:18;4675:6;4672:30;4669:117;;;4705:79;;:::i;:::-;4669:117;4810:85;4887:7;4878:6;4867:9;4863:22;4810:85;:::i;:::-;4800:95;;4596:309;4359:553;;;;:::o;4918:180::-;4966:77;4963:1;4956:88;5063:4;5060:1;5053:15;5087:4;5084:1;5077:15;5104:117;5213:1;5210;5203:12;5227:117;5336:1;5333;5326:12;5350:117;5459:1;5456;5449:12;5473:398;5571:4;5625:11;5612:25;5725:1;5719:4;5715:12;5704:8;5688:14;5684:29;5680:48;5660:18;5656:73;5646:168;;5733:79;;:::i;:::-;5646:168;5845:18;5835:8;5831:33;5823:41;;5576:295;5473:398;;;;:::o;5877:180::-;5925:77;5922:1;5915:88;6022:4;6019:1;6012:15;6046:4;6043:1;6036:15;6063:191;6103:3;6122:20;6140:1;6122:20;:::i;:::-;6117:25;;6156:20;6174:1;6156:20;:::i;:::-;6151:25;;6199:1;6196;6192:9;6185:16;;6220:3;6217:1;6214:10;6211:36;;;6227:18;;:::i;:::-;6211:36;6063:191;;;;:::o;6260:169::-;6344:11;6378:6;6373:3;6366:19;6418:4;6413:3;6409:14;6394:29;;6260:169;;;;:::o;6435:177::-;6575:29;6571:1;6563:6;6559:14;6552:53;6435:177;:::o;6618:366::-;6760:3;6781:67;6845:2;6840:3;6781:67;:::i;:::-;6774:74;;6857:93;6946:3;6857:93;:::i;:::-;6975:2;6970:3;6966:12;6959:19;;6618:366;;;:::o;6990:419::-;7156:4;7194:2;7183:9;7179:18;7171:26;;7243:9;7237:4;7233:20;7229:1;7218:9;7214:17;7207:47;7271:131;7397:4;7271:131;:::i;:::-;7263:139;;6990:419;;;:::o;7415:740::-;7508:4;7514:6;7570:11;7557:25;7670:1;7664:4;7660:12;7649:8;7633:14;7629:29;7625:48;7605:18;7601:73;7591:168;;7678:79;;:::i;:::-;7591:168;7790:18;7780:8;7776:33;7768:41;;7842:4;7829:18;7819:28;;7870:18;7862:6;7859:30;7856:117;;;7892:79;;:::i;:::-;7856:117;8000:2;7994:4;7990:13;7982:21;;8057:4;8049:6;8045:17;8029:14;8025:38;8019:4;8015:49;8012:136;;;8067:79;;:::i;:::-;8012:136;7521:634;7415:740;;;;;:::o;8161:122::-;8234:24;8252:5;8234:24;:::i;:::-;8227:5;8224:35;8214:63;;8273:1;8270;8263:12;8214:63;8161:122;:::o;8289:139::-;8335:5;8373:6;8360:20;8351:29;;8389:33;8416:5;8389:33;:::i;:::-;8289:139;;;;:::o;8434:329::-;8493:6;8542:2;8530:9;8521:7;8517:23;8513:32;8510:119;;;8548:79;;:::i;:::-;8510:119;8668:1;8693:53;8738:7;8729:6;8718:9;8714:22;8693:53;:::i;:::-;8683:63;;8639:117;8434:329;;;;:::o;8769:442::-;8918:4;8956:2;8945:9;8941:18;8933:26;;8969:71;9037:1;9026:9;9022:17;9013:6;8969:71;:::i;:::-;9050:72;9118:2;9107:9;9103:18;9094:6;9050:72;:::i;:::-;9132;9200:2;9189:9;9185:18;9176:6;9132:72;:::i;:::-;8769:442;;;;;;:::o;9217:90::-;9251:7;9294:5;9287:13;9280:21;9269:32;;9217:90;;;:::o;9313:116::-;9383:21;9398:5;9383:21;:::i;:::-;9376:5;9373:32;9363:60;;9419:1;9416;9409:12;9363:60;9313:116;:::o;9435:137::-;9489:5;9520:6;9514:13;9505:22;;9536:30;9560:5;9536:30;:::i;:::-;9435:137;;;;:::o;9578:345::-;9645:6;9694:2;9682:9;9673:7;9669:23;9665:32;9662:119;;;9700:79;;:::i;:::-;9662:119;9820:1;9845:61;9898:7;9889:6;9878:9;9874:22;9845:61;:::i;:::-;9835:71;;9791:125;9578:345;;;;:::o;9929:738::-;10020:4;10026:6;10082:11;10069:25;10182:1;10176:4;10172:12;10161:8;10145:14;10141:29;10137:48;10117:18;10113:73;10103:168;;10190:79;;:::i;:::-;10103:168;10302:18;10292:8;10288:33;10280:41;;10354:4;10341:18;10331:28;;10382:18;10374:6;10371:30;10368:117;;;10404:79;;:::i;:::-;10368:117;10512:2;10506:4;10502:13;10494:21;;10569:4;10561:6;10557:17;10541:14;10537:38;10531:4;10527:49;10524:136;;;10579:79;;:::i;:::-;10524:136;10033:634;9929:738;;;;;:::o;10673:86::-;10708:7;10748:4;10741:5;10737:16;10726:27;;10673:86;;;:::o;10765:118::-;10836:22;10852:5;10836:22;:::i;:::-;10829:5;10826:33;10816:61;;10873:1;10870;10863:12;10816:61;10765:118;:::o;10889:135::-;10933:5;10971:6;10958:20;10949:29;;10987:31;11012:5;10987:31;:::i;:::-;10889:135;;;;:::o;11030:325::-;11087:6;11136:2;11124:9;11115:7;11111:23;11107:32;11104:119;;;11142:79;;:::i;:::-;11104:119;11262:1;11287:51;11330:7;11321:6;11310:9;11306:22;11287:51;:::i;:::-;11277:61;;11233:115;11030:325;;;;:::o;11361:112::-;11444:22;11460:5;11444:22;:::i;:::-;11439:3;11432:35;11361:112;;:::o;11479:214::-;11568:4;11606:2;11595:9;11591:18;11583:26;;11619:67;11683:1;11672:9;11668:17;11659:6;11619:67;:::i;:::-;11479:214;;;;:::o;11699:143::-;11756:5;11787:6;11781:13;11772:22;;11803:33;11830:5;11803:33;:::i;:::-;11699:143;;;;:::o;11848:351::-;11918:6;11967:2;11955:9;11946:7;11942:23;11938:32;11935:119;;;11973:79;;:::i;:::-;11935:119;12093:1;12118:64;12174:7;12165:6;12154:9;12150:22;12118:64;:::i;:::-;12108:74;;12064:128;11848:351;;;;:::o;12205:332::-;12326:4;12364:2;12353:9;12349:18;12341:26;;12377:71;12445:1;12434:9;12430:17;12421:6;12377:71;:::i;:::-;12458:72;12526:2;12515:9;12511:18;12502:6;12458:72;:::i;:::-;12205:332;;;;;:::o;12543:751::-;12647:4;12653:6;12709:11;12696:25;12809:1;12803:4;12799:12;12788:8;12772:14;12768:29;12764:48;12744:18;12740:73;12730:168;;12817:79;;:::i;:::-;12730:168;12929:18;12919:8;12915:33;12907:41;;12981:4;12968:18;12958:28;;13009:18;13001:6;12998:30;12995:117;;;13031:79;;:::i;:::-;12995:117;13139:2;13133:4;13129:13;13121:21;;13196:4;13188:6;13184:17;13168:14;13164:38;13158:4;13154:49;13151:136;;;13206:79;;:::i;:::-;13151:136;12660:634;12543:751;;;;;:::o;13300:724::-;13377:4;13383:6;13439:11;13426:25;13539:1;13533:4;13529:12;13518:8;13502:14;13498:29;13494:48;13474:18;13470:73;13460:168;;13547:79;;:::i;:::-;13460:168;13659:18;13649:8;13645:33;13637:41;;13711:4;13698:18;13688:28;;13739:18;13731:6;13728:30;13725:117;;;13761:79;;:::i;:::-;13725:117;13869:2;13863:4;13859:13;13851:21;;13926:4;13918:6;13914:17;13898:14;13894:38;13888:4;13884:49;13881:136;;;13936:79;;:::i;:::-;13881:136;13390:634;13300:724;;;;;:::o;14030:168::-;14113:11;14147:6;14142:3;14135:19;14187:4;14182:3;14178:14;14163:29;;14030:168;;;;:::o;14204:146::-;14301:6;14296:3;14291;14278:30;14342:1;14333:6;14328:3;14324:16;14317:27;14204:146;;;:::o;14356:102::-;14397:6;14448:2;14444:7;14439:2;14432:5;14428:14;14424:28;14414:38;;14356:102;;;:::o;14486:314::-;14582:3;14603:70;14666:6;14661:3;14603:70;:::i;:::-;14596:77;;14683:56;14732:6;14727:3;14720:5;14683:56;:::i;:::-;14764:29;14786:6;14764:29;:::i;:::-;14759:3;14755:39;14748:46;;14486:314;;;;;:::o;14806:439::-;14955:4;14993:2;14982:9;14978:18;14970:26;;15006:71;15074:1;15063:9;15059:17;15050:6;15006:71;:::i;:::-;15124:9;15118:4;15114:20;15109:2;15098:9;15094:18;15087:48;15152:86;15233:4;15224:6;15216;15152:86;:::i;:::-;15144:94;;14806:439;;;;;;:::o;15251:122::-;15324:24;15342:5;15324:24;:::i;:::-;15317:5;15314:35;15304:63;;15363:1;15360;15353:12;15304:63;15251:122;:::o;15379:143::-;15436:5;15467:6;15461:13;15452:22;;15483:33;15510:5;15483:33;:::i;:::-;15379:143;;;;:::o;15528:351::-;15598:6;15647:2;15635:9;15626:7;15622:23;15618:32;15615:119;;;15653:79;;:::i;:::-;15615:119;15773:1;15798:64;15854:7;15845:6;15834:9;15830:22;15798:64;:::i;:::-;15788:74;;15744:128;15528:351;;;;:::o;15885:167::-;15922:3;15945:22;15961:5;15945:22;:::i;:::-;15936:31;;15989:4;15982:5;15979:15;15976:41;;15997:18;;:::i;:::-;15976:41;16044:1;16037:5;16033:13;16026:20;;15885:167;;;:::o;16058:225::-;16198:34;16194:1;16186:6;16182:14;16175:58;16267:8;16262:2;16254:6;16250:15;16243:33;16058:225;:::o;16289:366::-;16431:3;16452:67;16516:2;16511:3;16452:67;:::i;:::-;16445:74;;16528:93;16617:3;16528:93;:::i;:::-;16646:2;16641:3;16637:12;16630:19;;16289:366;;;:::o;16661:419::-;16827:4;16865:2;16854:9;16850:18;16842:26;;16914:9;16908:4;16904:20;16900:1;16889:9;16885:17;16878:47;16942:131;17068:4;16942:131;:::i;:::-;16934:139;;16661:419;;;:::o;17086:98::-;17137:6;17171:5;17165:12;17155:22;;17086:98;;;:::o;17190:147::-;17291:11;17328:3;17313:18;;17190:147;;;;:::o;17343:246::-;17424:1;17434:113;17448:6;17445:1;17442:13;17434:113;;;17533:1;17528:3;17524:11;17518:18;17514:1;17509:3;17505:11;17498:39;17470:2;17467:1;17463:10;17458:15;;17434:113;;;17581:1;17572:6;17567:3;17563:16;17556:27;17405:184;17343:246;;;:::o;17595:386::-;17699:3;17727:38;17759:5;17727:38;:::i;:::-;17781:88;17862:6;17857:3;17781:88;:::i;:::-;17774:95;;17878:65;17936:6;17931:3;17924:4;17917:5;17913:16;17878:65;:::i;:::-;17968:6;17963:3;17959:16;17952:23;;17703:278;17595:386;;;;:::o;17987:271::-;18117:3;18139:93;18228:3;18219:6;18139:93;:::i;:::-;18132:100;;18249:3;18242:10;;17987:271;;;;:::o;18264:99::-;18316:6;18350:5;18344:12;18334:22;;18264:99;;;:::o;18369:377::-;18457:3;18485:39;18518:5;18485:39;:::i;:::-;18540:71;18604:6;18599:3;18540:71;:::i;:::-;18533:78;;18620:65;18678:6;18673:3;18666:4;18659:5;18655:16;18620:65;:::i;:::-;18710:29;18732:6;18710:29;:::i;:::-;18705:3;18701:39;18694:46;;18461:285;18369:377;;;;:::o;18752:313::-;18865:4;18903:2;18892:9;18888:18;18880:26;;18952:9;18946:4;18942:20;18938:1;18927:9;18923:17;18916:47;18980:78;19053:4;19044:6;18980:78;:::i;:::-;18972:86;;18752:313;;;;:::o"},"methodIdentifiers":{"WETH()":"ad5c4648","factory()":"c45a0155","owner()":"8da5cb5b","swapMultiHop((address[],uint8[],address[],uint256,bytes[]))":"d4a3f3c7","swapMultiRoute((address[],uint8[],address[],uint256,bytes[])[])":"11eac87a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IDexHandlerFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address[]\",\"name\":\"routers\",\"type\":\"address[]\"},{\"internalType\":\"uint8[]\",\"name\":\"dexHandlerIds\",\"type\":\"uint8[]\"},{\"internalType\":\"address[]\",\"name\":\"tokenIn\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"internalType\":\"struct SwapMultiHop\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"swapMultiHop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address[]\",\"name\":\"routers\",\"type\":\"address[]\"},{\"internalType\":\"uint8[]\",\"name\":\"dexHandlerIds\",\"type\":\"uint8[]\"},{\"internalType\":\"address[]\",\"name\":\"tokenIn\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"internalType\":\"struct SwapMultiHop[]\",\"name\":\"params\",\"type\":\"tuple[]\"}],\"name\":\"swapMultiRoute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Aggregator.sol\":\"Aggregator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/Aggregator.sol\":{\"keccak256\":\"0xe1fb743034a1092657301b6580a531433d907044ddb916a79ef90e227fc37347\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84239f32781b4fbd52ccbd2baaa5be88d2732c2ebf3fa0c290884e3f6a63b6ab\",\"dweb:/ipfs/Qmd8rnyfUKsXXA6aosMrJSZ7dv9JxTxxZAFJUVasQFbCQK\"]},\"contracts/interfaces/IDexHandlerFactory.sol\":{\"keccak256\":\"0xbdd55926c5a2f2e602cb8f8aa74667521c3b95e7fd28eb06fbfd0ec0addc7718\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://97b8adbd5500ca5b9dc6885b7d1fcf8ddaa23ac1b61e148cad4d4305fe6cc5dc\",\"dweb:/ipfs/QmcdR61HA2rHw5J8SoPE1DYbZT1VrfxvzoE2Gjy4h3Rv2L\"]},\"contracts/libraries/Address.sol\":{\"keccak256\":\"0x258e710a1384bceb9e01171fdb99feb5962f3803aac4d714601f158f600aadb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://712fec301ab09770544828acf7defcb15dec5e05d261006ae24955ec61f4d44b\",\"dweb:/ipfs/QmTvf6habhq9YtgNY5gn9WegPE7zKcFmNZ9pQKja6svRcS\"]},\"contracts/libraries/SafeERC20.sol\":{\"keccak256\":\"0x21fe12c6254c78e2bf700193ad323c366379909a4ac6ab61a8d96d3be4894df5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a813a73a20bb830a0d824134440f5331907866c54b73f42d0c1b0f46ed792fa\",\"dweb:/ipfs/QmVQmHPHaTdBZaXWZmVk4rnAii8fuqTZpXCFtbReUh4t6s\"]},\"contracts/structs/SAggregator.sol\":{\"keccak256\":\"0xe261deb6fce32f181552680d8b4b68dc39dd190a9de897178667ad12faa34da3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e14e595642cd3ffd6337b9b98ea1a83fc9e77bf63acc225d4679604bed6436b1\",\"dweb:/ipfs/QmW4ZqVRorzWNzBNQRpWrb6dkMyh9gDohPqeeZhUFhtchA\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":4247,"contract":"contracts/Aggregator.sol:Aggregator","label":"factory","offset":0,"slot":"0","type":"t_contract(IDexHandlerFactory)4534"},{"astId":4249,"contract":"contracts/Aggregator.sol:Aggregator","label":"owner","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(IDexHandlerFactory)4534":{"encoding":"inplace","label":"contract IDexHandlerFactory","numberOfBytes":"20"}}}}},"contracts/interfaces/IDexHandlerFactory.sol":{"IDexHandlerFactory":{"abi":[{"inputs":[{"internalType":"uint8","name":"","type":"uint8"}],"name":"dexHandlers","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"id","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"dexHandler","type":"address"}],"name":"setDexHandler","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"dexHandlers(uint8)":"4fa29352","id()":"af640d0f","owner()":"8da5cb5b","setDexHandler(address)":"b6b2a82f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"dexHandlers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"id\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dexHandler\",\"type\":\"address\"}],\"name\":\"setDexHandler\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IDexHandlerFactory.sol\":\"IDexHandlerFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IDexHandlerFactory.sol\":{\"keccak256\":\"0xbdd55926c5a2f2e602cb8f8aa74667521c3b95e7fd28eb06fbfd0ec0addc7718\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://97b8adbd5500ca5b9dc6885b7d1fcf8ddaa23ac1b61e148cad4d4305fe6cc5dc\",\"dweb:/ipfs/QmcdR61HA2rHw5J8SoPE1DYbZT1VrfxvzoE2Gjy4h3Rv2L\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/libraries/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201bd662f1c2395b7c71a1cc1cbe6253a1378e423072a304cc0f0f4bb791e09b3064736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL 0xD6 PUSH3 0xF1C239 JUMPDEST PUSH29 0x71A1CC1CBE6253A1378E423072A304CC0F0F4BB791E09B3064736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ","sourceMap":"132:8274:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201bd662f1c2395b7c71a1cc1cbe6253a1378e423072a304cc0f0f4bb791e09b3064736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL 0xD6 PUSH3 0xF1C239 JUMPDEST PUSH29 0x71A1CC1CBE6253A1378E423072A304CC0F0F4BB791E09B3064736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ","sourceMap":"132:8274:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/Address.sol\":{\"keccak256\":\"0x258e710a1384bceb9e01171fdb99feb5962f3803aac4d714601f158f600aadb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://712fec301ab09770544828acf7defcb15dec5e05d261006ae24955ec61f4d44b\",\"dweb:/ipfs/QmTvf6habhq9YtgNY5gn9WegPE7zKcFmNZ9pQKja6svRcS\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/libraries/SafeERC20.sol":{"SafeERC20":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c2d233a04c3a655e35116ff0a53c8905736da59bf5a75f531cf1fa9bd12f209864736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xD2 CALLER LOG0 0x4C GASPRICE PUSH6 0x5E35116FF0A5 EXTCODECOPY DUP10 SDIV PUSH20 0x6DA59BF5A75F531CF1FA9BD12F209864736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ","sourceMap":"173:3797:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c2d233a04c3a655e35116ff0a53c8905736da59bf5a75f531cf1fa9bd12f209864736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xD2 CALLER LOG0 0x4C GASPRICE PUSH6 0x5E35116FF0A5 EXTCODECOPY DUP10 SDIV PUSH20 0x6DA59BF5A75F531CF1FA9BD12F209864736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ","sourceMap":"173:3797:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"contracts/libraries/Address.sol\":{\"keccak256\":\"0x258e710a1384bceb9e01171fdb99feb5962f3803aac4d714601f158f600aadb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://712fec301ab09770544828acf7defcb15dec5e05d261006ae24955ec61f4d44b\",\"dweb:/ipfs/QmTvf6habhq9YtgNY5gn9WegPE7zKcFmNZ9pQKja6svRcS\"]},\"contracts/libraries/SafeERC20.sol\":{\"keccak256\":\"0x21fe12c6254c78e2bf700193ad323c366379909a4ac6ab61a8d96d3be4894df5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a813a73a20bb830a0d824134440f5331907866c54b73f42d0c1b0f46ed792fa\",\"dweb:/ipfs/QmVQmHPHaTdBZaXWZmVk4rnAii8fuqTZpXCFtbReUh4t6s\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/libraries/UniERC20.sol":{"UniERC20":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220445e05d0d6303fec3a973bba3f083b48125176e7297ff640c92f1c347e7f13bf64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO MCOPY SDIV 0xD0 0xD6 ADDRESS EXTCODEHASH 0xEC GASPRICE SWAP8 EXTCODESIZE 0xBA EXTCODEHASH ADDMOD EXTCODESIZE BASEFEE SLT MLOAD PUSH23 0xE7297FF640C92F1C347E7F13BF64736F6C634300081800 CALLER ","sourceMap":"205:1438:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220445e05d0d6303fec3a973bba3f083b48125176e7297ff640c92f1c347e7f13bf64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO MCOPY SDIV 0xD0 0xD6 ADDRESS EXTCODEHASH 0xEC GASPRICE SWAP8 EXTCODESIZE 0xBA EXTCODEHASH ADDMOD EXTCODESIZE BASEFEE SLT MLOAD PUSH23 0xE7297FF640C92F1C347E7F13BF64736F6C634300081800 CALLER ","sourceMap":"205:1438:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/UniERC20.sol\":\"UniERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/libraries/Address.sol\":{\"keccak256\":\"0x258e710a1384bceb9e01171fdb99feb5962f3803aac4d714601f158f600aadb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://712fec301ab09770544828acf7defcb15dec5e05d261006ae24955ec61f4d44b\",\"dweb:/ipfs/QmTvf6habhq9YtgNY5gn9WegPE7zKcFmNZ9pQKja6svRcS\"]},\"contracts/libraries/SafeERC20.sol\":{\"keccak256\":\"0x21fe12c6254c78e2bf700193ad323c366379909a4ac6ab61a8d96d3be4894df5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a813a73a20bb830a0d824134440f5331907866c54b73f42d0c1b0f46ed792fa\",\"dweb:/ipfs/QmVQmHPHaTdBZaXWZmVk4rnAii8fuqTZpXCFtbReUh4t6s\"]},\"contracts/libraries/UniERC20.sol\":{\"keccak256\":\"0x480255fd11a141bdfdfc5ffdaf30b23444f1869d8b79b3616960bfe187ac5fcc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4ff7f4ef07d713959db898770e446359a7ff23ed5a5f1d3ae8aab190445dbfb\",\"dweb:/ipfs/QmcRTM3hvqTFN6bvLmcsPLjP97iDyygj4j2YviHCzERu6g\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}}}}}